H8S,H8/300 SERIES C/C++ COMPILER (V.7.00.00.000)   25-Mar-2013 17:11:20 PAGE   1

******* STACK FRAME INFORMATION ********

FILE NAME: C:\WorkSpace\FullMoni\FullMoni\resetprg.c

Function (File C:\WorkSpa, Line    56): PowerON_Reset

  Optimize Option Specified : No Allocation Information Available

Parameter Area Size     : 0x00000000 Byte(s)
Linkage Area Size       : 0x00000004 Byte(s)
Local Variable Size     : 0x00000000 Byte(s)
Temporary Size          : 0x00000000 Byte(s)
Register Save Area Size : 0x00000000 Byte(s)
Total Frame Size        : 0x00000004 Byte(s)

Used Runtime Library Name


H8S,H8/300 SERIES C/C++ COMPILER (V.7.00.00.000)   25-Mar-2013 17:11:20 PAGE   1

************ OBJECT LISTING ************

FILE NAME: C:\WorkSpace\FullMoni\FullMoni\resetprg.c

SCT OFFSET CODE               LABEL     INSTRUCTION OPERAND    COMMENT

PResetPRG                                                          ; section
         1:    /***********************************************************************/
         2:    /*                                                                     */
         3:    /*  FILE        :resetprg.c                                            */
         4:    /*  DATE        :Sun, Nov 15, 2009                                     */
         5:    /*  DESCRIPTION :Reset Program                                         */
         6:    /*  CPU TYPE    :H8SX/1658                                             */
         7:    /*                                                                     */
         8:    /*  This file is generated by Renesas Project Generator (Ver.4.16).    */
         9:    /*                                                                     */
        10:    /***********************************************************************/
        11:                      
        12:    
        13:    
        14:    #include    <machine.h>
        15:    #include    <_h_c_lib.h>
        16:    //#include  <stddef.h>                  // Remove the comment when you use errno
        17:    //#include  <stdlib.h>                  // Remove the comment when you use rand()
        18:    #include    "typedefine.h"
        19:    #include    "stacksct.h"
        20:    
        21:    extern void main(void);
        22:    __entry(vect=0) void PowerON_Reset(void);
        23:    //__interrupt(vect=1) void Manual_Reset(void);
        24:    
        25:    //#ifdef __cplusplus                // Enable I/O in the application(both SIM I/O and hardware I/O)
        26:    //extern "C" {
        27:    //#endif
        28:    //extern void _INIT_IOLIB(void);
        29:    //extern void _CLOSEALL(void);
        30:    //#ifdef __cplusplus
        31:    //}
        32:    //#endif
        33:    
        34:    //extern void srand(_UINT);     // Remove the comment when you use rand()
        35:    //extern _SBYTE *_s1ptr;                // Remove the comment when you use strtok()
        36:            
        37:    //#ifdef __cplusplus                // Remove the comment when you use Hardware Setup
        38:    //extern "C" {
        39:    //#endif
        40:    //extern void HardwareSetup(void);
        41:    //#ifdef __cplusplus
        42:    //}
        43:    //#endif
        44:    
        45:    //#ifdef __cplusplus            // Remove the comment when you use global class object
        46:    //extern "C" {                  // Sections C$INIT and C$END will be generated
        47:    //#endif
        48:    //extern void _CALL_INIT(void);
        49:    //extern void _CALL_END(void);
        50:    //#ifdef __cplusplus
        51:    //}
        52:    //#endif
        53:        
        54:    #pragma section ResetPRG
        55:    
        56:    __entry(vect=0) void PowerON_Reset(void)
  00000000                    _PowerON_Reset:                      ; function: PowerON_Reset
  00000000 7A0700000000           MOV.L       #STARTOF S+SIZEOF S,SP
        57:    { 
        58:    
        59:    // Remove the comment when you make the initial setting of SBR/VBR for H8SX
        60:    //  __asm{
        61:    //      mov.l   #0xFFFFFF00,er0
        62:    //      ldc.l   er0,sbr
        63:    //      mov.l   #0x00000000,er0
        64:    //      ldc.l   er0,vbr
        65:    //  }
        66:    
        67:        set_imask_ccr((_UBYTE)1);
  00000006 0480                   ORC.B       #H'80:8,CCR
        68:        _INITSCT();
  00000008 5E000000               JSR         @__INITSCT:24
        69:    
        70:    //  _CALL_INIT();                   // Remove the comment when you use global class object
        71:    
        72:    //  _INIT_IOLIB();                  // Enable I/O in the application(both SIM I/O and hardware I/O)
        73:    
        74:    //  errno=0;                        // Remove the comment when you use errno
        75:    //  srand((_UINT)1);                    // Remove the comment when you use rand()
        76:    //  _s1ptr=NULL;                    // Remove the comment when you use strtok()
        77:            
        78:    //  HardwareSetup();                // Remove the comment when you use Hardware Setup
        79:        set_imask_ccr((_UBYTE)0);
  0000000C 067F                   ANDC.B      #H'7F:8,CCR
        80:    
        81:        main();
  0000000E 5E000000               JSR         @_main:24
        82:    
        83:    //  _CLOSEALL();                    // Close I/O in the application(both SIM I/O andhardware I/O)
        84:    
        85:    //  _CALL_END();                    // Remove the comment when you use global class object
        86:        
        87:        sleep();
  00000012 0180                   SLEEP
  00000014 5470                   RTS
        88:    }
        89:    
        90:    //__interrupt(vect=1) void Manual_Reset(void)   // Remove the comment when you use Manual Reset
        91:    //{
        92:    //} 
$VECT0                                                             ; section
  00000000 00000000               .DATA.L     _PowerON_Reset
S                                                                  ; section
  00000000 00000200               .RES.W      256


