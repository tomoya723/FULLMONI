H8S,H8/300 SERIES C/C++ COMPILER (V.7.00.00.000)   21-Feb-2021 16:25:43 PAGE   1

******* STACK FRAME INFORMATION ********

FILE NAME: D:\WorkSpace\FullMoni\FullMoni\main.c

Function (File D:\WorkSpa, Line    71): main

  Optimize Option Specified : No Allocation Information Available

Parameter Area Size     : 0x00000000 Byte(s)
Linkage Area Size       : 0x00000004 Byte(s)
Local Variable Size     : 0x00000000 Byte(s)
Temporary Size          : 0x00000000 Byte(s)
Register Save Area Size : 0x00000000 Byte(s)
Total Frame Size        : 0x00000004 Byte(s)

Used Runtime Library Name


Function (File D:\WorkSpa, Line   162): Int_CAN2515

  Optimize Option Specified : No Allocation Information Available

Parameter Area Size     : 0x00000000 Byte(s)
Linkage Area Size       : 0x00000004 Byte(s)
Local Variable Size     : 0x00000010 Byte(s)
Temporary Size          : 0x00000002 Byte(s)
Register Save Area Size : 0x00000014 Byte(s)
Total Frame Size        : 0x0000002a Byte(s)

Used Runtime Library Name


Function (File D:\WorkSpa, Line  1176): Int_50msFunc

  Optimize Option Specified : No Allocation Information Available

Parameter Area Size     : 0x00000000 Byte(s)
Linkage Area Size       : 0x00000004 Byte(s)
Local Variable Size     : 0x00000000 Byte(s)
Temporary Size          : 0x00000000 Byte(s)
Register Save Area Size : 0x00000014 Byte(s)
Total Frame Size        : 0x00000018 Byte(s)

Used Runtime Library Name


Function (File D:\WorkSpa, Line  1479): Int_1msFunc

  Optimize Option Specified : No Allocation Information Available

Parameter Area Size     : 0x00000000 Byte(s)
Linkage Area Size       : 0x00000004 Byte(s)
Local Variable Size     : 0x00000000 Byte(s)
Temporary Size          : 0x00000000 Byte(s)
Register Save Area Size : 0x00000004 Byte(s)
Total Frame Size        : 0x00000008 Byte(s)

Used Runtime Library Name


H8S,H8/300 SERIES C/C++ COMPILER (V.7.00.00.000)   21-Feb-2021 16:25:43 PAGE   1

************ OBJECT LISTING ************

FILE NAME: D:\WorkSpace\FullMoni\FullMoni\main.c

SCT OFFSET CODE               LABEL     INSTRUCTION OPERAND    COMMENT

P                                                                  ; section
         1:    // --------------------------------------------------------------------
         2:    // Copylight (C) 2021, Tomoya Sato( https://blog.goo.ne.jp/nacci_tomoya )
         3:    //
         4:    // This file is part of FullMoni firmwere.
         5:    //
         6:    // FullMoni is free software: you can redistribute it and/or modify
         7:    // it under the terms of the GNU General Public License as published by
         8:    // the Free Software Foundation, either version 3 of the License, or
         9:    // (at your option ) any later version.
        10:    //
        11:    // FullMoni is distributed in the hope that it will be useful,
        12:    // but WITHIOUT ANY WARRANTY; without even the implied warranty of
        13:    // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.   See the
        14:    // GNU General Public License for more details.
        15:    //
        16:    // You should have received a copy of the GNU General Public License
        17:    // along with FullMoni. if not, see <http:/www.gnu.org/licenses/>.
        18:    //
        19:    // filename     :   main.c
        20:    // brief        :   FullMoni rev.C メインルーチン
        21:    // author       :   Tomoya Sato
        22:    // update       :   2021/02/21
        23:    // version      :   1.06
        24:    // --------------------------------------------------------------------
        25:    
        26:    // --------------------------------------------------------------------
        27:    // プロトタイプ宣言
        28:    // --------------------------------------------------------------------
        29:    void main(void);
        30:    #ifdef __cplusplus
        31:    extern "C" {
        32:    void abort(void);
        33:    }
        34:    #endif
        35:    
        36:    // --------------------------------------------------------------------
        37:    // システムヘッダファイル
        38:    // --------------------------------------------------------------------
        39:    //#include <machine.h>
        40:    
        41:    // --------------------------------------------------------------------
        42:    // ユーザーヘッダファイル
        43:    // --------------------------------------------------------------------
        44:    #include "dataregister.h"
        45:    #include "iodefine.h"
        46:    #include "init_system.h"
        47:    #include "TFTLCD35.h"
        48:    #include "CAN2515.h"
        49:    #include "spi.h"
        50:    #include "state_control.h"
        51:    
        52:    // --------------------------------------------------------------------
        53:    // グローバル変数宣言
        54:    // --------------------------------------------------------------------
        55:    volatile char version[5] = "v1.06";
        56:    
        57:    // --------------------------------------------------------------------
        58:    // グローバル構造体宣言
        59:    // --------------------------------------------------------------------
        60:    volatile e2p_data_t         g_e2p_data;
        61:    volatile CAN_data_t         g_CAN_data;
        62:    volatile MoTeC1_data_t      g_MoTeC1_data;
        63:    volatile Haltech1_data_t    g_Haltech1_data;
        64:    volatile Haltech2_data_t    g_Haltech2_data;
        65:    volatile Freedom2_data_t    g_Freedom2_data;
        66:    volatile Megasquirt1_data_t g_Megasquirt1_data;
        67:    
        68:    // --------------------------------------------------------------------
        69:    // メインルーチン
        70:    // --------------------------------------------------------------------
        71:    void main(void)
  00000000                    _main:                               ; function: main
        72:    {
        73:        // --------------------------------------------------------------------
        74:        // 各種機能初期化
        75:        // --------------------------------------------------------------------
        76:        Init_CPG();
  00000000 5E000000               JSR         @_Init_CPG:24
        77:        Init_INTC();
  00000004 5E000000               JSR         @_Init_INTC:24
        78:        Init_MSTP();
  00000008 5E000000               JSR         @_Init_MSTP:24
        79:        Init_GPIO();
  0000000C 5E000000               JSR         @_Init_GPIO:24
        80:        Init_BSC();
  00000010 5E000000               JSR         @_Init_BSC:24
        81:        Init_EXDMAC();
  00000014 5E000000               JSR         @_Init_EXDMAC:24
        82:        Init_DMAC();
  00000018 5E000000               JSR         @_Init_DMAC:24
        83:        Init_TPU();
  0000001C 5E000000               JSR         @_Init_TPU:24
        84:    //  Init_UART();    //モデル別対応の為state_controlで実行
        85:        Init_TFTLCD();
  00000020 5E000000               JSR         @_Init_TFTLCD:24
        86:        Init_SPI();
  00000024 5E000000               JSR         @_Init_SPI:24
        87:    //  Init_CAN();     //モデル別対応の為state_controlで実行
        88:        Init_ADS7843();
  00000028 5E000000               JSR         @_Init_ADS7843:24
        89:        Init_IIC();
  0000002C 5E000000               JSR         @_Init_IIC:24
        90:        
        91:        // --------------------------------------------------------------------
        92:        // データ初期化
        93:        // --------------------------------------------------------------------
        94:        Init_CAN_data();
  00000030 5E000000               JSR         @_Init_CAN_data:24
        95:        Init_MoTeC1_data();
  00000034 5E000000               JSR         @_Init_MoTeC1_data:24
        96:        Init_Haltech1_data();
  00000038 5E000000               JSR         @_Init_Haltech1_data:24
        97:        Init_Haltech2_data();
  0000003C 5E000000               JSR         @_Init_Haltech2_data:24
        98:        Init_Freedom2_data();
  00000040 5E000000               JSR         @_Init_Freedom2_data:24
        99:    //  Init_MSquirt1_data();
       100:    
       101:        // --------------------------------------------------------------------
       102:        // FONTデータ展開(Flash→内部RAM)
       103:        // --------------------------------------------------------------------
       104:        FONT_open();
  00000044 5E000000               JSR         @_FONT_open:24
       105:        
       106:        // --------------------------------------------------------------------
       107:        // 初期ステート定義
       108:        // --------------------------------------------------------------------
       109:        A001();
  00000048 5E000000               JSR         @_A001:24
  0000004C                    L7742:                                
       110:        
       111:        // --------------------------------------------------------------------
       112:        // メインループ
       113:        // --------------------------------------------------------------------
       114:        while(1)
       115:        {
       116:            state_control();        // 状態別処理実行
  0000004C 5E000000               JSR         @_state_control:24
  00000050 4000                   BRA         L7742:8
       117:        }
       118:    }
       119:    
       120:    // --------------------------------------------------------------------
       121:    // インライン関数宣言
       122:    // --------------------------------------------------------------------
       123:    #pragma inline (Touch_Decision)
       124:    #pragma inline (Beep_OneShotMin_control)
       125:    #pragma inline (Beep_OneShotMax_control)
       126:    #pragma inline (Beep_TwoShotMin_control)
       127:    
       128:    // --------------------------------------------------------------------
       129:    // インライン関数プロトタイプ宣言
       130:    // --------------------------------------------------------------------
       131:    static void Touch_Decision(void);
       132:    static void Beep_OneShotMin_control(void);
       133:    static void Beep_OneShotMax_control(void);
       134:    static void Beep_TwoShotMin_control(void);
       135:    
       136:    // --------------------------------------------------------------------
       137:    // グローバル変数宣言
       138:    // --------------------------------------------------------------------
       139:    volatile long           g_int50mscnt;
       140:    volatile unsigned int   touch_done_flg;
       141:    volatile unsigned int   touch_drag_flg;
       142:    volatile unsigned int   g_PressX, g_PressY;
       143:    volatile unsigned int   g_DragX, g_DragY;
       144:    volatile unsigned int   g_refresh_done;
       145:    volatile unsigned int   g_led_o_max_flg;
       146:    volatile unsigned int   g_led_o_min_flg;
       147:    volatile unsigned int   g_led_r_max_flg;
       148:    volatile unsigned int   g_led_r_min_flg;
       149:    volatile unsigned int   g_can_rcv_timer;
       150:    volatile unsigned int   g_can_error_cnt;
       151:    static unsigned int     touch_cnt;
       152:    static unsigned int     Beep_OneShotMin_cnt;
       153:    static unsigned int     Beep_OneShotMax_cnt;
       154:    static unsigned int     Beep_TwoShotMin_cnt;
       155:    static unsigned int     master_warning_cnt;
       156:    static unsigned int     g_shift_timing_cnt;
       157:    static unsigned int     LEDonoff_cnt;
       158:    
       159:    // --------------------------------------------------------------------
       160:    // MCP2515 CAN IRQ 外部割り込み
       161:    // --------------------------------------------------------------------
       162:    void Int_CAN2515(void)
  00000052                    _Int_CAN2515:                        ; function: Int_CAN2515
  00000052 01306DF2               STM.L       (ER2-ER5),@-SP
  00000056 01006DF6               PUSH.L      ER6
  0000005A 79370012               SUB.W       #H'0012:16,R7
       163:    {
       164:        // --------------------------------------------------------------------
       165:        // ローカル変数宣言
       166:        // --------------------------------------------------------------------
       167:        unsigned char CAN_rcv_INTF, can_rcv[14];
       168:        signed short msgID;
       169:        static unsigned int can_rcv_cnt;
       170:        
       171:        // --------------------------------------------------------------------
       172:        // 割り込みフラグクリア
       173:        // --------------------------------------------------------------------
       174:        INTC.ISR.BIT.IRQ3F = 0;
  0000005E 7A0400000000           MOV.L       #_Onetime_Peakclear_cnt,ER4
  00000064 7F377230               BCLR.B      #3,@H'00FFFF37:8
       175:        
       176:        // --------------------------------------------------------------------
       177:        // MCP2515割り込み要因別処理
       178:        // --------------------------------------------------------------------
       179:        CAN_rcv_INTF = CANReadReg(CANINTF);
  00000068 79002C03               MOV.W       #H'2C03:16,R0
  0000006C 5E000000               JSR         @_CANRegRead2B:24
  00000070 0C8A                   MOV.B       R0L,R2L
  00000072 0C82                   MOV.B       R0L,R2H
       180:        
       181:    //  if((CAN_rcv_INTF & 0x20) == 0x20)   // エラー割り込みフラグビット(EFLGレジスタの複数要因)確定
       182:    //  {
       183:            g_can_error_cnt = CANReadReg(REC);  // 受信エラーカウンターストア
  00000074 79001D03               MOV.W       #H'1D03:16,R0
  00000078 5E000000               JSR         @_CANRegRead2B:24
  0000007C 1750                   EXTU.W      R0
  0000007E 6BA000000000           MOV.W       R0,@_g_can_error_cnt:32
       184:    //  }
       185:    //  else
       186:    //  {
       187:    //      g_can_error_cnt = 0;
       188:    //  }
       189:        
       190:        if((CAN_rcv_INTF & 0x02) == 0x02)   // 受信バッファ1フル割り込みフラグビット確定
  00000084 731A                   BTST.B      #1,R2L
  00000086 58700000               BEQ         L7744:16
       191:        {
       192:            CANRxB1Read(&can_rcv[1], 8);
  0000008A 0FF1                   MOV.L       SP,ER1
  0000008C 0A31                   ADD.W       #3:3,R1
  0000008E 017D170D               MOV.B       #H'0D:8,@(1:2,SP)
  00000092 79000194               MOV.W       #H'0194:16,R0
  00000096 5E000000               JSR         @_CANTxRxBufRW:24
       193:            
       194:            msgID = MAKE_SID(can_rcv[1], can_rcv[2]);       // ID作成
  0000009A 6E790003               MOV.B       @(3:16,SP),R1L
  0000009E 1751                   EXTU.W      R1
  000000A0 03831011               SHLL.W      #3:5,R1
  000000A4 6E780004               MOV.B       @(4:16,SP),R0L
  000000A8 1750                   EXTU.W      R0
  000000AA 11D0                   SHAR.W      #2,R0
  000000AC 11D0                   SHAR.W      #2,R0
  000000AE 1190                   SHAR.W      R0
  000000B0 6401                   OR.W        R0,R1
  000000B2 0D18                   MOV.W       R1,E0
  000000B4 6FF10010               MOV.W       R1,@(H'0010:16,SP)
       195:            
       196:            if(Onetime_Peakclear_cnt > 0) Onetime_Peakclear_cnt --;
  000000B8 6940                   MOV.W       @ER4,R0
  000000BA 4700                   BEQ         L7785:8
  000000BC 7DC01A10               SUB.W       #1:3,@ER4
  000000C0                    L7785:                                
       197:            
       198:            if          (g_e2p_data.E2P_1.model == CAN_std)
  000000C0 7A0300000000           MOV.L       #_g_e2p_data,ER3
  000000C6 6E380002               MOV.B       @(2:16,ER3),R0L
  000000CA 58700000               BEQ         L7788:16
       199:            {
       200:                    if      ((msgID == g_e2p_data.E2P_1.CAN_ID1) && (g_e2p_data.E2P_1.CANcontrol.BIT.CAN_ch1 == 1))
       201:                    {
       202:                                g_CAN_data.ID1.DATA1                = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       203:                                g_CAN_data.ID1.DATA2                = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       204:                                g_CAN_data.ID1.DATA3                = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       205:                                g_CAN_data.ID1.DATA4                = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       206:                    }
       207:                    else if ((msgID == g_e2p_data.E2P_1.CAN_ID2) && (g_e2p_data.E2P_1.CANcontrol.BIT.CAN_ch2 == 1))
       208:                    {
       209:                                g_CAN_data.ID2.DATA1                = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       210:                                g_CAN_data.ID2.DATA2                = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       211:                                g_CAN_data.ID2.DATA3                = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       212:                                g_CAN_data.ID2.DATA4                = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       213:                    }
       214:                    else if ((msgID == g_e2p_data.E2P_1.CAN_ID3) && (g_e2p_data.E2P_1.CANcontrol.BIT.CAN_ch3 == 1))
       215:                    {
       216:                                g_CAN_data.ID3.DATA1                = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       217:                                g_CAN_data.ID3.DATA2                = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       218:                                g_CAN_data.ID3.DATA3                = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       219:                                g_CAN_data.ID3.DATA4                = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       220:                    }
       221:                    else if ((msgID == g_e2p_data.E2P_1.CAN_ID4) && (g_e2p_data.E2P_1.CANcontrol.BIT.CAN_ch4 == 1))
       222:                    {
       223:                                g_CAN_data.ID4.DATA1                = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       224:                                g_CAN_data.ID4.DATA2                = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       225:                                g_CAN_data.ID4.DATA3                = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       226:                                g_CAN_data.ID4.DATA4                = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       227:                    }
       228:                    else if ((msgID == g_e2p_data.E2P_1.CAN_ID5) && (g_e2p_data.E2P_1.CANcontrol.BIT.CAN_ch5 == 1))
       229:                    {
       230:                                g_CAN_data.ID5.DATA1                = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       231:                                g_CAN_data.ID5.DATA2                = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       232:                                g_CAN_data.ID5.DATA3                = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       233:                                g_CAN_data.ID5.DATA4                = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       234:                    }
       235:                    else if ((msgID == g_e2p_data.E2P_1.CAN_ID6) && (g_e2p_data.E2P_1.CANcontrol.BIT.CAN_ch6 == 1))
       236:                    {
       237:                                g_CAN_data.ID6.DATA1                = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       238:                                g_CAN_data.ID6.DATA2                = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       239:                                g_CAN_data.ID6.DATA3                = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       240:                                g_CAN_data.ID6.DATA4                = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       241:                    }
       242:            
       243:            }
       244:            else if (g_e2p_data.E2P_1.model == MoTeC1)
  000000CE 01766838A001           CMP.B       #1:8,@(2:2,ER3)
  000000D4 58700000               BEQ         L7790:16
       245:            {
       246:                switch(msgID)
       247:                {
       248:                    case 0x5F0:
       249:                                if(g_can_rcv_timer >= 10)       // 前回受信時から10mSec以上経過している場合
       250:                                {
       251:                                        can_rcv_cnt = 0;        //  0 データ先頭
       252:                                        g_MoTeC1_data.RPM                   = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       253:                                        g_MoTeC1_data.ThrottlePosition      = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       254:                                        g_MoTeC1_data.ManifoldPressure      = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       255:                                        g_MoTeC1_data.InletAirTemp          = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       256:                                        can_rcv_cnt ++;
       257:                                }
       258:                                else
       259:                                {
       260:                                    if      (can_rcv_cnt ==  1) //  1
       261:                                    {
       262:                                        g_MoTeC1_data.EngineTemp            = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       263:                                        g_MoTeC1_data.Lambda1               = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       264:                                        g_MoTeC1_data.Lambda2               = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       265:                                        g_MoTeC1_data.ExhaustPressure       = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       266:                                        can_rcv_cnt ++;
       267:                                    }
       268:                                    else if (can_rcv_cnt ==  2) //  2
       269:                                    {
       270:                                        g_MoTeC1_data.MassAirFlow           = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       271:                                        g_MoTeC1_data.FuelTemp              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       272:                                        g_MoTeC1_data.FuelPressure          = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       273:                                        g_MoTeC1_data.OilTemp               = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       274:                                        can_rcv_cnt ++;
       275:                                    }
       276:                                    else if (can_rcv_cnt ==  3) //  3
       277:                                    {
       278:                                        g_MoTeC1_data.OilPressure           = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       279:                                        // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       280:                                        // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       281:                                        // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       282:                                        can_rcv_cnt ++;
       283:                                    }
       284:                                    else if (can_rcv_cnt ==  4) //  4
       285:                                    {
       286:                                        g_MoTeC1_data.ExhaustTemp1          = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       287:                                        g_MoTeC1_data.ExhaustTemp2          = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       288:                                        // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       289:                                        // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       290:                                        can_rcv_cnt ++;
       291:                                    }
       292:                                    else if (can_rcv_cnt ==  5) //  5
       293:                                    {
       294:                                        // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       295:                                        // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       296:                                        g_MoTeC1_data.BatteryVoltage        = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       297:                                        g_MoTeC1_data.ECUTemp               = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       298:                                        can_rcv_cnt ++;
       299:                                    }
       300:                                    else if (can_rcv_cnt ==  6) //  6
       301:                                    {
       302:                                        // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       303:                                        // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       304:                                        // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       305:                                        // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       306:                                        can_rcv_cnt ++;
       307:                                    }
       308:                                    else if (can_rcv_cnt ==  7) //  7
       309:                                    {
       310:                                        // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       311:                                        g_MoTeC1_data.GroundSpeed           = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       312:                                        // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       313:                                        // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       314:                                        can_rcv_cnt ++;
       315:                                    }
       316:                                    else if (can_rcv_cnt ==  8) //  8
       317:                                    {
       318:                                        // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       319:                                        // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       320:                                        // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       321:                                        // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       322:                                        can_rcv_cnt ++;
       323:                                    }
       324:                                    else if (can_rcv_cnt ==  9) //  9
       325:                                    {
       326:                                        // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       327:                                        g_MoTeC1_data.AimLambda1            = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       328:                                        g_MoTeC1_data.AimLambda2            = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       329:                                        // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       330:                                        can_rcv_cnt ++;
       331:                                    }
       332:                                    else if (can_rcv_cnt == 10) // 10
       333:                                    {
       334:                                        // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       335:                                        g_MoTeC1_data.IgnitionAdvance       = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       336:                                        // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       337:                                        // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       338:                                        can_rcv_cnt ++;
       339:                                    }
       340:                                    else if (can_rcv_cnt == 11) // 11
       341:                                    {
       342:                                        // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       343:                                        // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       344:                                        // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       345:                                        // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       346:                                        can_rcv_cnt ++;
       347:                                    }
       348:                                    else if (can_rcv_cnt == 12) // 12
       349:                                    {
       350:                                        // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       351:                                        // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       352:                                        // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       353:                                        // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       354:                                        can_rcv_cnt ++;
       355:                                    }
       356:                                    else if (can_rcv_cnt == 13) // 13
       357:                                    {
       358:                                        // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       359:                                        // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       360:                                        // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       361:                                        g_MoTeC1_data.InjectorDuty          = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       362:                                        can_rcv_cnt ++;
       363:                                    }
       364:                                    else if (can_rcv_cnt == 14) // 14
       365:                                    {
       366:                                        g_MoTeC1_data.Gear                  = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       367:                                        // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       368:                                        // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       369:                                        // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       370:                                        can_rcv_cnt ++;
       371:                                    }
       372:                                    else if (can_rcv_cnt == 15) // 15
       373:                                    {
       374:                                        // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       375:                                        // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       376:                                        // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       377:                                        // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       378:                                        can_rcv_cnt ++;
       379:                                    }
       380:                                    else if (can_rcv_cnt == 16) // 16
       381:                                    {
       382:                                        // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       383:                                        // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       384:                                        // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       385:                                        // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       386:                                        can_rcv_cnt ++;
       387:                                    }
       388:                                    else if (can_rcv_cnt == 17) // 17
       389:                                    {
       390:                                        // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       391:                                        // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       392:                                        // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       393:                                        // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       394:                                        can_rcv_cnt ++;
       395:                                    }
       396:                                }
       397:                                
       398:                                g_can_rcv_timer = 0;    // タイマーリセット
       399:                                default: break;
       400:                }
       401:            }
       402:            else if (g_e2p_data.E2P_1.model == MoTeC2)
  000000D8 01766838A002           CMP.B       #2:8,@(2:2,ER3)
  000000DE 58700000               BEQ         L7792:16
       403:            {
       404:                switch(msgID)
       405:                {
       406:                    case 0x0E8:
       407:                                if((can_rcv[6] == 0x82) && (can_rcv[7] == 0x81) && (can_rcv[8] == 0x80))
       408:                                {
       409:                                    can_rcv_cnt = 0;
       410:                                }
       411:                                else
       412:                                {
       413:                                    //
       414:                                }
       415:                                if      (can_rcv_cnt ==  0) //  0
       416:                                {
       417:                                    // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       418:                                    // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       419:                                    g_MoTeC1_data.RPM                   = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       420:                                    g_MoTeC1_data.ThrottlePosition      = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       421:                                    can_rcv_cnt ++;
       422:                                }
       423:                                else if (can_rcv_cnt ==  1) //  1
       424:                                {
       425:                                    g_MoTeC1_data.ManifoldPressure      = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       426:                                    g_MoTeC1_data.InletAirTemp          = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       427:                                    g_MoTeC1_data.EngineTemp            = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       428:                                    g_MoTeC1_data.Lambda1               = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       429:                                    can_rcv_cnt ++;
       430:                                }
       431:                                else if (can_rcv_cnt ==  2) //  2
       432:                                {
       433:                                    g_MoTeC1_data.Lambda2               = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       434:                                    g_MoTeC1_data.ExhaustPressure       = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       435:                                    g_MoTeC1_data.MassAirFlow           = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       436:                                    g_MoTeC1_data.FuelTemp              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       437:                                    can_rcv_cnt ++;
       438:                                }
       439:                                else if (can_rcv_cnt ==  3) //  3
       440:                                {
       441:                                    g_MoTeC1_data.FuelPressure          = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       442:                                    g_MoTeC1_data.OilTemp               = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       443:                                    g_MoTeC1_data.OilPressure           = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       444:                                    // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       445:                                    can_rcv_cnt ++;
       446:                                }
       447:                                else if (can_rcv_cnt ==  4) //  4
       448:                                {
       449:                                    // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       450:                                    // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       451:                                    g_MoTeC1_data.ExhaustTemp1          = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       452:                                    g_MoTeC1_data.ExhaustTemp2          = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       453:                                    can_rcv_cnt ++;
       454:                                }
       455:                                else if (can_rcv_cnt ==  5) //  5
       456:                                {
       457:                                    // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       458:                                    // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       459:                                    // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       460:                                    // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       461:                                    can_rcv_cnt ++;
       462:                                }
       463:                                else if (can_rcv_cnt ==  6) //  6
       464:                                {
       465:                                    g_MoTeC1_data.BatteryVoltage        = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       466:                                    g_MoTeC1_data.ECUTemp               = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       467:                                    // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       468:                                    // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       469:                                    can_rcv_cnt ++;
       470:                                }
       471:                                else if (can_rcv_cnt ==  7) //  7
       472:                                {
       473:                                    // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       474:                                    // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       475:                                    // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       476:                                    g_MoTeC1_data.GroundSpeed           = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       477:                                    can_rcv_cnt ++;
       478:                                }
       479:                                else if (can_rcv_cnt ==  8) //  8
       480:                                {
       481:                                    // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       482:                                    // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       483:                                    // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       484:                                    // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       485:                                    can_rcv_cnt ++;
       486:                                }
       487:                                else if (can_rcv_cnt ==  9) //  9
       488:                                {
       489:                                    // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       490:                                    // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       491:                                    // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       492:                                    g_MoTeC1_data.AimLambda1            = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       493:                                    can_rcv_cnt ++;
       494:                                }
       495:                                else if (can_rcv_cnt == 10) // 10
       496:                                {
       497:                                    g_MoTeC1_data.AimLambda2            = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       498:                                    // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       499:                                    // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       500:                                    g_MoTeC1_data.IgnitionAdvance       = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       501:                                    can_rcv_cnt ++;
       502:                                }
       503:                                else if (can_rcv_cnt == 11) // 11
       504:                                {
       505:                                    // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       506:                                    // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       507:                                    // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       508:                                    // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       509:                                    can_rcv_cnt ++;
       510:                                }
       511:                                else if (can_rcv_cnt == 12) // 12
       512:                                {
       513:                                    // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       514:                                    // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       515:                                    // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       516:                                    // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       517:                                    can_rcv_cnt ++;
       518:                                }
       519:                                else if (can_rcv_cnt == 13) // 13
       520:                                {
       521:                                    // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       522:                                    // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       523:                                    // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       524:                                    // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       525:                                    can_rcv_cnt ++;
       526:                                }
       527:                                else if (can_rcv_cnt == 14) // 14
       528:                                {
       529:                                    // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       530:                                    g_MoTeC1_data.InjectorDuty          = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       531:                                    g_MoTeC1_data.Gear                  = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       532:                                    // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       533:                                    can_rcv_cnt ++;
       534:                                }
       535:                                else if (can_rcv_cnt == 15) // 15
       536:                                {
       537:                                    // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       538:                                    // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       539:                                    // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       540:                                    // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       541:                                    can_rcv_cnt ++;
       542:                                }
       543:                                else if (can_rcv_cnt == 16) // 16
       544:                                {
       545:                                    // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       546:                                    // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       547:                                    // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       548:                                    // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       549:                                    can_rcv_cnt ++;
       550:                                }
       551:                                else if (can_rcv_cnt == 17) // 17
       552:                                {
       553:                                    // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       554:                                    // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       555:                                    // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       556:                                    // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       557:                                    can_rcv_cnt ++;
       558:                                }
       559:                                else if (can_rcv_cnt == 18) // 18
       560:                                {
       561:                                    // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       562:                                    // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       563:                                    // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       564:                                    // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       565:                                    can_rcv_cnt ++;
       566:                                }
       567:                                else if (can_rcv_cnt == 19) // 19
       568:                                {
       569:                                    // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       570:                                    // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       571:                                    // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       572:                                    // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       573:                                    can_rcv_cnt ++;
       574:                                }
       575:                                else if (can_rcv_cnt == 20) // 20
       576:                                {
       577:                                    // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       578:                                    // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       579:                                    // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       580:                                    // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       581:                                    can_rcv_cnt ++;
       582:                                }
       583:                                else if (can_rcv_cnt == 21) // 21
       584:                                {
       585:                                    // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       586:                                    // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       587:                                    // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       588:                                    // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       589:                                    can_rcv_cnt ++;
       590:                                }
       591:                                default: break;
       592:                }
       593:            }
       594:            else if (g_e2p_data.E2P_1.model == Haltech1)
  000000E2 01766838A003           CMP.B       #3:8,@(2:2,ER3)
  000000E8 58700000               BEQ         L7794:16
       595:            {
       596:                switch(msgID)
       597:                {
       598:                    case 0x010:
       599:                                g_Haltech1_data.RPM                 = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       600:                                g_Haltech1_data.GroundSpeed         = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       601:                                g_Haltech1_data.OilPressure         = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       602:                                // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       603:                                break;
       604:                    case 0x011:
       605:                                g_Haltech1_data.EngineTemp          = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       606:                                g_Haltech1_data.FuelPressure        = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       607:                                g_Haltech1_data.BatteryVoltage      = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       608:                                g_Haltech1_data.ThrottlePosition    = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       609:                                break;
       610:                    case 0x012:
       611:                                g_Haltech1_data.ManifoldPressure    = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       612:                                g_Haltech1_data.InletAirTemp        = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       613:                                // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       614:                                g_Haltech1_data.Lambda              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       615:                                break;
       616:                    case 0x013:
       617:                                g_Haltech1_data.IgnitionAdvance     = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       618:                                g_Haltech1_data.Gear                = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       619:                                g_Haltech1_data.InjectorDuty        = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       620:                                // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       621:                                default: break;
       622:                }
       623:            }
       624:            else if (g_e2p_data.E2P_1.model == Haltech2)
  000000EC 01766838A004           CMP.B       #4:8,@(2:2,ER3)
  000000F2 58600000               BNE         L7744:16
       625:            {
       626:                switch(msgID)
  000000F6 79280360               CMP.W       #H'0360:16,E0
  000000FA 58700000               BEQ         L7754:16
  000000FE 79280361               CMP.W       #H'0361:16,E0
  00000102 58700000               BEQ         L7755:16
  00000106 79280362               CMP.W       #H'0362:16,E0
  0000010A 58700000               BEQ         L7756:16
  0000010E 79280368               CMP.W       #H'0368:16,E0
  00000112 58700000               BEQ         L7757:16
  00000116 79280370               CMP.W       #H'0370:16,E0
  0000011A 58700000               BEQ         L7758:16
  0000011E 79280372               CMP.W       #H'0372:16,E0
  00000122 58700000               BEQ         L7759:16
  00000126 79280373               CMP.W       #H'0373:16,E0
  0000012A 4700                   BEQ         L7760:8
  0000012C 792803E0               CMP.W       #H'03E0:16,E0
  00000130 58600000               BNE         L7744:16
       627:                {
       628:                    case 0x360:
       629:                                g_Haltech2_data.RPM                 = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       630:                                g_Haltech2_data.ManifoldPressure    = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       631:                                g_Haltech2_data.ThrottlePosition    = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       632:                                // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       633:                                break;
       634:                    case 0x361:
       635:                                g_Haltech2_data.FuelPressure        = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       636:                                g_Haltech2_data.OilPressure         = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       637:                                // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       638:                                // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       639:                                break;
       640:                    case 0x362:
       641:                                g_Haltech2_data.InjectorDuty        = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       642:                                // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       643:                                g_Haltech2_data.IgnitionAdvance1    = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       644:                                g_Haltech2_data.IgnitionAdvance2    = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       645:                                break;
       646:                    case 0x368:
       647:                                g_Haltech2_data.Lambda              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       648:                                // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       649:                                // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       650:                                // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       651:                                break;
       652:                    case 0x370:
       653:                                g_Haltech2_data.GroundSpeed         = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       654:                                g_Haltech2_data.Gear                = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       655:                                // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       656:                                // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       657:                                break;
       658:                    case 0x372:
       659:                                g_Haltech2_data.BatteryVoltage      = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       660:                                g_Haltech2_data.InletAirTemp2       = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       661:                                // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       662:                                g_Haltech2_data.BaroPressure        = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       663:                                break;
       664:                    case 0x373:
       665:                                g_Haltech2_data.EGT                 = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       666:                                // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       667:                                // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       668:                                // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       669:                                break;
       670:                    case 0x3E0:
       671:                                g_Haltech2_data.EngineTemp          = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
  00000134 6E710008               MOV.B       @(8:16,SP),R1H
  00000138 1899                   SUB.B       R1L,R1L
  0000013A 6E780009               MOV.B       @(9:16,SP),R0L
  0000013E 1750                   EXTU.W      R0
  00000140 0901                   ADD.W       R0,R1
  00000142 7A0300000000           MOV.L       #_g_Haltech2_data,ER3
  00000148 6FB1001E               MOV.W       R1,@(H'001E:16,ER3)
       672:                                g_Haltech2_data.InletAirTemp1       = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
  0000014C 6E71000A               MOV.B       @(H'000A:16,SP),R1H
  00000150 1899                   SUB.B       R1L,R1L
  00000152 6E78000B               MOV.B       @(H'000B:16,SP),R0L
  00000156 0901                   ADD.W       R0,R1
  00000158 6FB10020               MOV.W       R1,@(H'0020:16,ER3)
       673:                                g_Haltech2_data.FuelTemp            = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
  0000015C 6E71000C               MOV.B       @(H'000C:16,SP),R1H
  00000160 1899                   SUB.B       R1L,R1L
  00000162 6E78000D               MOV.B       @(H'000D:16,SP),R0L
  00000166 0901                   ADD.W       R0,R1
  00000168 6FB10022               MOV.W       R1,@(H'0022:16,ER3)
       674:                                g_Haltech2_data.OilTemp             = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
  0000016C 6E71000E               MOV.B       @(H'000E:16,SP),R1H
  00000170 1899                   SUB.B       R1L,R1L
  00000172 6E78000F               MOV.B       @(H'000F:16,SP),R0L
  00000176 0901                   ADD.W       R0,R1
  00000178 6FB10024               MOV.W       R1,@(H'0024:16,ER3)
  0000017C 5A000000               JMP         @L7744:24
  00000180                    L7760:                                
  00000180 6E710008               MOV.B       @(8:16,SP),R1H
  00000184 1899                   SUB.B       R1L,R1L
  00000186 6E780009               MOV.B       @(9:16,SP),R0L
  0000018A 1750                   EXTU.W      R0
  0000018C 0901                   ADD.W       R0,R1
  0000018E 6BA100000000           MOV.W       R1,@(_g_Haltech2_data+H'0000001C):32
  00000194 5A000000               JMP         @L7744:24
  00000198                    L7759:                                
  00000198 6E710008               MOV.B       @(8:16,SP),R1H
  0000019C 1899                   SUB.B       R1L,R1L
  0000019E 6E780009               MOV.B       @(9:16,SP),R0L
  000001A2 1750                   EXTU.W      R0
  000001A4 0901                   ADD.W       R0,R1
  000001A6 7A0300000000           MOV.L       #_g_Haltech2_data,ER3
  000001AC 6FB10016               MOV.W       R1,@(H'0016:16,ER3)
  000001B0 6E71000A               MOV.B       @(H'000A:16,SP),R1H
  000001B4 1899                   SUB.B       R1L,R1L
  000001B6 6E78000B               MOV.B       @(H'000B:16,SP),R0L
  000001BA 0901                   ADD.W       R0,R1
  000001BC 6FB10018               MOV.W       R1,@(H'0018:16,ER3)
  000001C0 6E71000E               MOV.B       @(H'000E:16,SP),R1H
  000001C4 1899                   SUB.B       R1L,R1L
  000001C6 6E78000F               MOV.B       @(H'000F:16,SP),R0L
  000001CA 0901                   ADD.W       R0,R1
  000001CC 6FB1001A               MOV.W       R1,@(H'001A:16,ER3)
  000001D0 5A000000               JMP         @L7744:24
  000001D4                    L7758:                                
  000001D4 6E710008               MOV.B       @(8:16,SP),R1H
  000001D8 1899                   SUB.B       R1L,R1L
  000001DA 6E780009               MOV.B       @(9:16,SP),R0L
  000001DE 1750                   EXTU.W      R0
  000001E0 0901                   ADD.W       R0,R1
  000001E2 7A0300000000           MOV.L       #_g_Haltech2_data,ER3
  000001E8 6FB10012               MOV.W       R1,@(H'0012:16,ER3)
  000001EC 6E71000A               MOV.B       @(H'000A:16,SP),R1H
  000001F0 1899                   SUB.B       R1L,R1L
  000001F2 6E78000B               MOV.B       @(H'000B:16,SP),R0L
  000001F6 0901                   ADD.W       R0,R1
  000001F8 6FB10014               MOV.W       R1,@(H'0014:16,ER3)
  000001FC 5A000000               JMP         @L7744:24
  00000200                    L7757:                                
  00000200 6E710008               MOV.B       @(8:16,SP),R1H
  00000204 1899                   SUB.B       R1L,R1L
  00000206 6E780009               MOV.B       @(9:16,SP),R0L
  0000020A 1750                   EXTU.W      R0
  0000020C 0901                   ADD.W       R0,R1
  0000020E 6BA100000000           MOV.W       R1,@(_g_Haltech2_data+H'00000010):32
  00000214 5A000000               JMP         @L7744:24
  00000218                    L7756:                                
  00000218 6E710008               MOV.B       @(8:16,SP),R1H
  0000021C 1899                   SUB.B       R1L,R1L
  0000021E 6E780009               MOV.B       @(9:16,SP),R0L
  00000222 1750                   EXTU.W      R0
  00000224 0901                   ADD.W       R0,R1
  00000226 7A0300000000           MOV.L       #_g_Haltech2_data,ER3
  0000022C 6FB1000A               MOV.W       R1,@(H'000A:16,ER3)
  00000230 6E71000C               MOV.B       @(H'000C:16,SP),R1H
  00000234 1899                   SUB.B       R1L,R1L
  00000236 6E78000D               MOV.B       @(H'000D:16,SP),R0L
  0000023A 0901                   ADD.W       R0,R1
  0000023C 6FB1000C               MOV.W       R1,@(H'000C:16,ER3)
  00000240 6E71000E               MOV.B       @(H'000E:16,SP),R1H
  00000244 1899                   SUB.B       R1L,R1L
  00000246 6E78000F               MOV.B       @(H'000F:16,SP),R0L
  0000024A 0901                   ADD.W       R0,R1
  0000024C 6FB1000E               MOV.W       R1,@(H'000E:16,ER3)
  00000250 5A000000               JMP         @L7744:24
  00000254                    L7755:                                
  00000254 6E710008               MOV.B       @(8:16,SP),R1H
  00000258 1899                   SUB.B       R1L,R1L
  0000025A 6E780009               MOV.B       @(9:16,SP),R0L
  0000025E 1750                   EXTU.W      R0
  00000260 0901                   ADD.W       R0,R1
  00000262 7A0300000000           MOV.L       #_g_Haltech2_data,ER3
  00000268 6FB10006               MOV.W       R1,@(6:16,ER3)
  0000026C 6E71000A               MOV.B       @(H'000A:16,SP),R1H
  00000270 1899                   SUB.B       R1L,R1L
  00000272 6E78000B               MOV.B       @(H'000B:16,SP),R0L
  00000276 0901                   ADD.W       R0,R1
  00000278 6FB10008               MOV.W       R1,@(8:16,ER3)
  0000027C 5A000000               JMP         @L7744:24
  00000280                    L7754:                                
  00000280 6E710008               MOV.B       @(8:16,SP),R1H
  00000284 1899                   SUB.B       R1L,R1L
  00000286 6E780009               MOV.B       @(9:16,SP),R0L
  0000028A 1750                   EXTU.W      R0
  0000028C 0901                   ADD.W       R0,R1
  0000028E 7A0300000000           MOV.L       #_g_Haltech2_data,ER3
  00000294 69B1                   MOV.W       R1,@ER3
  00000296 6E71000A               MOV.B       @(H'000A:16,SP),R1H
  0000029A 1899                   SUB.B       R1L,R1L
  0000029C 6E78000B               MOV.B       @(H'000B:16,SP),R0L
  000002A0 0901                   ADD.W       R0,R1
  000002A2 6FB10002               MOV.W       R1,@(2:16,ER3)
  000002A6 6E71000C               MOV.B       @(H'000C:16,SP),R1H
  000002AA 1899                   SUB.B       R1L,R1L
  000002AC 6E78000D               MOV.B       @(H'000D:16,SP),R0L
  000002B0 0901                   ADD.W       R0,R1
  000002B2 6FB10004               MOV.W       R1,@(4:16,ER3)
  000002B6 5A000000               JMP         @L7744:24
  000002BA                    L7794:                                
  000002BA 0D80                   MOV.W       E0,R0
  000002BC 7968FF00               AND.W       #H'FF00:16,E0
  000002C0 58600000               BNE         L7744:16
  000002C4 A810                   CMP.B       #H'10:8,R0L
  000002C6 58700000               BEQ         L7749:16
  000002CA A811                   CMP.B       #H'11:8,R0L
  000002CC 58700000               BEQ         L7750:16
  000002D0 A812                   CMP.B       #H'12:8,R0L
  000002D2 4700                   BEQ         L7751:8
  000002D4 A813                   CMP.B       #H'13:8,R0L
  000002D6 58600000               BNE         L7744:16
  000002DA 6E710008               MOV.B       @(8:16,SP),R1H
  000002DE 1899                   SUB.B       R1L,R1L
  000002E0 6E780009               MOV.B       @(9:16,SP),R0L
  000002E4 1750                   EXTU.W      R0
  000002E6 0901                   ADD.W       R0,R1
  000002E8 7A0300000000           MOV.L       #_g_Haltech1_data,ER3
  000002EE 6FB10014               MOV.W       R1,@(H'0014:16,ER3)
  000002F2 6E71000A               MOV.B       @(H'000A:16,SP),R1H
  000002F6 1899                   SUB.B       R1L,R1L
  000002F8 6E78000B               MOV.B       @(H'000B:16,SP),R0L
  000002FC 0901                   ADD.W       R0,R1
  000002FE 6FB10016               MOV.W       R1,@(H'0016:16,ER3)
  00000302 6E71000C               MOV.B       @(H'000C:16,SP),R1H
  00000306 1899                   SUB.B       R1L,R1L
  00000308 6E78000D               MOV.B       @(H'000D:16,SP),R0L
  0000030C 0901                   ADD.W       R0,R1
  0000030E 6FB10018               MOV.W       R1,@(H'0018:16,ER3)
  00000312 5A000000               JMP         @L7744:24
  00000316                    L7751:                                
  00000316 6E710008               MOV.B       @(8:16,SP),R1H
  0000031A 1899                   SUB.B       R1L,R1L
  0000031C 6E780009               MOV.B       @(9:16,SP),R0L
  00000320 1750                   EXTU.W      R0
  00000322 0901                   ADD.W       R0,R1
  00000324 7A0300000000           MOV.L       #_g_Haltech1_data,ER3
  0000032A 6FB1000E               MOV.W       R1,@(H'000E:16,ER3)
  0000032E 6E71000A               MOV.B       @(H'000A:16,SP),R1H
  00000332 1899                   SUB.B       R1L,R1L
  00000334 6E78000B               MOV.B       @(H'000B:16,SP),R0L
  00000338 0901                   ADD.W       R0,R1
  0000033A 6FB10010               MOV.W       R1,@(H'0010:16,ER3)
  0000033E 6E71000E               MOV.B       @(H'000E:16,SP),R1H
  00000342 1899                   SUB.B       R1L,R1L
  00000344 6E78000F               MOV.B       @(H'000F:16,SP),R0L
  00000348 0901                   ADD.W       R0,R1
  0000034A 6FB10012               MOV.W       R1,@(H'0012:16,ER3)
  0000034E 5A000000               JMP         @L7744:24
  00000352                    L7750:                                
  00000352 6E710008               MOV.B       @(8:16,SP),R1H
  00000356 1899                   SUB.B       R1L,R1L
  00000358 6E780009               MOV.B       @(9:16,SP),R0L
  0000035C 1750                   EXTU.W      R0
  0000035E 0901                   ADD.W       R0,R1
  00000360 7A0300000000           MOV.L       #_g_Haltech1_data,ER3
  00000366 6FB10006               MOV.W       R1,@(6:16,ER3)
  0000036A 6E71000A               MOV.B       @(H'000A:16,SP),R1H
  0000036E 1899                   SUB.B       R1L,R1L
  00000370 6E78000B               MOV.B       @(H'000B:16,SP),R0L
  00000374 0901                   ADD.W       R0,R1
  00000376 6FB10008               MOV.W       R1,@(8:16,ER3)
  0000037A 6E71000C               MOV.B       @(H'000C:16,SP),R1H
  0000037E 1899                   SUB.B       R1L,R1L
  00000380 6E78000D               MOV.B       @(H'000D:16,SP),R0L
  00000384 0901                   ADD.W       R0,R1
  00000386 6FB1000A               MOV.W       R1,@(H'000A:16,ER3)
  0000038A 6E71000E               MOV.B       @(H'000E:16,SP),R1H
  0000038E 1899                   SUB.B       R1L,R1L
  00000390 6E78000F               MOV.B       @(H'000F:16,SP),R0L
  00000394 0901                   ADD.W       R0,R1
  00000396 6FB1000C               MOV.W       R1,@(H'000C:16,ER3)
  0000039A 5A000000               JMP         @L7744:24
  0000039E                    L7749:                                
  0000039E 6E710008               MOV.B       @(8:16,SP),R1H
  000003A2 1899                   SUB.B       R1L,R1L
  000003A4 6E780009               MOV.B       @(9:16,SP),R0L
  000003A8 1750                   EXTU.W      R0
  000003AA 0901                   ADD.W       R0,R1
  000003AC 7A0300000000           MOV.L       #_g_Haltech1_data,ER3
  000003B2 69B1                   MOV.W       R1,@ER3
  000003B4 6E71000A               MOV.B       @(H'000A:16,SP),R1H
  000003B8 1899                   SUB.B       R1L,R1L
  000003BA 6E78000B               MOV.B       @(H'000B:16,SP),R0L
  000003BE 0901                   ADD.W       R0,R1
  000003C0 6FB10002               MOV.W       R1,@(2:16,ER3)
  000003C4 6E71000C               MOV.B       @(H'000C:16,SP),R1H
  000003C8 1899                   SUB.B       R1L,R1L
  000003CA 6E78000D               MOV.B       @(H'000D:16,SP),R0L
  000003CE 0901                   ADD.W       R0,R1
  000003D0 6FB10004               MOV.W       R1,@(4:16,ER3)
  000003D4 5A000000               JMP         @L7744:24
  000003D8                    L7792:                                
  000003D8 792800E8               CMP.W       #H'00E8:16,E0
  000003DC 58600000               BNE         L7744:16
  000003E0 6E780008               MOV.B       @(8:16,SP),R0L
  000003E4 A882                   CMP.B       #H'82:8,R0L
  000003E6 4600                   BNE         L7820:8
  000003E8 01746E780009A081       CMP.B       #H'81:8,@(9:16,SP)
  000003F0 4600                   BNE         L7820:8
  000003F2 01746E78000AA080       CMP.B       #H'80:8,@(H'000A:16,SP)
  000003FA 58700000               BEQ         L7823:16
  000003FE                    L7820:                                
  000003FE 6B2800000000           MOV.W       @__$can_rcv_cnt$8:32,E0
  00000404 58700000               BEQ         L7825:16
  00000408 1F18                   CMP.W       #1:3,E0
  0000040A 58700000               BEQ         L7827:16
  0000040E 1F28                   CMP.W       #2:3,E0
  00000410 58700000               BEQ         L7829:16
  00000414 1F38                   CMP.W       #3:3,E0
  00000416 58700000               BEQ         L7831:16
  0000041A 1F48                   CMP.W       #4:3,E0
  0000041C 58700000               BEQ         L7833:16
  00000420 1F58                   CMP.W       #5:3,E0
  00000422 58700000               BEQ         L7835:16
  00000426 1F68                   CMP.W       #6:3,E0
  00000428 58700000               BEQ         L7837:16
  0000042C 1F78                   CMP.W       #7:3,E0
  0000042E 58700000               BEQ         L7839:16
  00000432 79280008               CMP.W       #8:16,E0
  00000436 58700000               BEQ         L7835:16
  0000043A 79280009               CMP.W       #9:16,E0
  0000043E 58700000               BEQ         L7842:16
  00000442 7928000A               CMP.W       #H'000A:16,E0
  00000446 58700000               BEQ         L7844:16
  0000044A 7928000B               CMP.W       #H'000B:16,E0
  0000044E 58700000               BEQ         L7835:16
  00000452 7928000C               CMP.W       #H'000C:16,E0
  00000456 58700000               BEQ         L7835:16
  0000045A 7928000D               CMP.W       #H'000D:16,E0
  0000045E 58700000               BEQ         L7835:16
  00000462 7928000E               CMP.W       #H'000E:16,E0
  00000466 4700                   BEQ         L7849:8
  00000468 7928000F               CMP.W       #H'000F:16,E0
  0000046C 58700000               BEQ         L7835:16
  00000470 79280010               CMP.W       #H'0010:16,E0
  00000474 58700000               BEQ         L7835:16
  00000478 79280011               CMP.W       #H'0011:16,E0
  0000047C 58700000               BEQ         L7835:16
  00000480 79280012               CMP.W       #H'0012:16,E0
  00000484 58700000               BEQ         L7835:16
  00000488 79280013               CMP.W       #H'0013:16,E0
  0000048C 58700000               BEQ         L7835:16
  00000490 79280014               CMP.W       #H'0014:16,E0
  00000494 58700000               BEQ         L7835:16
  00000498 79280015               CMP.W       #H'0015:16,E0
  0000049C 58600000               BNE         L7744:16
  000004A0 5A000000               JMP         @L7835:24
  000004A4                    L7849:                                
  000004A4 6E71000A               MOV.B       @(H'000A:16,SP),R1H
  000004A8 1899                   SUB.B       R1L,R1L
  000004AA 6E78000B               MOV.B       @(H'000B:16,SP),R0L
  000004AE 1750                   EXTU.W      R0
  000004B0 0901                   ADD.W       R0,R1
  000004B2 7A0300000000           MOV.L       #_g_MoTeC1_data,ER3
  000004B8 6FB1002A               MOV.W       R1,@(H'002A:16,ER3)
  000004BC 6E71000C               MOV.B       @(H'000C:16,SP),R1H
  000004C0 1899                   SUB.B       R1L,R1L
  000004C2 6E78000D               MOV.B       @(H'000D:16,SP),R0L
  000004C6 0901                   ADD.W       R0,R1
  000004C8 6FB1002C               MOV.W       R1,@(H'002C:16,ER3)
  000004CC 5A000000               JMP         @L7835:24
  000004D0                    L7844:                                
  000004D0 0C81                   MOV.B       R0L,R1H
  000004D2 1899                   SUB.B       R1L,R1L
  000004D4 6E780009               MOV.B       @(9:16,SP),R0L
  000004D8 1750                   EXTU.W      R0
  000004DA 0901                   ADD.W       R0,R1
  000004DC 7A0300000000           MOV.L       #_g_MoTeC1_data,ER3
  000004E2 6FB10026               MOV.W       R1,@(H'0026:16,ER3)
  000004E6 6E71000E               MOV.B       @(H'000E:16,SP),R1H
  000004EA 1899                   SUB.B       R1L,R1L
  000004EC 6E78000F               MOV.B       @(H'000F:16,SP),R0L
  000004F0 0901                   ADD.W       R0,R1
  000004F2 6FB10028               MOV.W       R1,@(H'0028:16,ER3)
  000004F6 5A000000               JMP         @L7835:24
  000004FA                    L7842:                                
  000004FA 6E71000E               MOV.B       @(H'000E:16,SP),R1H
  000004FE 1899                   SUB.B       R1L,R1L
  00000500 6E78000F               MOV.B       @(H'000F:16,SP),R0L
  00000504 1750                   EXTU.W      R0
  00000506 0901                   ADD.W       R0,R1
  00000508 6BA100000000           MOV.W       R1,@(_g_MoTeC1_data+H'00000024):32
  0000050E 5A000000               JMP         @L7835:24
  00000512                    L7839:                                
  00000512 6E71000E               MOV.B       @(H'000E:16,SP),R1H
  00000516 1899                   SUB.B       R1L,R1L
  00000518 6E78000F               MOV.B       @(H'000F:16,SP),R0L
  0000051C 1750                   EXTU.W      R0
  0000051E 0901                   ADD.W       R0,R1
  00000520 6BA100000000           MOV.W       R1,@(_g_MoTeC1_data+H'00000022):32
  00000526 5A000000               JMP         @L7835:24
  0000052A                    L7837:                                
  0000052A 0C81                   MOV.B       R0L,R1H
  0000052C 1899                   SUB.B       R1L,R1L
  0000052E 6E780009               MOV.B       @(9:16,SP),R0L
  00000532 1750                   EXTU.W      R0
  00000534 0901                   ADD.W       R0,R1
  00000536 7A0300000000           MOV.L       #_g_MoTeC1_data,ER3
  0000053C 6FB1001E               MOV.W       R1,@(H'001E:16,ER3)
  00000540 6E71000A               MOV.B       @(H'000A:16,SP),R1H
  00000544 1899                   SUB.B       R1L,R1L
  00000546 6E78000B               MOV.B       @(H'000B:16,SP),R0L
  0000054A 0901                   ADD.W       R0,R1
  0000054C 6FB10020               MOV.W       R1,@(H'0020:16,ER3)
  00000550 5A000000               JMP         @L7835:24
  00000554                    L7833:                                
  00000554 6E71000C               MOV.B       @(H'000C:16,SP),R1H
  00000558 1899                   SUB.B       R1L,R1L
  0000055A 6E78000D               MOV.B       @(H'000D:16,SP),R0L
  0000055E 1750                   EXTU.W      R0
  00000560 0901                   ADD.W       R0,R1
  00000562 7A0300000000           MOV.L       #_g_MoTeC1_data,ER3
  00000568 6FB1001A               MOV.W       R1,@(H'001A:16,ER3)
  0000056C 6E71000E               MOV.B       @(H'000E:16,SP),R1H
  00000570 1899                   SUB.B       R1L,R1L
  00000572 6E78000F               MOV.B       @(H'000F:16,SP),R0L
  00000576 0901                   ADD.W       R0,R1
  00000578 6FB1001C               MOV.W       R1,@(H'001C:16,ER3)
  0000057C 5A000000               JMP         @L7835:24
  00000580                    L7831:                                
  00000580 0C81                   MOV.B       R0L,R1H
  00000582 1899                   SUB.B       R1L,R1L
  00000584 6E780009               MOV.B       @(9:16,SP),R0L
  00000588 1750                   EXTU.W      R0
  0000058A 0901                   ADD.W       R0,R1
  0000058C 7A0300000000           MOV.L       #_g_MoTeC1_data,ER3
  00000592 6FB10014               MOV.W       R1,@(H'0014:16,ER3)
  00000596 6E71000A               MOV.B       @(H'000A:16,SP),R1H
  0000059A 1899                   SUB.B       R1L,R1L
  0000059C 6E78000B               MOV.B       @(H'000B:16,SP),R0L
  000005A0 0901                   ADD.W       R0,R1
  000005A2 6FB10016               MOV.W       R1,@(H'0016:16,ER3)
  000005A6 6E71000C               MOV.B       @(H'000C:16,SP),R1H
  000005AA 1899                   SUB.B       R1L,R1L
  000005AC 6E78000D               MOV.B       @(H'000D:16,SP),R0L
  000005B0 0901                   ADD.W       R0,R1
  000005B2 6FB10018               MOV.W       R1,@(H'0018:16,ER3)
  000005B6 5A000000               JMP         @L7835:24
  000005BA                    L7829:                                
  000005BA 0C81                   MOV.B       R0L,R1H
  000005BC 1899                   SUB.B       R1L,R1L
  000005BE 6E780009               MOV.B       @(9:16,SP),R0L
  000005C2 1750                   EXTU.W      R0
  000005C4 0901                   ADD.W       R0,R1
  000005C6 7A0300000000           MOV.L       #_g_MoTeC1_data,ER3
  000005CC 6FB1000C               MOV.W       R1,@(H'000C:16,ER3)
  000005D0 6E71000A               MOV.B       @(H'000A:16,SP),R1H
  000005D4 1899                   SUB.B       R1L,R1L
  000005D6 6E78000B               MOV.B       @(H'000B:16,SP),R0L
  000005DA 0901                   ADD.W       R0,R1
  000005DC 6FB1000E               MOV.W       R1,@(H'000E:16,ER3)
  000005E0 6E71000C               MOV.B       @(H'000C:16,SP),R1H
  000005E4 1899                   SUB.B       R1L,R1L
  000005E6 6E78000D               MOV.B       @(H'000D:16,SP),R0L
  000005EA 0901                   ADD.W       R0,R1
  000005EC 6FB10010               MOV.W       R1,@(H'0010:16,ER3)
  000005F0 6E71000E               MOV.B       @(H'000E:16,SP),R1H
  000005F4 1899                   SUB.B       R1L,R1L
  000005F6 6E78000F               MOV.B       @(H'000F:16,SP),R0L
  000005FA 0901                   ADD.W       R0,R1
  000005FC 6FB10012               MOV.W       R1,@(H'0012:16,ER3)
  00000600 5A000000               JMP         @L7835:24
  00000604                    L7827:                                
  00000604 0C81                   MOV.B       R0L,R1H
  00000606 1899                   SUB.B       R1L,R1L
  00000608 6E780009               MOV.B       @(9:16,SP),R0L
  0000060C 1750                   EXTU.W      R0
  0000060E 0901                   ADD.W       R0,R1
  00000610 7A0300000000           MOV.L       #_g_MoTeC1_data,ER3
  00000616 6FB10004               MOV.W       R1,@(4:16,ER3)
  0000061A 6E71000A               MOV.B       @(H'000A:16,SP),R1H
  0000061E 1899                   SUB.B       R1L,R1L
  00000620 6E78000B               MOV.B       @(H'000B:16,SP),R0L
  00000624 0901                   ADD.W       R0,R1
  00000626 6FB10006               MOV.W       R1,@(6:16,ER3)
  0000062A 6E71000C               MOV.B       @(H'000C:16,SP),R1H
  0000062E 1899                   SUB.B       R1L,R1L
  00000630 6E78000D               MOV.B       @(H'000D:16,SP),R0L
  00000634 0901                   ADD.W       R0,R1
  00000636 6FB10008               MOV.W       R1,@(8:16,ER3)
  0000063A 6E71000E               MOV.B       @(H'000E:16,SP),R1H
  0000063E 1899                   SUB.B       R1L,R1L
  00000640 6E78000F               MOV.B       @(H'000F:16,SP),R0L
  00000644 0901                   ADD.W       R0,R1
  00000646 6FB1000A               MOV.W       R1,@(H'000A:16,ER3)
  0000064A 4000                   BRA         L7835:8
  0000064C                    L7823:                                
  0000064C 1988                   SUB.W       E0,E0
  0000064E                    L7825:                                
  0000064E 6E71000C               MOV.B       @(H'000C:16,SP),R1H
  00000652 1899                   SUB.B       R1L,R1L
  00000654 6E78000D               MOV.B       @(H'000D:16,SP),R0L
  00000658 1750                   EXTU.W      R0
  0000065A 0901                   ADD.W       R0,R1
  0000065C 7A0300000000           MOV.L       #_g_MoTeC1_data,ER3
  00000662 69B1                   MOV.W       R1,@ER3
  00000664 6E71000E               MOV.B       @(H'000E:16,SP),R1H
  00000668 1899                   SUB.B       R1L,R1L
  0000066A 6E78000F               MOV.B       @(H'000F:16,SP),R0L
  0000066E 0901                   ADD.W       R0,R1
  00000670 6FB10002               MOV.W       R1,@(2:16,ER3)
  00000674                    L7835:                                
  00000674 0B58                   INC.W       #1,E0
  00000676 6BA800000000           MOV.W       E0,@__$can_rcv_cnt$8:32
  0000067C 5A000000               JMP         @L7744:24
  00000680                    L7790:                                
  00000680 792805F0               CMP.W       #H'05F0:16,E0
  00000684 58600000               BNE         L7744:16
  00000688 7A0600000000           MOV.L       #_g_can_rcv_timer,ER6
  0000068E 015E0620000A           CMP.W       #H'000A:16,@ER6
  00000694 58400000               BHS         L7858:16
  00000698 7A0500000000           MOV.L       #__$can_rcv_cnt$8,ER5
  0000069E 6958                   MOV.W       @ER5,E0
  000006A0 1F18                   CMP.W       #1:3,E0
  000006A2 58700000               BEQ         L7860:16
  000006A6 1F28                   CMP.W       #2:3,E0
  000006A8 58700000               BEQ         L7862:16
  000006AC 1F38                   CMP.W       #3:3,E0
  000006AE 58700000               BEQ         L7864:16
  000006B2 1F48                   CMP.W       #4:3,E0
  000006B4 58700000               BEQ         L7866:16
  000006B8 1F58                   CMP.W       #5:3,E0
  000006BA 58700000               BEQ         L7868:16
  000006BE 1F68                   CMP.W       #6:3,E0
  000006C0 58700000               BEQ         L7870:16
  000006C4 1F78                   CMP.W       #7:3,E0
  000006C6 58700000               BEQ         L7872:16
  000006CA 79280008               CMP.W       #8:16,E0
  000006CE 58700000               BEQ         L7870:16
  000006D2 79280009               CMP.W       #9:16,E0
  000006D6 58700000               BEQ         L7875:16
  000006DA 7928000A               CMP.W       #H'000A:16,E0
  000006DE 4700                   BEQ         L7877:8
  000006E0 7928000B               CMP.W       #H'000B:16,E0
  000006E4 58700000               BEQ         L7870:16
  000006E8 7928000C               CMP.W       #H'000C:16,E0
  000006EC 58700000               BEQ         L7870:16
  000006F0 7928000D               CMP.W       #H'000D:16,E0
  000006F4 4700                   BEQ         L7881:8
  000006F6 7928000E               CMP.W       #H'000E:16,E0
  000006FA 4700                   BEQ         L7883:8
  000006FC 7928000F               CMP.W       #H'000F:16,E0
  00000700 58700000               BEQ         L7870:16
  00000704 79280010               CMP.W       #H'0010:16,E0
  00000708 58700000               BEQ         L7870:16
  0000070C 79280011               CMP.W       #H'0011:16,E0
  00000710 58600000               BNE         L7886:16
  00000714 5A000000               JMP         @L7870:24
  00000718                    L7883:                                
  00000718 6E710008               MOV.B       @(8:16,SP),R1H
  0000071C 1899                   SUB.B       R1L,R1L
  0000071E 6E780009               MOV.B       @(9:16,SP),R0L
  00000722 1750                   EXTU.W      R0
  00000724 0901                   ADD.W       R0,R1
  00000726 6BA100000000           MOV.W       R1,@(_g_MoTeC1_data+H'0000002C):32
  0000072C 5A000000               JMP         @L7870:24
  00000730                    L7881:                                
  00000730 6E71000E               MOV.B       @(H'000E:16,SP),R1H
  00000734 1899                   SUB.B       R1L,R1L
  00000736 6E78000F               MOV.B       @(H'000F:16,SP),R0L
  0000073A 1750                   EXTU.W      R0
  0000073C 0901                   ADD.W       R0,R1
  0000073E 6BA100000000           MOV.W       R1,@(_g_MoTeC1_data+H'0000002A):32
  00000744 5A000000               JMP         @L7870:24
  00000748                    L7877:                                
  00000748 6E71000A               MOV.B       @(H'000A:16,SP),R1H
  0000074C 1899                   SUB.B       R1L,R1L
  0000074E 6E78000B               MOV.B       @(H'000B:16,SP),R0L
  00000752 1750                   EXTU.W      R0
  00000754 0901                   ADD.W       R0,R1
  00000756 6BA100000000           MOV.W       R1,@(_g_MoTeC1_data+H'00000028):32
  0000075C 5A000000               JMP         @L7870:24
  00000760                    L7875:                                
  00000760 6E71000A               MOV.B       @(H'000A:16,SP),R1H
  00000764 1899                   SUB.B       R1L,R1L
  00000766 6E78000B               MOV.B       @(H'000B:16,SP),R0L
  0000076A 1750                   EXTU.W      R0
  0000076C 0901                   ADD.W       R0,R1
  0000076E 7A0300000000           MOV.L       #_g_MoTeC1_data,ER3
  00000774 6FB10024               MOV.W       R1,@(H'0024:16,ER3)
  00000778 6E71000C               MOV.B       @(H'000C:16,SP),R1H
  0000077C 1899                   SUB.B       R1L,R1L
  0000077E 6E78000D               MOV.B       @(H'000D:16,SP),R0L
  00000782 0901                   ADD.W       R0,R1
  00000784 6FB10026               MOV.W       R1,@(H'0026:16,ER3)
  00000788 5A000000               JMP         @L7870:24
  0000078C                    L7872:                                
  0000078C 6E71000A               MOV.B       @(H'000A:16,SP),R1H
  00000790 1899                   SUB.B       R1L,R1L
  00000792 6E78000B               MOV.B       @(H'000B:16,SP),R0L
  00000796 1750                   EXTU.W      R0
  00000798 0901                   ADD.W       R0,R1
  0000079A 6BA100000000           MOV.W       R1,@(_g_MoTeC1_data+H'00000022):32
  000007A0 5A000000               JMP         @L7870:24
  000007A4                    L7868:                                
  000007A4 6E71000C               MOV.B       @(H'000C:16,SP),R1H
  000007A8 1899                   SUB.B       R1L,R1L
  000007AA 6E78000D               MOV.B       @(H'000D:16,SP),R0L
  000007AE 1750                   EXTU.W      R0
  000007B0 0901                   ADD.W       R0,R1
  000007B2 7A0300000000           MOV.L       #_g_MoTeC1_data,ER3
  000007B8 6FB1001E               MOV.W       R1,@(H'001E:16,ER3)
  000007BC 6E71000E               MOV.B       @(H'000E:16,SP),R1H
  000007C0 1899                   SUB.B       R1L,R1L
  000007C2 6E78000F               MOV.B       @(H'000F:16,SP),R0L
  000007C6 0901                   ADD.W       R0,R1
  000007C8 6FB10020               MOV.W       R1,@(H'0020:16,ER3)
  000007CC 5A000000               JMP         @L7870:24
  000007D0                    L7866:                                
  000007D0 6E710008               MOV.B       @(8:16,SP),R1H
  000007D4 1899                   SUB.B       R1L,R1L
  000007D6 6E780009               MOV.B       @(9:16,SP),R0L
  000007DA 1750                   EXTU.W      R0
  000007DC 0901                   ADD.W       R0,R1
  000007DE 7A0300000000           MOV.L       #_g_MoTeC1_data,ER3
  000007E4 6FB1001A               MOV.W       R1,@(H'001A:16,ER3)
  000007E8 6E71000A               MOV.B       @(H'000A:16,SP),R1H
  000007EC 1899                   SUB.B       R1L,R1L
  000007EE 6E78000B               MOV.B       @(H'000B:16,SP),R0L
  000007F2 0901                   ADD.W       R0,R1
  000007F4 6FB1001C               MOV.W       R1,@(H'001C:16,ER3)
  000007F8 5A000000               JMP         @L7870:24
  000007FC                    L7864:                                
  000007FC 6E710008               MOV.B       @(8:16,SP),R1H
  00000800 1899                   SUB.B       R1L,R1L
  00000802 6E780009               MOV.B       @(9:16,SP),R0L
  00000806 1750                   EXTU.W      R0
  00000808 0901                   ADD.W       R0,R1
  0000080A 6BA100000000           MOV.W       R1,@(_g_MoTeC1_data+H'00000018):32
  00000810 5A000000               JMP         @L7870:24
  00000814                    L7862:                                
  00000814 6E710008               MOV.B       @(8:16,SP),R1H
  00000818 1899                   SUB.B       R1L,R1L
  0000081A 6E780009               MOV.B       @(9:16,SP),R0L
  0000081E 1750                   EXTU.W      R0
  00000820 0901                   ADD.W       R0,R1
  00000822 7A0300000000           MOV.L       #_g_MoTeC1_data,ER3
  00000828 6FB10010               MOV.W       R1,@(H'0010:16,ER3)
  0000082C 6E71000A               MOV.B       @(H'000A:16,SP),R1H
  00000830 1899                   SUB.B       R1L,R1L
  00000832 6E78000B               MOV.B       @(H'000B:16,SP),R0L
  00000836 0901                   ADD.W       R0,R1
  00000838 6FB10012               MOV.W       R1,@(H'0012:16,ER3)
  0000083C 6E71000C               MOV.B       @(H'000C:16,SP),R1H
  00000840 1899                   SUB.B       R1L,R1L
  00000842 6E78000D               MOV.B       @(H'000D:16,SP),R0L
  00000846 0901                   ADD.W       R0,R1
  00000848 6FB10014               MOV.W       R1,@(H'0014:16,ER3)
  0000084C 6E71000E               MOV.B       @(H'000E:16,SP),R1H
  00000850 1899                   SUB.B       R1L,R1L
  00000852 6E78000F               MOV.B       @(H'000F:16,SP),R0L
  00000856 0901                   ADD.W       R0,R1
  00000858 6FB10016               MOV.W       R1,@(H'0016:16,ER3)
  0000085C 4000                   BRA         L7870:8
  0000085E                    L7860:                                
  0000085E 6E710008               MOV.B       @(8:16,SP),R1H
  00000862 1899                   SUB.B       R1L,R1L
  00000864 6E780009               MOV.B       @(9:16,SP),R0L
  00000868 1750                   EXTU.W      R0
  0000086A 0901                   ADD.W       R0,R1
  0000086C 7A0300000000           MOV.L       #_g_MoTeC1_data,ER3
  00000872 6FB10008               MOV.W       R1,@(8:16,ER3)
  00000876 6E71000A               MOV.B       @(H'000A:16,SP),R1H
  0000087A 1899                   SUB.B       R1L,R1L
  0000087C 6E78000B               MOV.B       @(H'000B:16,SP),R0L
  00000880 0901                   ADD.W       R0,R1
  00000882 6FB1000A               MOV.W       R1,@(H'000A:16,ER3)
  00000886 6E71000C               MOV.B       @(H'000C:16,SP),R1H
  0000088A 1899                   SUB.B       R1L,R1L
  0000088C 6E78000D               MOV.B       @(H'000D:16,SP),R0L
  00000890 0901                   ADD.W       R0,R1
  00000892 6FB1000C               MOV.W       R1,@(H'000C:16,ER3)
  00000896 6E71000E               MOV.B       @(H'000E:16,SP),R1H
  0000089A 1899                   SUB.B       R1L,R1L
  0000089C 6E78000F               MOV.B       @(H'000F:16,SP),R0L
  000008A0 0901                   ADD.W       R0,R1
  000008A2 6FB1000E               MOV.W       R1,@(H'000E:16,ER3)
  000008A6                    L7870:                                
  000008A6 0B58                   INC.W       #1,E0
  000008A8 4001                   BRA/S       L7886:8
  000008AA 69D8                   MOV.W       E0,@ER5
  000008AC                    L7858:                                
  000008AC 6E710008               MOV.B       @(8:16,SP),R1H
  000008B0 1899                   SUB.B       R1L,R1L
  000008B2 6E780009               MOV.B       @(9:16,SP),R0L
  000008B6 1750                   EXTU.W      R0
  000008B8 0901                   ADD.W       R0,R1
  000008BA 7A0300000000           MOV.L       #_g_MoTeC1_data,ER3
  000008C0 69B1                   MOV.W       R1,@ER3
  000008C2 6E71000A               MOV.B       @(H'000A:16,SP),R1H
  000008C6 1899                   SUB.B       R1L,R1L
  000008C8 6E78000B               MOV.B       @(H'000B:16,SP),R0L
  000008CC 0901                   ADD.W       R0,R1
  000008CE 6FB10002               MOV.W       R1,@(2:16,ER3)
  000008D2 6E71000C               MOV.B       @(H'000C:16,SP),R1H
  000008D6 1899                   SUB.B       R1L,R1L
  000008D8 6E78000D               MOV.B       @(H'000D:16,SP),R0L
  000008DC 0901                   ADD.W       R0,R1
  000008DE 6FB10004               MOV.W       R1,@(4:16,ER3)
  000008E2 6E71000E               MOV.B       @(H'000E:16,SP),R1H
  000008E6 1899                   SUB.B       R1L,R1L
  000008E8 6E78000F               MOV.B       @(H'000F:16,SP),R0L
  000008EC 0901                   ADD.W       R0,R1
  000008EE 6FB10006               MOV.W       R1,@(6:16,ER3)
  000008F2 6BF100000000           MOV.W       #1:4,@__$can_rcv_cnt$8:32
  000008F8                    L7886:                                
  000008F8 015D0600               MOV.W       #0:8,@ER6
  000008FC 5A000000               JMP         @L7744:24
  00000900                    L7788:                                
  00000900 015AC3280007           CMP.W       @(7:16,ER3),E0
  00000906 4600                   BNE         L7887:8
  00000908 6A2800000000           MOV.B       @(_g_e2p_data+5):32,R0L
  0000090E 58B00000               BMI         L7889:16
  00000912                    L7887:                                
  00000912 015AC3280009           CMP.W       @(9:16,ER3),E0
  00000918 4600                   BNE         L7890:8
  0000091A 6A30000000007760       BLD.B       #6,@(_g_e2p_data+5):32
  00000922 58500000               BCS         L7892:16
  00000926                    L7890:                                
  00000926 015AC328000B           CMP.W       @(H'000B:16,ER3),E0
  0000092C 4600                   BNE         L7893:8
  0000092E 6A30000000007750       BLD.B       #5,@(_g_e2p_data+5):32
  00000936 58500000               BCS         L7895:16
  0000093A                    L7893:                                
  0000093A 015AC328000D           CMP.W       @(H'000D:16,ER3),E0
  00000940 4600                   BNE         L7896:8
  00000942 6A30000000007740       BLD.B       #4,@(_g_e2p_data+5):32
  0000094A 58500000               BCS         L7898:16
  0000094E                    L7896:                                
  0000094E 015AC328000F           CMP.W       @(H'000F:16,ER3),E0
  00000954 4600                   BNE         L7899:8
  00000956 6A30000000007730       BLD.B       #3,@(_g_e2p_data+5):32
  0000095E 4500                   BCS         L7901:8
  00000960                    L7899:                                
  00000960 015AC3280011           CMP.W       @(H'0011:16,ER3),E0
  00000966 58600000               BNE         L7744:16
  0000096A 6A30000000007720       BLD.B       #2,@(_g_e2p_data+5):32
  00000972 58400000               BCC         L7744:16
  00000976 6E710008               MOV.B       @(8:16,SP),R1H
  0000097A 1899                   SUB.B       R1L,R1L
  0000097C 6E780009               MOV.B       @(9:16,SP),R0L
  00000980 1750                   EXTU.W      R0
  00000982 0901                   ADD.W       R0,R1
  00000984 7A0300000000           MOV.L       #_g_CAN_data,ER3
  0000098A 6FB10028               MOV.W       R1,@(H'0028:16,ER3)
  0000098E 6E71000A               MOV.B       @(H'000A:16,SP),R1H
  00000992 1899                   SUB.B       R1L,R1L
  00000994 6E78000B               MOV.B       @(H'000B:16,SP),R0L
  00000998 0901                   ADD.W       R0,R1
  0000099A 6FB1002A               MOV.W       R1,@(H'002A:16,ER3)
  0000099E 6E71000C               MOV.B       @(H'000C:16,SP),R1H
  000009A2 1899                   SUB.B       R1L,R1L
  000009A4 6E78000D               MOV.B       @(H'000D:16,SP),R0L
  000009A8 0901                   ADD.W       R0,R1
  000009AA 6FB1002C               MOV.W       R1,@(H'002C:16,ER3)
  000009AE 6E71000E               MOV.B       @(H'000E:16,SP),R1H
  000009B2 1899                   SUB.B       R1L,R1L
  000009B4 6E78000F               MOV.B       @(H'000F:16,SP),R0L
  000009B8 0901                   ADD.W       R0,R1
  000009BA 6FB1002E               MOV.W       R1,@(H'002E:16,ER3)
  000009BE 5A000000               JMP         @L7744:24
  000009C2                    L7901:                                
  000009C2 6E710008               MOV.B       @(8:16,SP),R1H
  000009C6 1899                   SUB.B       R1L,R1L
  000009C8 6E780009               MOV.B       @(9:16,SP),R0L
  000009CC 1750                   EXTU.W      R0
  000009CE 0901                   ADD.W       R0,R1
  000009D0 7A0300000000           MOV.L       #_g_CAN_data,ER3
  000009D6 6FB10020               MOV.W       R1,@(H'0020:16,ER3)
  000009DA 6E71000A               MOV.B       @(H'000A:16,SP),R1H
  000009DE 1899                   SUB.B       R1L,R1L
  000009E0 6E78000B               MOV.B       @(H'000B:16,SP),R0L
  000009E4 0901                   ADD.W       R0,R1
  000009E6 6FB10022               MOV.W       R1,@(H'0022:16,ER3)
  000009EA 6E71000C               MOV.B       @(H'000C:16,SP),R1H
  000009EE 1899                   SUB.B       R1L,R1L
  000009F0 6E78000D               MOV.B       @(H'000D:16,SP),R0L
  000009F4 0901                   ADD.W       R0,R1
  000009F6 6FB10024               MOV.W       R1,@(H'0024:16,ER3)
  000009FA 6E71000E               MOV.B       @(H'000E:16,SP),R1H
  000009FE 1899                   SUB.B       R1L,R1L
  00000A00 6E78000F               MOV.B       @(H'000F:16,SP),R0L
  00000A04 0901                   ADD.W       R0,R1
  00000A06 6FB10026               MOV.W       R1,@(H'0026:16,ER3)
  00000A0A 5A000000               JMP         @L7744:24
  00000A0E                    L7898:                                
  00000A0E 6E710008               MOV.B       @(8:16,SP),R1H
  00000A12 1899                   SUB.B       R1L,R1L
  00000A14 6E780009               MOV.B       @(9:16,SP),R0L
  00000A18 1750                   EXTU.W      R0
  00000A1A 0901                   ADD.W       R0,R1
  00000A1C 7A0300000000           MOV.L       #_g_CAN_data,ER3
  00000A22 6FB10018               MOV.W       R1,@(H'0018:16,ER3)
  00000A26 6E71000A               MOV.B       @(H'000A:16,SP),R1H
  00000A2A 1899                   SUB.B       R1L,R1L
  00000A2C 6E78000B               MOV.B       @(H'000B:16,SP),R0L
  00000A30 0901                   ADD.W       R0,R1
  00000A32 6FB1001A               MOV.W       R1,@(H'001A:16,ER3)
  00000A36 6E71000C               MOV.B       @(H'000C:16,SP),R1H
  00000A3A 1899                   SUB.B       R1L,R1L
  00000A3C 6E78000D               MOV.B       @(H'000D:16,SP),R0L
  00000A40 0901                   ADD.W       R0,R1
  00000A42 6FB1001C               MOV.W       R1,@(H'001C:16,ER3)
  00000A46 6E71000E               MOV.B       @(H'000E:16,SP),R1H
  00000A4A 1899                   SUB.B       R1L,R1L
  00000A4C 6E78000F               MOV.B       @(H'000F:16,SP),R0L
  00000A50 0901                   ADD.W       R0,R1
  00000A52 6FB1001E               MOV.W       R1,@(H'001E:16,ER3)
  00000A56 5A000000               JMP         @L7744:24
  00000A5A                    L7895:                                
  00000A5A 6E710008               MOV.B       @(8:16,SP),R1H
  00000A5E 1899                   SUB.B       R1L,R1L
  00000A60 6E780009               MOV.B       @(9:16,SP),R0L
  00000A64 1750                   EXTU.W      R0
  00000A66 0901                   ADD.W       R0,R1
  00000A68 7A0300000000           MOV.L       #_g_CAN_data,ER3
  00000A6E 6FB10010               MOV.W       R1,@(H'0010:16,ER3)
  00000A72 6E71000A               MOV.B       @(H'000A:16,SP),R1H
  00000A76 1899                   SUB.B       R1L,R1L
  00000A78 6E78000B               MOV.B       @(H'000B:16,SP),R0L
  00000A7C 0901                   ADD.W       R0,R1
  00000A7E 6FB10012               MOV.W       R1,@(H'0012:16,ER3)
  00000A82 6E71000C               MOV.B       @(H'000C:16,SP),R1H
  00000A86 1899                   SUB.B       R1L,R1L
  00000A88 6E78000D               MOV.B       @(H'000D:16,SP),R0L
  00000A8C 0901                   ADD.W       R0,R1
  00000A8E 6FB10014               MOV.W       R1,@(H'0014:16,ER3)
  00000A92 6E71000E               MOV.B       @(H'000E:16,SP),R1H
  00000A96 1899                   SUB.B       R1L,R1L
  00000A98 6E78000F               MOV.B       @(H'000F:16,SP),R0L
  00000A9C 0901                   ADD.W       R0,R1
  00000A9E 6FB10016               MOV.W       R1,@(H'0016:16,ER3)
  00000AA2 5A000000               JMP         @L7744:24
  00000AA6                    L7892:                                
  00000AA6 6E710008               MOV.B       @(8:16,SP),R1H
  00000AAA 1899                   SUB.B       R1L,R1L
  00000AAC 6E780009               MOV.B       @(9:16,SP),R0L
  00000AB0 1750                   EXTU.W      R0
  00000AB2 0901                   ADD.W       R0,R1
  00000AB4 7A0300000000           MOV.L       #_g_CAN_data,ER3
  00000ABA 6FB10008               MOV.W       R1,@(8:16,ER3)
  00000ABE 6E71000A               MOV.B       @(H'000A:16,SP),R1H
  00000AC2 1899                   SUB.B       R1L,R1L
  00000AC4 6E78000B               MOV.B       @(H'000B:16,SP),R0L
  00000AC8 0901                   ADD.W       R0,R1
  00000ACA 6FB1000A               MOV.W       R1,@(H'000A:16,ER3)
  00000ACE 6E71000C               MOV.B       @(H'000C:16,SP),R1H
  00000AD2 1899                   SUB.B       R1L,R1L
  00000AD4 6E78000D               MOV.B       @(H'000D:16,SP),R0L
  00000AD8 0901                   ADD.W       R0,R1
  00000ADA 6FB1000C               MOV.W       R1,@(H'000C:16,ER3)
  00000ADE 6E71000E               MOV.B       @(H'000E:16,SP),R1H
  00000AE2 1899                   SUB.B       R1L,R1L
  00000AE4 6E78000F               MOV.B       @(H'000F:16,SP),R0L
  00000AE8 0901                   ADD.W       R0,R1
  00000AEA 6FB1000E               MOV.W       R1,@(H'000E:16,ER3)
  00000AEE 4000                   BRA         L7744:8
  00000AF0                    L7889:                                
  00000AF0 6E710008               MOV.B       @(8:16,SP),R1H
  00000AF4 1899                   SUB.B       R1L,R1L
  00000AF6 6E780009               MOV.B       @(9:16,SP),R0L
  00000AFA 1750                   EXTU.W      R0
  00000AFC 0901                   ADD.W       R0,R1
  00000AFE 7A0300000000           MOV.L       #_g_CAN_data,ER3
  00000B04 69B1                   MOV.W       R1,@ER3
  00000B06 6E71000A               MOV.B       @(H'000A:16,SP),R1H
  00000B0A 1899                   SUB.B       R1L,R1L
  00000B0C 6E78000B               MOV.B       @(H'000B:16,SP),R0L
  00000B10 0901                   ADD.W       R0,R1
  00000B12 6FB10002               MOV.W       R1,@(2:16,ER3)
  00000B16 6E71000C               MOV.B       @(H'000C:16,SP),R1H
  00000B1A 1899                   SUB.B       R1L,R1L
  00000B1C 6E78000D               MOV.B       @(H'000D:16,SP),R0L
  00000B20 0901                   ADD.W       R0,R1
  00000B22 6FB10004               MOV.W       R1,@(4:16,ER3)
  00000B26 6E71000E               MOV.B       @(H'000E:16,SP),R1H
  00000B2A 1899                   SUB.B       R1L,R1L
  00000B2C 6E78000F               MOV.B       @(H'000F:16,SP),R0L
  00000B30 0901                   ADD.W       R0,R1
  00000B32 6FB10006               MOV.W       R1,@(6:16,ER3)
  00000B36                    L7744:                                
       675:                                default: break;
       676:                }
       677:            }
       678:        }
       679:        if((CAN_rcv_INTF & 0x01) == 0x01)   // 受信バッファ0フル割り込みフラグビット確定
  00000B36 7302                   BTST.B      #0,R2H
  00000B38 58700000               BEQ         L7762:16
       680:        {
       681:            CANRxB0Read(&can_rcv[1], 8);
  00000B3C 0FF1                   MOV.L       SP,ER1
  00000B3E 0A31                   ADD.W       #3:3,R1
  00000B40 017D170D               MOV.B       #H'0D:8,@(1:2,SP)
  00000B44 79000190               MOV.W       #H'0190:16,R0
  00000B48 5E000000               JSR         @_CANTxRxBufRW:24
       682:            
       683:            msgID = MAKE_SID(can_rcv[1], can_rcv[2]);       // ID作成
  00000B4C 6E790003               MOV.B       @(3:16,SP),R1L
  00000B50 1751                   EXTU.W      R1
  00000B52 03831011               SHLL.W      #3:5,R1
  00000B56 6E780004               MOV.B       @(4:16,SP),R0L
  00000B5A 1750                   EXTU.W      R0
  00000B5C 11D0                   SHAR.W      #2,R0
  00000B5E 11D0                   SHAR.W      #2,R0
  00000B60 1190                   SHAR.W      R0
  00000B62 6401                   OR.W        R0,R1
  00000B64 6FF10010               MOV.W       R1,@(H'0010:16,SP)
       684:            
       685:            if(Onetime_Peakclear_cnt > 0) Onetime_Peakclear_cnt --;
  00000B68 6940                   MOV.W       @ER4,R0
  00000B6A 4700                   BEQ         L7906:8
  00000B6C 7DC01A10               SUB.W       #1:3,@ER4
  00000B70                    L7906:                                
       686:            
       687:            if          (g_e2p_data.E2P_1.model == CAN_std)
  00000B70 7A0300000000           MOV.L       #_g_e2p_data,ER3
  00000B76 6E380002               MOV.B       @(2:16,ER3),R0L
  00000B7A 58700000               BEQ         L7909:16
       688:            {
       689:                    if      ((msgID == g_e2p_data.E2P_1.CAN_ID1) && (g_e2p_data.E2P_1.CANcontrol.BIT.CAN_ch1 == 1))
       690:                    {
       691:                                g_CAN_data.ID1.DATA1                = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       692:                                g_CAN_data.ID1.DATA2                = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       693:                                g_CAN_data.ID1.DATA3                = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       694:                                g_CAN_data.ID1.DATA4                = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       695:                    }
       696:                    else if ((msgID == g_e2p_data.E2P_1.CAN_ID2) && (g_e2p_data.E2P_1.CANcontrol.BIT.CAN_ch2 == 1))
       697:                    {
       698:                                g_CAN_data.ID2.DATA1                = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       699:                                g_CAN_data.ID2.DATA2                = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       700:                                g_CAN_data.ID2.DATA3                = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       701:                                g_CAN_data.ID2.DATA4                = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       702:                    }
       703:                    else if ((msgID == g_e2p_data.E2P_1.CAN_ID3) && (g_e2p_data.E2P_1.CANcontrol.BIT.CAN_ch3 == 1))
       704:                    {
       705:                                g_CAN_data.ID3.DATA1                = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       706:                                g_CAN_data.ID3.DATA2                = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       707:                                g_CAN_data.ID3.DATA3                = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       708:                                g_CAN_data.ID3.DATA4                = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       709:                    }
       710:                    else if ((msgID == g_e2p_data.E2P_1.CAN_ID4) && (g_e2p_data.E2P_1.CANcontrol.BIT.CAN_ch4 == 1))
       711:                    {
       712:                                g_CAN_data.ID4.DATA1                = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       713:                                g_CAN_data.ID4.DATA2                = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       714:                                g_CAN_data.ID4.DATA3                = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       715:                                g_CAN_data.ID4.DATA4                = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       716:                    }
       717:                    else if ((msgID == g_e2p_data.E2P_1.CAN_ID5) && (g_e2p_data.E2P_1.CANcontrol.BIT.CAN_ch5 == 1))
       718:                    {
       719:                                g_CAN_data.ID5.DATA1                = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       720:                                g_CAN_data.ID5.DATA2                = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       721:                                g_CAN_data.ID5.DATA3                = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       722:                                g_CAN_data.ID5.DATA4                = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       723:                    }
       724:                    else if ((msgID == g_e2p_data.E2P_1.CAN_ID6) && (g_e2p_data.E2P_1.CANcontrol.BIT.CAN_ch6 == 1))
       725:                    {
       726:                                g_CAN_data.ID6.DATA1                = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       727:                                g_CAN_data.ID6.DATA2                = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       728:                                g_CAN_data.ID6.DATA3                = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       729:                                g_CAN_data.ID6.DATA4                = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       730:                    }
       731:            }
       732:            else if (g_e2p_data.E2P_1.model == MoTeC1)
  00000B7E 01766838A001           CMP.B       #1:8,@(2:2,ER3)
  00000B84 58600000               BNE         L7911:16
       733:            {
       734:                switch(msgID)
  00000B88 792105F0               CMP.W       #H'05F0:16,R1
  00000B8C 58600000               BNE         L7762:16
       735:                {
       736:                    case 0x5F0:
       737:                                if(g_can_rcv_timer >= 10)       // 前回受信時から10mSec以上経過している場合
  00000B90 015E482000000000       CMP.W       #H'000A:16,@_g_can_rcv_timer:32
           000A               
  00000B9A 58400000               BHS         L7915:16
       738:                                {
       739:                                        can_rcv_cnt = 0;        //  0 データ先頭
       740:                                        g_MoTeC1_data.RPM                   = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       741:                                        g_MoTeC1_data.ThrottlePosition      = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       742:                                        g_MoTeC1_data.ManifoldPressure      = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       743:                                        g_MoTeC1_data.InletAirTemp          = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       744:                                        can_rcv_cnt ++;
       745:                                }
       746:                                else
       747:                                {
       748:                                    if      (can_rcv_cnt ==  1) //  1
  00000B9E 6B38000000001F10       CMP.W       #1:3,@__$can_rcv_cnt$8:32
  00000BA6 58700000               BEQ         L7917:16
       749:                                    {
       750:                                        g_MoTeC1_data.EngineTemp            = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       751:                                        g_MoTeC1_data.Lambda1               = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       752:                                        g_MoTeC1_data.Lambda2               = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       753:                                        g_MoTeC1_data.ExhaustPressure       = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       754:                                        can_rcv_cnt ++;
       755:                                    }
       756:                                    else if (can_rcv_cnt ==  2) //  2
  00000BAA 6B2800000000           MOV.W       @__$can_rcv_cnt$8:32,E0
  00000BB0 1F28                   CMP.W       #2:3,E0
  00000BB2 58700000               BEQ         L7919:16
       757:                                    {
       758:                                        g_MoTeC1_data.MassAirFlow           = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       759:                                        g_MoTeC1_data.FuelTemp              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       760:                                        g_MoTeC1_data.FuelPressure          = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       761:                                        g_MoTeC1_data.OilTemp               = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       762:                                        can_rcv_cnt ++;
       763:                                    }
       764:                                    else if (can_rcv_cnt ==  3) //  3
  00000BB6 1F38                   CMP.W       #3:3,E0
  00000BB8 58700000               BEQ         L7921:16
       765:                                    {
       766:                                        g_MoTeC1_data.OilPressure           = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       767:                                        // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       768:                                        // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       769:                                        // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       770:                                        can_rcv_cnt ++;
       771:                                    }
       772:                                    else if (can_rcv_cnt ==  4) //  4
  00000BBC 1F48                   CMP.W       #4:3,E0
  00000BBE 58700000               BEQ         L7923:16
       773:                                    {
       774:                                        g_MoTeC1_data.ExhaustTemp1          = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       775:                                        g_MoTeC1_data.ExhaustTemp2          = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       776:                                        // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       777:                                        // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       778:                                        can_rcv_cnt ++;
       779:                                    }
       780:                                    else if (can_rcv_cnt ==  5) //  5
  00000BC2 1F58                   CMP.W       #5:3,E0
  00000BC4 58700000               BEQ         L7925:16
       781:                                    {
       782:                                        // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       783:                                        // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       784:                                        g_MoTeC1_data.BatteryVoltage        = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       785:                                        g_MoTeC1_data.ECUTemp               = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       786:                                        can_rcv_cnt ++;
       787:                                    }
       788:                                    else if (can_rcv_cnt ==  6) //  6
  00000BC8 1F68                   CMP.W       #6:3,E0
  00000BCA 58700000               BEQ         L7927:16
       789:                                    {
       790:                                        // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       791:                                        // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       792:                                        // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       793:                                        // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       794:                                        can_rcv_cnt ++;
       795:                                    }
       796:                                    else if (can_rcv_cnt ==  7) //  7
  00000BCE 1F78                   CMP.W       #7:3,E0
  00000BD0 58700000               BEQ         L7929:16
       797:                                    {
       798:                                        // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       799:                                        g_MoTeC1_data.GroundSpeed           = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       800:                                        // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       801:                                        // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       802:                                        can_rcv_cnt ++;
       803:                                    }
       804:                                    else if (can_rcv_cnt ==  8) //  8
  00000BD4 79280008               CMP.W       #8:16,E0
  00000BD8 58700000               BEQ         L7927:16
       805:                                    {
       806:                                        // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       807:                                        // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       808:                                        // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       809:                                        // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       810:                                        can_rcv_cnt ++;
       811:                                    }
       812:                                    else if (can_rcv_cnt ==  9) //  9
  00000BDC 79280009               CMP.W       #9:16,E0
  00000BE0 58700000               BEQ         L7932:16
       813:                                    {
       814:                                        // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       815:                                        g_MoTeC1_data.AimLambda1            = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       816:                                        g_MoTeC1_data.AimLambda2            = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       817:                                        // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       818:                                        can_rcv_cnt ++;
       819:                                    }
       820:                                    else if (can_rcv_cnt == 10) // 10
  00000BE4 7928000A               CMP.W       #H'000A:16,E0
  00000BE8 4700                   BEQ         L7934:8
       821:                                    {
       822:                                        // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       823:                                        g_MoTeC1_data.IgnitionAdvance       = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       824:                                        // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       825:                                        // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       826:                                        can_rcv_cnt ++;
       827:                                    }
       828:                                    else if (can_rcv_cnt == 11) // 11
  00000BEA 7928000B               CMP.W       #H'000B:16,E0
  00000BEE 58700000               BEQ         L7927:16
       829:                                    {
       830:                                        // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       831:                                        // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       832:                                        // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       833:                                        // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       834:                                        can_rcv_cnt ++;
       835:                                    }
       836:                                    else if (can_rcv_cnt == 12) // 12
  00000BF2 7928000C               CMP.W       #H'000C:16,E0
  00000BF6 58700000               BEQ         L7927:16
       837:                                    {
       838:                                        // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       839:                                        // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       840:                                        // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       841:                                        // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       842:                                        can_rcv_cnt ++;
       843:                                    }
       844:                                    else if (can_rcv_cnt == 13) // 13
  00000BFA 7928000D               CMP.W       #H'000D:16,E0
  00000BFE 4700                   BEQ         L7938:8
       845:                                    {
       846:                                        // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       847:                                        // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       848:                                        // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       849:                                        g_MoTeC1_data.InjectorDuty          = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       850:                                        can_rcv_cnt ++;
       851:                                    }
       852:                                    else if (can_rcv_cnt == 14) // 14
  00000C00 7928000E               CMP.W       #H'000E:16,E0
  00000C04 4700                   BEQ         L7940:8
       853:                                    {
       854:                                        g_MoTeC1_data.Gear                  = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       855:                                        // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       856:                                        // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       857:                                        // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       858:                                        can_rcv_cnt ++;
       859:                                    }
       860:                                    else if (can_rcv_cnt == 15) // 15
  00000C06 7928000F               CMP.W       #H'000F:16,E0
  00000C0A 58700000               BEQ         L7927:16
       861:                                    {
       862:                                        // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       863:                                        // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       864:                                        // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       865:                                        // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       866:                                        can_rcv_cnt ++;
       867:                                    }
       868:                                    else if (can_rcv_cnt == 16) // 16
  00000C0E 79280010               CMP.W       #H'0010:16,E0
  00000C12 58700000               BEQ         L7927:16
       869:                                    {
       870:                                        // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       871:                                        // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       872:                                        // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       873:                                        // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       874:                                        can_rcv_cnt ++;
       875:                                    }
       876:                                    else if (can_rcv_cnt == 17) // 17
  00000C16 79280011               CMP.W       #H'0011:16,E0
  00000C1A 58600000               BNE         L7943:16
  00000C1E 5A000000               JMP         @L7927:24
  00000C22                    L7940:                                
  00000C22 6E710008               MOV.B       @(8:16,SP),R1H
  00000C26 1899                   SUB.B       R1L,R1L
  00000C28 6E780009               MOV.B       @(9:16,SP),R0L
  00000C2C 1750                   EXTU.W      R0
  00000C2E 0901                   ADD.W       R0,R1
  00000C30 6BA100000000           MOV.W       R1,@(_g_MoTeC1_data+H'0000002C):32
  00000C36 5A000000               JMP         @L7927:24
  00000C3A                    L7938:                                
  00000C3A 6E71000E               MOV.B       @(H'000E:16,SP),R1H
  00000C3E 1899                   SUB.B       R1L,R1L
  00000C40 6E78000F               MOV.B       @(H'000F:16,SP),R0L
  00000C44 1750                   EXTU.W      R0
  00000C46 0901                   ADD.W       R0,R1
  00000C48 6BA100000000           MOV.W       R1,@(_g_MoTeC1_data+H'0000002A):32
  00000C4E 5A000000               JMP         @L7927:24
  00000C52                    L7934:                                
  00000C52 6E71000A               MOV.B       @(H'000A:16,SP),R1H
  00000C56 1899                   SUB.B       R1L,R1L
  00000C58 6E78000B               MOV.B       @(H'000B:16,SP),R0L
  00000C5C 1750                   EXTU.W      R0
  00000C5E 0901                   ADD.W       R0,R1
  00000C60 6BA100000000           MOV.W       R1,@(_g_MoTeC1_data+H'00000028):32
  00000C66 5A000000               JMP         @L7927:24
  00000C6A                    L7932:                                
  00000C6A 6E71000A               MOV.B       @(H'000A:16,SP),R1H
  00000C6E 1899                   SUB.B       R1L,R1L
  00000C70 6E78000B               MOV.B       @(H'000B:16,SP),R0L
  00000C74 1750                   EXTU.W      R0
  00000C76 0901                   ADD.W       R0,R1
  00000C78 7A0200000000           MOV.L       #_g_MoTeC1_data,ER2
  00000C7E 6FA10024               MOV.W       R1,@(H'0024:16,ER2)
  00000C82 6E71000C               MOV.B       @(H'000C:16,SP),R1H
  00000C86 1899                   SUB.B       R1L,R1L
  00000C88 6E78000D               MOV.B       @(H'000D:16,SP),R0L
  00000C8C 0901                   ADD.W       R0,R1
  00000C8E 6FA10026               MOV.W       R1,@(H'0026:16,ER2)
  00000C92 5A000000               JMP         @L7927:24
  00000C96                    L7929:                                
  00000C96 6E71000A               MOV.B       @(H'000A:16,SP),R1H
  00000C9A 1899                   SUB.B       R1L,R1L
  00000C9C 6E78000B               MOV.B       @(H'000B:16,SP),R0L
  00000CA0 1750                   EXTU.W      R0
  00000CA2 0901                   ADD.W       R0,R1
  00000CA4 6BA100000000           MOV.W       R1,@(_g_MoTeC1_data+H'00000022):32
  00000CAA 5A000000               JMP         @L7927:24
  00000CAE                    L7925:                                
  00000CAE 6E71000C               MOV.B       @(H'000C:16,SP),R1H
  00000CB2 1899                   SUB.B       R1L,R1L
  00000CB4 6E78000D               MOV.B       @(H'000D:16,SP),R0L
  00000CB8 1750                   EXTU.W      R0
  00000CBA 0901                   ADD.W       R0,R1
  00000CBC 7A0200000000           MOV.L       #_g_MoTeC1_data,ER2
  00000CC2 6FA1001E               MOV.W       R1,@(H'001E:16,ER2)
  00000CC6 6E71000E               MOV.B       @(H'000E:16,SP),R1H
  00000CCA 1899                   SUB.B       R1L,R1L
  00000CCC 6E78000F               MOV.B       @(H'000F:16,SP),R0L
  00000CD0 0901                   ADD.W       R0,R1
  00000CD2 6FA10020               MOV.W       R1,@(H'0020:16,ER2)
  00000CD6 5A000000               JMP         @L7927:24
  00000CDA                    L7923:                                
  00000CDA 6E710008               MOV.B       @(8:16,SP),R1H
  00000CDE 1899                   SUB.B       R1L,R1L
  00000CE0 6E780009               MOV.B       @(9:16,SP),R0L
  00000CE4 1750                   EXTU.W      R0
  00000CE6 0901                   ADD.W       R0,R1
  00000CE8 7A0200000000           MOV.L       #_g_MoTeC1_data,ER2
  00000CEE 6FA1001A               MOV.W       R1,@(H'001A:16,ER2)
  00000CF2 6E71000A               MOV.B       @(H'000A:16,SP),R1H
  00000CF6 1899                   SUB.B       R1L,R1L
  00000CF8 6E78000B               MOV.B       @(H'000B:16,SP),R0L
  00000CFC 0901                   ADD.W       R0,R1
  00000CFE 6FA1001C               MOV.W       R1,@(H'001C:16,ER2)
  00000D02 5A000000               JMP         @L7927:24
  00000D06                    L7921:                                
  00000D06 6E710008               MOV.B       @(8:16,SP),R1H
  00000D0A 1899                   SUB.B       R1L,R1L
  00000D0C 6E780009               MOV.B       @(9:16,SP),R0L
  00000D10 1750                   EXTU.W      R0
  00000D12 0901                   ADD.W       R0,R1
  00000D14 6BA100000000           MOV.W       R1,@(_g_MoTeC1_data+H'00000018):32
  00000D1A 5A000000               JMP         @L7927:24
  00000D1E                    L7919:                                
  00000D1E 6E710008               MOV.B       @(8:16,SP),R1H
  00000D22 1899                   SUB.B       R1L,R1L
  00000D24 6E780009               MOV.B       @(9:16,SP),R0L
  00000D28 1750                   EXTU.W      R0
  00000D2A 0901                   ADD.W       R0,R1
  00000D2C 7A0200000000           MOV.L       #_g_MoTeC1_data,ER2
  00000D32 6FA10010               MOV.W       R1,@(H'0010:16,ER2)
  00000D36 6E71000A               MOV.B       @(H'000A:16,SP),R1H
  00000D3A 1899                   SUB.B       R1L,R1L
  00000D3C 6E78000B               MOV.B       @(H'000B:16,SP),R0L
  00000D40 0901                   ADD.W       R0,R1
  00000D42 6FA10012               MOV.W       R1,@(H'0012:16,ER2)
  00000D46 6E71000C               MOV.B       @(H'000C:16,SP),R1H
  00000D4A 1899                   SUB.B       R1L,R1L
  00000D4C 6E78000D               MOV.B       @(H'000D:16,SP),R0L
  00000D50 0901                   ADD.W       R0,R1
  00000D52 6FA10014               MOV.W       R1,@(H'0014:16,ER2)
  00000D56 6E71000E               MOV.B       @(H'000E:16,SP),R1H
  00000D5A 1899                   SUB.B       R1L,R1L
  00000D5C 6E78000F               MOV.B       @(H'000F:16,SP),R0L
  00000D60 0901                   ADD.W       R0,R1
  00000D62 6FA10016               MOV.W       R1,@(H'0016:16,ER2)
  00000D66 4000                   BRA         L7927:8
  00000D68                    L7917:                                
  00000D68 6E710008               MOV.B       @(8:16,SP),R1H
  00000D6C 1899                   SUB.B       R1L,R1L
  00000D6E 6E780009               MOV.B       @(9:16,SP),R0L
  00000D72 1750                   EXTU.W      R0
  00000D74 0901                   ADD.W       R0,R1
  00000D76 7A0200000000           MOV.L       #_g_MoTeC1_data,ER2
  00000D7C 6FA10008               MOV.W       R1,@(8:16,ER2)
  00000D80 6E71000A               MOV.B       @(H'000A:16,SP),R1H
  00000D84 1899                   SUB.B       R1L,R1L
  00000D86 6E78000B               MOV.B       @(H'000B:16,SP),R0L
  00000D8A 0901                   ADD.W       R0,R1
  00000D8C 6FA1000A               MOV.W       R1,@(H'000A:16,ER2)
  00000D90 6E71000C               MOV.B       @(H'000C:16,SP),R1H
  00000D94 1899                   SUB.B       R1L,R1L
  00000D96 6E78000D               MOV.B       @(H'000D:16,SP),R0L
  00000D9A 0901                   ADD.W       R0,R1
  00000D9C 6FA1000C               MOV.W       R1,@(H'000C:16,ER2)
  00000DA0 6E71000E               MOV.B       @(H'000E:16,SP),R1H
  00000DA4 1899                   SUB.B       R1L,R1L
  00000DA6 6E78000F               MOV.B       @(H'000F:16,SP),R0L
  00000DAA 0901                   ADD.W       R0,R1
  00000DAC 6FA1000E               MOV.W       R1,@(H'000E:16,ER2)
  00000DB0                    L7927:                                
  00000DB0 6B38000000000A10       ADD.W       #1:3,@__$can_rcv_cnt$8:32
  00000DB8 4000                   BRA         L7943:8
  00000DBA                    L7915:                                
  00000DBA 6E710008               MOV.B       @(8:16,SP),R1H
  00000DBE 1899                   SUB.B       R1L,R1L
  00000DC0 6E780009               MOV.B       @(9:16,SP),R0L
  00000DC4 1750                   EXTU.W      R0
  00000DC6 0901                   ADD.W       R0,R1
  00000DC8 7A0300000000           MOV.L       #_g_MoTeC1_data,ER3
  00000DCE 69B1                   MOV.W       R1,@ER3
  00000DD0 6E71000A               MOV.B       @(H'000A:16,SP),R1H
  00000DD4 1899                   SUB.B       R1L,R1L
  00000DD6 6E78000B               MOV.B       @(H'000B:16,SP),R0L
  00000DDA 0901                   ADD.W       R0,R1
  00000DDC 6FB10002               MOV.W       R1,@(2:16,ER3)
  00000DE0 6E71000C               MOV.B       @(H'000C:16,SP),R1H
  00000DE4 1899                   SUB.B       R1L,R1L
  00000DE6 6E78000D               MOV.B       @(H'000D:16,SP),R0L
  00000DEA 0901                   ADD.W       R0,R1
  00000DEC 6FB10004               MOV.W       R1,@(4:16,ER3)
  00000DF0 6E71000E               MOV.B       @(H'000E:16,SP),R1H
  00000DF4 1899                   SUB.B       R1L,R1L
  00000DF6 6E78000F               MOV.B       @(H'000F:16,SP),R0L
  00000DFA 0901                   ADD.W       R0,R1
  00000DFC 6FB10006               MOV.W       R1,@(6:16,ER3)
  00000E00 6BF100000000           MOV.W       #1:4,@__$can_rcv_cnt$8:32
  00000E06                    L7943:                                
       877:                                    {
       878:                                        // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       879:                                        // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       880:                                        // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       881:                                        // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       882:                                        can_rcv_cnt ++;
       883:                                    }
       884:                                }
       885:                                
       886:                                g_can_rcv_timer = 0;    // タイマーリセット
  00000E06 6BF000000000           MOV.W       #0:4,@_g_can_rcv_timer:32
  00000E0C 5A000000               JMP         @L7762:24
  00000E10                    L7911:                                
       887:                                default: break;
       888:                }
       889:            }
       890:            else if (g_e2p_data.E2P_1.model == MoTeC2)
  00000E10 6A3800000000A002       CMP.B       #2:8,@(_g_e2p_data+2):32
  00000E18 58700000               BEQ         L7945:16
       891:            {
       892:                switch(msgID)
       893:                {
       894:                    case 0x0E8:
       895:                                if((can_rcv[6] == 0x82) && (can_rcv[7] == 0x81) && (can_rcv[8] == 0x80))
       896:                                {
       897:                                    can_rcv_cnt = 0;
       898:                                }
       899:                                else
       900:                                {
       901:                                    //
       902:                                }
       903:                                if      (can_rcv_cnt ==  0) //  0
       904:                                {
       905:                                    // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       906:                                    // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       907:                                    g_MoTeC1_data.RPM                   = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       908:                                    g_MoTeC1_data.ThrottlePosition      = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       909:                                    can_rcv_cnt ++;
       910:                                }
       911:                                else if (can_rcv_cnt ==  1) //  1
       912:                                {
       913:                                    g_MoTeC1_data.ManifoldPressure      = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       914:                                    g_MoTeC1_data.InletAirTemp          = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       915:                                    g_MoTeC1_data.EngineTemp            = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       916:                                    g_MoTeC1_data.Lambda1               = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       917:                                    can_rcv_cnt ++;
       918:                                }
       919:                                else if (can_rcv_cnt ==  2) //  2
       920:                                {
       921:                                    g_MoTeC1_data.Lambda2               = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       922:                                    g_MoTeC1_data.ExhaustPressure       = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       923:                                    g_MoTeC1_data.MassAirFlow           = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       924:                                    g_MoTeC1_data.FuelTemp              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       925:                                    can_rcv_cnt ++;
       926:                                }
       927:                                else if (can_rcv_cnt ==  3) //  3
       928:                                {
       929:                                    g_MoTeC1_data.FuelPressure          = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       930:                                    g_MoTeC1_data.OilTemp               = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       931:                                    g_MoTeC1_data.OilPressure           = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       932:                                    // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       933:                                    can_rcv_cnt ++;
       934:                                }
       935:                                else if (can_rcv_cnt ==  4) //  4
       936:                                {
       937:                                    // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       938:                                    // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       939:                                    g_MoTeC1_data.ExhaustTemp1          = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       940:                                    g_MoTeC1_data.ExhaustTemp2          = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       941:                                    can_rcv_cnt ++;
       942:                                }
       943:                                else if (can_rcv_cnt ==  5) //  5
       944:                                {
       945:                                    // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       946:                                    // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       947:                                    // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       948:                                    // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       949:                                    can_rcv_cnt ++;
       950:                                }
       951:                                else if (can_rcv_cnt ==  6) //  6
       952:                                {
       953:                                    g_MoTeC1_data.BatteryVoltage        = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       954:                                    g_MoTeC1_data.ECUTemp               = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       955:                                    // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       956:                                    // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       957:                                    can_rcv_cnt ++;
       958:                                }
       959:                                else if (can_rcv_cnt ==  7) //  7
       960:                                {
       961:                                    // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       962:                                    // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       963:                                    // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       964:                                    g_MoTeC1_data.GroundSpeed           = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       965:                                    can_rcv_cnt ++;
       966:                                }
       967:                                else if (can_rcv_cnt ==  8) //  8
       968:                                {
       969:                                    // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       970:                                    // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       971:                                    // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       972:                                    // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       973:                                    can_rcv_cnt ++;
       974:                                }
       975:                                else if (can_rcv_cnt ==  9) //  9
       976:                                {
       977:                                    // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       978:                                    // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       979:                                    // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       980:                                    g_MoTeC1_data.AimLambda1            = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       981:                                    can_rcv_cnt ++;
       982:                                }
       983:                                else if (can_rcv_cnt == 10) // 10
       984:                                {
       985:                                    g_MoTeC1_data.AimLambda2            = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       986:                                    // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       987:                                    // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       988:                                    g_MoTeC1_data.IgnitionAdvance       = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       989:                                    can_rcv_cnt ++;
       990:                                }
       991:                                else if (can_rcv_cnt == 11) // 11
       992:                                {
       993:                                    // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
       994:                                    // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
       995:                                    // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
       996:                                    // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
       997:                                    can_rcv_cnt ++;
       998:                                }
       999:                                else if (can_rcv_cnt == 12) // 12
      1000:                                {
      1001:                                    // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
      1002:                                    // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
      1003:                                    // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
      1004:                                    // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
      1005:                                    can_rcv_cnt ++;
      1006:                                }
      1007:                                else if (can_rcv_cnt == 13) // 13
      1008:                                {
      1009:                                    // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
      1010:                                    // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
      1011:                                    // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
      1012:                                    // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
      1013:                                    can_rcv_cnt ++;
      1014:                                }
      1015:                                else if (can_rcv_cnt == 14) // 14
      1016:                                {
      1017:                                    // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
      1018:                                    g_MoTeC1_data.InjectorDuty          = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
      1019:                                    g_MoTeC1_data.Gear                  = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
      1020:                                    // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
      1021:                                    can_rcv_cnt ++;
      1022:                                }
      1023:                                else if (can_rcv_cnt == 15) // 15
      1024:                                {
      1025:                                    // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
      1026:                                    // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
      1027:                                    // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
      1028:                                    // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
      1029:                                    can_rcv_cnt ++;
      1030:                                }
      1031:                                else if (can_rcv_cnt == 16) // 16
      1032:                                {
      1033:                                    // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
      1034:                                    // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
      1035:                                    // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
      1036:                                    // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
      1037:                                    can_rcv_cnt ++;
      1038:                                }
      1039:                                else if (can_rcv_cnt == 17) // 17
      1040:                                {
      1041:                                    // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
      1042:                                    // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
      1043:                                    // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
      1044:                                    // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
      1045:                                    can_rcv_cnt ++;
      1046:                                }
      1047:                                else if (can_rcv_cnt == 18) // 18
      1048:                                {
      1049:                                    // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
      1050:                                    // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
      1051:                                    // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
      1052:                                    // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
      1053:                                    can_rcv_cnt ++;
      1054:                                }
      1055:                                else if (can_rcv_cnt == 19) // 19
      1056:                                {
      1057:                                    // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
      1058:                                    // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
      1059:                                    // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
      1060:                                    // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
      1061:                                    can_rcv_cnt ++;
      1062:                                }
      1063:                                else if (can_rcv_cnt == 20) // 20
      1064:                                {
      1065:                                    // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
      1066:                                    // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
      1067:                                    // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
      1068:                                    // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
      1069:                                    can_rcv_cnt ++;
      1070:                                }
      1071:                                else if (can_rcv_cnt == 21) // 21
      1072:                                {
      1073:                                    // N/A                              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
      1074:                                    // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
      1075:                                    // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
      1076:                                    // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
      1077:                                    can_rcv_cnt ++;
      1078:                                }
      1079:                                default: break;
      1080:                }
      1081:            }
      1082:            else if (g_e2p_data.E2P_1.model == Haltech1)
  00000E1C 6A3800000000A003       CMP.B       #3:8,@(_g_e2p_data+2):32
  00000E24 58700000               BEQ         L7947:16
      1083:            {
      1084:                switch(msgID)
      1085:                {
      1086:                    case 0x010:
      1087:                                g_Haltech1_data.RPM                 = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
      1088:                                g_Haltech1_data.GroundSpeed         = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
      1089:                                g_Haltech1_data.OilPressure         = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
      1090:                                // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
      1091:                                break;
      1092:                    case 0x011:
      1093:                                g_Haltech1_data.EngineTemp          = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
      1094:                                g_Haltech1_data.FuelPressure        = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
      1095:                                g_Haltech1_data.BatteryVoltage      = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
      1096:                                g_Haltech1_data.ThrottlePosition    = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
      1097:                                break;
      1098:                    case 0x012:
      1099:                                g_Haltech1_data.ManifoldPressure    = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
      1100:                                g_Haltech1_data.InletAirTemp        = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
      1101:                                // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
      1102:                                g_Haltech1_data.Lambda              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
      1103:                                break;
      1104:                    case 0x013:
      1105:                                g_Haltech1_data.IgnitionAdvance     = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
      1106:                                g_Haltech1_data.Gear                = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
      1107:                                g_Haltech1_data.InjectorDuty        = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
      1108:                                // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
      1109:                                default: break;
      1110:                }
      1111:            }
      1112:            else if (g_e2p_data.E2P_1.model == Haltech2)
  00000E28 6A3800000000A004       CMP.B       #4:8,@(_g_e2p_data+2):32
  00000E30 58600000               BNE         L7762:16
      1113:            {
      1114:                switch(msgID)
  00000E34 6F700010               MOV.W       @(H'0010:16,SP),R0
  00000E38 79200360               CMP.W       #H'0360:16,R0
  00000E3C 58700000               BEQ         L7772:16
  00000E40 79200361               CMP.W       #H'0361:16,R0
  00000E44 58700000               BEQ         L7773:16
  00000E48 79200362               CMP.W       #H'0362:16,R0
  00000E4C 58700000               BEQ         L7774:16
  00000E50 79200368               CMP.W       #H'0368:16,R0
  00000E54 58700000               BEQ         L7775:16
  00000E58 79200370               CMP.W       #H'0370:16,R0
  00000E5C 58700000               BEQ         L7776:16
  00000E60 79200372               CMP.W       #H'0372:16,R0
  00000E64 58700000               BEQ         L7777:16
  00000E68 79200373               CMP.W       #H'0373:16,R0
  00000E6C 4700                   BEQ         L7778:8
  00000E6E 792003E0               CMP.W       #H'03E0:16,R0
  00000E72 58600000               BNE         L7762:16
      1115:                {
      1116:                    case 0x360:
      1117:                                g_Haltech2_data.RPM                 = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
      1118:                                g_Haltech2_data.ManifoldPressure    = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
      1119:                                g_Haltech2_data.ThrottlePosition    = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
      1120:                                // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
      1121:                                break;
      1122:                    case 0x361:
      1123:                                g_Haltech2_data.FuelPressure        = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
      1124:                                g_Haltech2_data.OilPressure         = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
      1125:                                // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
      1126:                                // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
      1127:                                break;
      1128:                    case 0x362:
      1129:                                g_Haltech2_data.InjectorDuty        = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
      1130:                                // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
      1131:                                g_Haltech2_data.IgnitionAdvance1    = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
      1132:                                g_Haltech2_data.IgnitionAdvance2    = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
      1133:                                break;
      1134:                    case 0x368:
      1135:                                g_Haltech2_data.Lambda              = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
      1136:                                // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
      1137:                                // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
      1138:                                // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
      1139:                                break;
      1140:                    case 0x370:
      1141:                                g_Haltech2_data.GroundSpeed         = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
      1142:                                g_Haltech2_data.Gear                = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
      1143:                                // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
      1144:                                // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
      1145:                                break;
      1146:                    case 0x372:
      1147:                                g_Haltech2_data.BatteryVoltage      = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
      1148:                                g_Haltech2_data.InletAirTemp2       = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
      1149:                                // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
      1150:                                g_Haltech2_data.BaroPressure        = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
      1151:                                break;
      1152:                    case 0x373:
      1153:                                g_Haltech2_data.EGT                 = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
      1154:                                // N/A                              = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
      1155:                                // N/A                              = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
      1156:                                // N/A                              = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
      1157:                                break;
      1158:                    case 0x3E0:
      1159:                                g_Haltech2_data.EngineTemp          = ((((unsigned int) can_rcv[6] ) << 8) + can_rcv[7] );
  00000E76 6E710008               MOV.B       @(8:16,SP),R1H
  00000E7A 1899                   SUB.B       R1L,R1L
  00000E7C 6E780009               MOV.B       @(9:16,SP),R0L
  00000E80 1750                   EXTU.W      R0
  00000E82 0901                   ADD.W       R0,R1
  00000E84 7A0200000000           MOV.L       #_g_Haltech2_data,ER2
  00000E8A 6FA1001E               MOV.W       R1,@(H'001E:16,ER2)
      1160:                                g_Haltech2_data.InletAirTemp1       = ((((unsigned int) can_rcv[8] ) << 8) + can_rcv[9] );
  00000E8E 6E71000A               MOV.B       @(H'000A:16,SP),R1H
  00000E92 1899                   SUB.B       R1L,R1L
  00000E94 6E78000B               MOV.B       @(H'000B:16,SP),R0L
  00000E98 0901                   ADD.W       R0,R1
  00000E9A 6FA10020               MOV.W       R1,@(H'0020:16,ER2)
      1161:                                g_Haltech2_data.FuelTemp            = ((((unsigned int) can_rcv[10]) << 8) + can_rcv[11]);
  00000E9E 6E71000C               MOV.B       @(H'000C:16,SP),R1H
  00000EA2 1899                   SUB.B       R1L,R1L
  00000EA4 6E78000D               MOV.B       @(H'000D:16,SP),R0L
  00000EA8 0901                   ADD.W       R0,R1
  00000EAA 6FA10022               MOV.W       R1,@(H'0022:16,ER2)
      1162:                                g_Haltech2_data.OilTemp             = ((((unsigned int) can_rcv[12]) << 8) + can_rcv[13]);
  00000EAE 6E71000E               MOV.B       @(H'000E:16,SP),R1H
  00000EB2 1899                   SUB.B       R1L,R1L
  00000EB4 6E78000F               MOV.B       @(H'000F:16,SP),R0L
  00000EB8 0901                   ADD.W       R0,R1
  00000EBA 6FA10024               MOV.W       R1,@(H'0024:16,ER2)
  00000EBE 5A000000               JMP         @L7762:24
  00000EC2                    L7778:                                
  00000EC2 6E710008               MOV.B       @(8:16,SP),R1H
  00000EC6 1899                   SUB.B       R1L,R1L
  00000EC8 6E780009               MOV.B       @(9:16,SP),R0L
  00000ECC 1750                   EXTU.W      R0
  00000ECE 0901                   ADD.W       R0,R1
  00000ED0 6BA100000000           MOV.W       R1,@(_g_Haltech2_data+H'0000001C):32
  00000ED6 5A000000               JMP         @L7762:24
  00000EDA                    L7777:                                
  00000EDA 6E710008               MOV.B       @(8:16,SP),R1H
  00000EDE 1899                   SUB.B       R1L,R1L
  00000EE0 6E780009               MOV.B       @(9:16,SP),R0L
  00000EE4 1750                   EXTU.W      R0
  00000EE6 0901                   ADD.W       R0,R1
  00000EE8 7A0200000000           MOV.L       #_g_Haltech2_data,ER2
  00000EEE 6FA10016               MOV.W       R1,@(H'0016:16,ER2)
  00000EF2 6E71000A               MOV.B       @(H'000A:16,SP),R1H
  00000EF6 1899                   SUB.B       R1L,R1L
  00000EF8 6E78000B               MOV.B       @(H'000B:16,SP),R0L
  00000EFC 0901                   ADD.W       R0,R1
  00000EFE 6FA10018               MOV.W       R1,@(H'0018:16,ER2)
  00000F02 6E71000E               MOV.B       @(H'000E:16,SP),R1H
  00000F06 1899                   SUB.B       R1L,R1L
  00000F08 6E78000F               MOV.B       @(H'000F:16,SP),R0L
  00000F0C 0901                   ADD.W       R0,R1
  00000F0E 6FA1001A               MOV.W       R1,@(H'001A:16,ER2)
  00000F12 5A000000               JMP         @L7762:24
  00000F16                    L7776:                                
  00000F16 6E710008               MOV.B       @(8:16,SP),R1H
  00000F1A 1899                   SUB.B       R1L,R1L
  00000F1C 6E780009               MOV.B       @(9:16,SP),R0L
  00000F20 1750                   EXTU.W      R0
  00000F22 0901                   ADD.W       R0,R1
  00000F24 7A0200000000           MOV.L       #_g_Haltech2_data,ER2
  00000F2A 6FA10012               MOV.W       R1,@(H'0012:16,ER2)
  00000F2E 6E71000A               MOV.B       @(H'000A:16,SP),R1H
  00000F32 1899                   SUB.B       R1L,R1L
  00000F34 6E78000B               MOV.B       @(H'000B:16,SP),R0L
  00000F38 0901                   ADD.W       R0,R1
  00000F3A 6FA10014               MOV.W       R1,@(H'0014:16,ER2)
  00000F3E 5A000000               JMP         @L7762:24
  00000F42                    L7775:                                
  00000F42 6E710008               MOV.B       @(8:16,SP),R1H
  00000F46 1899                   SUB.B       R1L,R1L
  00000F48 6E780009               MOV.B       @(9:16,SP),R0L
  00000F4C 1750                   EXTU.W      R0
  00000F4E 0901                   ADD.W       R0,R1
  00000F50 6BA100000000           MOV.W       R1,@(_g_Haltech2_data+H'00000010):32
  00000F56 5A000000               JMP         @L7762:24
  00000F5A                    L7774:                                
  00000F5A 6E710008               MOV.B       @(8:16,SP),R1H
  00000F5E 1899                   SUB.B       R1L,R1L
  00000F60 6E780009               MOV.B       @(9:16,SP),R0L
  00000F64 1750                   EXTU.W      R0
  00000F66 0901                   ADD.W       R0,R1
  00000F68 7A0200000000           MOV.L       #_g_Haltech2_data,ER2
  00000F6E 6FA1000A               MOV.W       R1,@(H'000A:16,ER2)
  00000F72 6E71000C               MOV.B       @(H'000C:16,SP),R1H
  00000F76 1899                   SUB.B       R1L,R1L
  00000F78 6E78000D               MOV.B       @(H'000D:16,SP),R0L
  00000F7C 0901                   ADD.W       R0,R1
  00000F7E 6FA1000C               MOV.W       R1,@(H'000C:16,ER2)
  00000F82 6E71000E               MOV.B       @(H'000E:16,SP),R1H
  00000F86 1899                   SUB.B       R1L,R1L
  00000F88 6E78000F               MOV.B       @(H'000F:16,SP),R0L
  00000F8C 0901                   ADD.W       R0,R1
  00000F8E 6FA1000E               MOV.W       R1,@(H'000E:16,ER2)
  00000F92 5A000000               JMP         @L7762:24
  00000F96                    L7773:                                
  00000F96 6E710008               MOV.B       @(8:16,SP),R1H
  00000F9A 1899                   SUB.B       R1L,R1L
  00000F9C 6E780009               MOV.B       @(9:16,SP),R0L
  00000FA0 1750                   EXTU.W      R0
  00000FA2 0901                   ADD.W       R0,R1
  00000FA4 7A0200000000           MOV.L       #_g_Haltech2_data,ER2
  00000FAA 6FA10006               MOV.W       R1,@(6:16,ER2)
  00000FAE 6E71000A               MOV.B       @(H'000A:16,SP),R1H
  00000FB2 1899                   SUB.B       R1L,R1L
  00000FB4 6E78000B               MOV.B       @(H'000B:16,SP),R0L
  00000FB8 0901                   ADD.W       R0,R1
  00000FBA 6FA10008               MOV.W       R1,@(8:16,ER2)
  00000FBE 5A000000               JMP         @L7762:24
  00000FC2                    L7772:                                
  00000FC2 6E710008               MOV.B       @(8:16,SP),R1H
  00000FC6 1899                   SUB.B       R1L,R1L
  00000FC8 6E780009               MOV.B       @(9:16,SP),R0L
  00000FCC 1750                   EXTU.W      R0
  00000FCE 0901                   ADD.W       R0,R1
  00000FD0 7A0200000000           MOV.L       #_g_Haltech2_data,ER2
  00000FD6 69A1                   MOV.W       R1,@ER2
  00000FD8 6E71000A               MOV.B       @(H'000A:16,SP),R1H
  00000FDC 1899                   SUB.B       R1L,R1L
  00000FDE 6E78000B               MOV.B       @(H'000B:16,SP),R0L
  00000FE2 0901                   ADD.W       R0,R1
  00000FE4 6FA10002               MOV.W       R1,@(2:16,ER2)
  00000FE8 6E71000C               MOV.B       @(H'000C:16,SP),R1H
  00000FEC 1899                   SUB.B       R1L,R1L
  00000FEE 6E78000D               MOV.B       @(H'000D:16,SP),R0L
  00000FF2 0901                   ADD.W       R0,R1
  00000FF4 6FA10004               MOV.W       R1,@(4:16,ER2)
  00000FF8 5A000000               JMP         @L7762:24
  00000FFC                    L7947:                                
  00000FFC 6F700010               MOV.W       @(H'0010:16,SP),R0
  00001000 0D01                   MOV.W       R0,R1
  00001002 E800                   AND.B       #0:8,R0L
  00001004 0D00                   MOV.W       R0,R0
  00001006 58600000               BNE         L7762:16
  0000100A A910                   CMP.B       #H'10:8,R1L
  0000100C 58700000               BEQ         L7767:16
  00001010 A911                   CMP.B       #H'11:8,R1L
  00001012 58700000               BEQ         L7768:16
  00001016 A912                   CMP.B       #H'12:8,R1L
  00001018 4700                   BEQ         L7769:8
  0000101A A913                   CMP.B       #H'13:8,R1L
  0000101C 58600000               BNE         L7762:16
  00001020 6E710008               MOV.B       @(8:16,SP),R1H
  00001024 1899                   SUB.B       R1L,R1L
  00001026 6E780009               MOV.B       @(9:16,SP),R0L
  0000102A 1750                   EXTU.W      R0
  0000102C 0901                   ADD.W       R0,R1
  0000102E 7A0200000000           MOV.L       #_g_Haltech1_data,ER2
  00001034 6FA10014               MOV.W       R1,@(H'0014:16,ER2)
  00001038 6E71000A               MOV.B       @(H'000A:16,SP),R1H
  0000103C 1899                   SUB.B       R1L,R1L
  0000103E 6E78000B               MOV.B       @(H'000B:16,SP),R0L
  00001042 0901                   ADD.W       R0,R1
  00001044 6FA10016               MOV.W       R1,@(H'0016:16,ER2)
  00001048 6E71000C               MOV.B       @(H'000C:16,SP),R1H
  0000104C 1899                   SUB.B       R1L,R1L
  0000104E 6E78000D               MOV.B       @(H'000D:16,SP),R0L
  00001052 0901                   ADD.W       R0,R1
  00001054 6FA10018               MOV.W       R1,@(H'0018:16,ER2)
  00001058 5A000000               JMP         @L7762:24
  0000105C                    L7769:                                
  0000105C 6E710008               MOV.B       @(8:16,SP),R1H
  00001060 1899                   SUB.B       R1L,R1L
  00001062 6E780009               MOV.B       @(9:16,SP),R0L
  00001066 1750                   EXTU.W      R0
  00001068 0901                   ADD.W       R0,R1
  0000106A 7A0200000000           MOV.L       #_g_Haltech1_data,ER2
  00001070 6FA1000E               MOV.W       R1,@(H'000E:16,ER2)
  00001074 6E71000A               MOV.B       @(H'000A:16,SP),R1H
  00001078 1899                   SUB.B       R1L,R1L
  0000107A 6E78000B               MOV.B       @(H'000B:16,SP),R0L
  0000107E 0901                   ADD.W       R0,R1
  00001080 6FA10010               MOV.W       R1,@(H'0010:16,ER2)
  00001084 6E71000E               MOV.B       @(H'000E:16,SP),R1H
  00001088 1899                   SUB.B       R1L,R1L
  0000108A 6E78000F               MOV.B       @(H'000F:16,SP),R0L
  0000108E 0901                   ADD.W       R0,R1
  00001090 6FA10012               MOV.W       R1,@(H'0012:16,ER2)
  00001094 5A000000               JMP         @L7762:24
  00001098                    L7768:                                
  00001098 6E710008               MOV.B       @(8:16,SP),R1H
  0000109C 1899                   SUB.B       R1L,R1L
  0000109E 6E780009               MOV.B       @(9:16,SP),R0L
  000010A2 1750                   EXTU.W      R0
  000010A4 0901                   ADD.W       R0,R1
  000010A6 7A0200000000           MOV.L       #_g_Haltech1_data,ER2
  000010AC 6FA10006               MOV.W       R1,@(6:16,ER2)
  000010B0 6E71000A               MOV.B       @(H'000A:16,SP),R1H
  000010B4 1899                   SUB.B       R1L,R1L
  000010B6 6E78000B               MOV.B       @(H'000B:16,SP),R0L
  000010BA 0901                   ADD.W       R0,R1
  000010BC 6FA10008               MOV.W       R1,@(8:16,ER2)
  000010C0 6E71000C               MOV.B       @(H'000C:16,SP),R1H
  000010C4 1899                   SUB.B       R1L,R1L
  000010C6 6E78000D               MOV.B       @(H'000D:16,SP),R0L
  000010CA 0901                   ADD.W       R0,R1
  000010CC 6FA1000A               MOV.W       R1,@(H'000A:16,ER2)
  000010D0 6E71000E               MOV.B       @(H'000E:16,SP),R1H
  000010D4 1899                   SUB.B       R1L,R1L
  000010D6 6E78000F               MOV.B       @(H'000F:16,SP),R0L
  000010DA 0901                   ADD.W       R0,R1
  000010DC 6FA1000C               MOV.W       R1,@(H'000C:16,ER2)
  000010E0 5A000000               JMP         @L7762:24
  000010E4                    L7767:                                
  000010E4 6E710008               MOV.B       @(8:16,SP),R1H
  000010E8 1899                   SUB.B       R1L,R1L
  000010EA 6E780009               MOV.B       @(9:16,SP),R0L
  000010EE 1750                   EXTU.W      R0
  000010F0 0901                   ADD.W       R0,R1
  000010F2 7A0200000000           MOV.L       #_g_Haltech1_data,ER2
  000010F8 69A1                   MOV.W       R1,@ER2
  000010FA 6E71000A               MOV.B       @(H'000A:16,SP),R1H
  000010FE 1899                   SUB.B       R1L,R1L
  00001100 6E78000B               MOV.B       @(H'000B:16,SP),R0L
  00001104 0901                   ADD.W       R0,R1
  00001106 6FA10002               MOV.W       R1,@(2:16,ER2)
  0000110A 6E71000C               MOV.B       @(H'000C:16,SP),R1H
  0000110E 1899                   SUB.B       R1L,R1L
  00001110 6E78000D               MOV.B       @(H'000D:16,SP),R0L
  00001114 0901                   ADD.W       R0,R1
  00001116 6FA10004               MOV.W       R1,@(4:16,ER2)
  0000111A 5A000000               JMP         @L7762:24
  0000111E                    L7945:                                
  0000111E 015EC720001000E8       CMP.W       #H'00E8:16,@(H'0010:16,SP)
  00001126 58600000               BNE         L7762:16
  0000112A 6E780008               MOV.B       @(8:16,SP),R0L
  0000112E A882                   CMP.B       #H'82:8,R0L
  00001130 4600                   BNE         L7973:8
  00001132 01746E780009A081       CMP.B       #H'81:8,@(9:16,SP)
  0000113A 4600                   BNE         L7973:8
  0000113C 01746E78000AA080       CMP.B       #H'80:8,@(H'000A:16,SP)
  00001144 58700000               BEQ         L7976:16
  00001148                    L7973:                                
  00001148 6B2800000000           MOV.W       @__$can_rcv_cnt$8:32,E0
  0000114E 58700000               BEQ         L7978:16
  00001152 1F18                   CMP.W       #1:3,E0
  00001154 58700000               BEQ         L7980:16
  00001158 1F28                   CMP.W       #2:3,E0
  0000115A 58700000               BEQ         L7982:16
  0000115E 1F38                   CMP.W       #3:3,E0
  00001160 58700000               BEQ         L7984:16
  00001164 1F48                   CMP.W       #4:3,E0
  00001166 58700000               BEQ         L7986:16
  0000116A 1F58                   CMP.W       #5:3,E0
  0000116C 58700000               BEQ         L7988:16
  00001170 1F68                   CMP.W       #6:3,E0
  00001172 58700000               BEQ         L7990:16
  00001176 1F78                   CMP.W       #7:3,E0
  00001178 58700000               BEQ         L7992:16
  0000117C 79280008               CMP.W       #8:16,E0
  00001180 58700000               BEQ         L7988:16
  00001184 79280009               CMP.W       #9:16,E0
  00001188 58700000               BEQ         L7995:16
  0000118C 7928000A               CMP.W       #H'000A:16,E0
  00001190 58700000               BEQ         L7997:16
  00001194 7928000B               CMP.W       #H'000B:16,E0
  00001198 58700000               BEQ         L7988:16
  0000119C 7928000C               CMP.W       #H'000C:16,E0
  000011A0 58700000               BEQ         L7988:16
  000011A4 7928000D               CMP.W       #H'000D:16,E0
  000011A8 58700000               BEQ         L7988:16
  000011AC 7928000E               CMP.W       #H'000E:16,E0
  000011B0 4700                   BEQ         L8002:8
  000011B2 7928000F               CMP.W       #H'000F:16,E0
  000011B6 58700000               BEQ         L7988:16
  000011BA 79280010               CMP.W       #H'0010:16,E0
  000011BE 58700000               BEQ         L7988:16
  000011C2 79280011               CMP.W       #H'0011:16,E0
  000011C6 58700000               BEQ         L7988:16
  000011CA 79280012               CMP.W       #H'0012:16,E0
  000011CE 58700000               BEQ         L7988:16
  000011D2 79280013               CMP.W       #H'0013:16,E0
  000011D6 58700000               BEQ         L7988:16
  000011DA 79280014               CMP.W       #H'0014:16,E0
  000011DE 58700000               BEQ         L7988:16
  000011E2 79280015               CMP.W       #H'0015:16,E0
  000011E6 58600000               BNE         L7762:16
  000011EA 5A000000               JMP         @L7988:24
  000011EE                    L8002:                                
  000011EE 6E71000A               MOV.B       @(H'000A:16,SP),R1H
  000011F2 1899                   SUB.B       R1L,R1L
  000011F4 6E78000B               MOV.B       @(H'000B:16,SP),R0L
  000011F8 1750                   EXTU.W      R0
  000011FA 0901                   ADD.W       R0,R1
  000011FC 7A0200000000           MOV.L       #_g_MoTeC1_data,ER2
  00001202 6FA1002A               MOV.W       R1,@(H'002A:16,ER2)
  00001206 6E71000C               MOV.B       @(H'000C:16,SP),R1H
  0000120A 1899                   SUB.B       R1L,R1L
  0000120C 6E78000D               MOV.B       @(H'000D:16,SP),R0L
  00001210 0901                   ADD.W       R0,R1
  00001212 6FA1002C               MOV.W       R1,@(H'002C:16,ER2)
  00001216 5A000000               JMP         @L7988:24
  0000121A                    L7997:                                
  0000121A 0C81                   MOV.B       R0L,R1H
  0000121C 1899                   SUB.B       R1L,R1L
  0000121E 6E780009               MOV.B       @(9:16,SP),R0L
  00001222 1750                   EXTU.W      R0
  00001224 0901                   ADD.W       R0,R1
  00001226 7A0200000000           MOV.L       #_g_MoTeC1_data,ER2
  0000122C 6FA10026               MOV.W       R1,@(H'0026:16,ER2)
  00001230 6E71000E               MOV.B       @(H'000E:16,SP),R1H
  00001234 1899                   SUB.B       R1L,R1L
  00001236 6E78000F               MOV.B       @(H'000F:16,SP),R0L
  0000123A 0901                   ADD.W       R0,R1
  0000123C 6FA10028               MOV.W       R1,@(H'0028:16,ER2)
  00001240 5A000000               JMP         @L7988:24
  00001244                    L7995:                                
  00001244 6E71000E               MOV.B       @(H'000E:16,SP),R1H
  00001248 1899                   SUB.B       R1L,R1L
  0000124A 6E78000F               MOV.B       @(H'000F:16,SP),R0L
  0000124E 1750                   EXTU.W      R0
  00001250 0901                   ADD.W       R0,R1
  00001252 6BA100000000           MOV.W       R1,@(_g_MoTeC1_data+H'00000024):32
  00001258 5A000000               JMP         @L7988:24
  0000125C                    L7992:                                
  0000125C 6E71000E               MOV.B       @(H'000E:16,SP),R1H
  00001260 1899                   SUB.B       R1L,R1L
  00001262 6E78000F               MOV.B       @(H'000F:16,SP),R0L
  00001266 1750                   EXTU.W      R0
  00001268 0901                   ADD.W       R0,R1
  0000126A 6BA100000000           MOV.W       R1,@(_g_MoTeC1_data+H'00000022):32
  00001270 5A000000               JMP         @L7988:24
  00001274                    L7990:                                
  00001274 0C81                   MOV.B       R0L,R1H
  00001276 1899                   SUB.B       R1L,R1L
  00001278 6E780009               MOV.B       @(9:16,SP),R0L
  0000127C 1750                   EXTU.W      R0
  0000127E 0901                   ADD.W       R0,R1
  00001280 7A0200000000           MOV.L       #_g_MoTeC1_data,ER2
  00001286 6FA1001E               MOV.W       R1,@(H'001E:16,ER2)
  0000128A 6E71000A               MOV.B       @(H'000A:16,SP),R1H
  0000128E 1899                   SUB.B       R1L,R1L
  00001290 6E78000B               MOV.B       @(H'000B:16,SP),R0L
  00001294 0901                   ADD.W       R0,R1
  00001296 6FA10020               MOV.W       R1,@(H'0020:16,ER2)
  0000129A 5A000000               JMP         @L7988:24
  0000129E                    L7986:                                
  0000129E 6E71000C               MOV.B       @(H'000C:16,SP),R1H
  000012A2 1899                   SUB.B       R1L,R1L
  000012A4 6E78000D               MOV.B       @(H'000D:16,SP),R0L
  000012A8 1750                   EXTU.W      R0
  000012AA 0901                   ADD.W       R0,R1
  000012AC 7A0200000000           MOV.L       #_g_MoTeC1_data,ER2
  000012B2 6FA1001A               MOV.W       R1,@(H'001A:16,ER2)
  000012B6 6E71000E               MOV.B       @(H'000E:16,SP),R1H
  000012BA 1899                   SUB.B       R1L,R1L
  000012BC 6E78000F               MOV.B       @(H'000F:16,SP),R0L
  000012C0 0901                   ADD.W       R0,R1
  000012C2 6FA1001C               MOV.W       R1,@(H'001C:16,ER2)
  000012C6 5A000000               JMP         @L7988:24
  000012CA                    L7984:                                
  000012CA 0C81                   MOV.B       R0L,R1H
  000012CC 1899                   SUB.B       R1L,R1L
  000012CE 6E780009               MOV.B       @(9:16,SP),R0L
  000012D2 1750                   EXTU.W      R0
  000012D4 0901                   ADD.W       R0,R1
  000012D6 7A0200000000           MOV.L       #_g_MoTeC1_data,ER2
  000012DC 6FA10014               MOV.W       R1,@(H'0014:16,ER2)
  000012E0 6E71000A               MOV.B       @(H'000A:16,SP),R1H
  000012E4 1899                   SUB.B       R1L,R1L
  000012E6 6E78000B               MOV.B       @(H'000B:16,SP),R0L
  000012EA 0901                   ADD.W       R0,R1
  000012EC 6FA10016               MOV.W       R1,@(H'0016:16,ER2)
  000012F0 6E71000C               MOV.B       @(H'000C:16,SP),R1H
  000012F4 1899                   SUB.B       R1L,R1L
  000012F6 6E78000D               MOV.B       @(H'000D:16,SP),R0L
  000012FA 0901                   ADD.W       R0,R1
  000012FC 6FA10018               MOV.W       R1,@(H'0018:16,ER2)
  00001300 5A000000               JMP         @L7988:24
  00001304                    L7982:                                
  00001304 0C81                   MOV.B       R0L,R1H
  00001306 1899                   SUB.B       R1L,R1L
  00001308 6E780009               MOV.B       @(9:16,SP),R0L
  0000130C 1750                   EXTU.W      R0
  0000130E 0901                   ADD.W       R0,R1
  00001310 7A0200000000           MOV.L       #_g_MoTeC1_data,ER2
  00001316 6FA1000C               MOV.W       R1,@(H'000C:16,ER2)
  0000131A 6E71000A               MOV.B       @(H'000A:16,SP),R1H
  0000131E 1899                   SUB.B       R1L,R1L
  00001320 6E78000B               MOV.B       @(H'000B:16,SP),R0L
  00001324 0901                   ADD.W       R0,R1
  00001326 6FA1000E               MOV.W       R1,@(H'000E:16,ER2)
  0000132A 6E71000C               MOV.B       @(H'000C:16,SP),R1H
  0000132E 1899                   SUB.B       R1L,R1L
  00001330 6E78000D               MOV.B       @(H'000D:16,SP),R0L
  00001334 0901                   ADD.W       R0,R1
  00001336 6FA10010               MOV.W       R1,@(H'0010:16,ER2)
  0000133A 6E71000E               MOV.B       @(H'000E:16,SP),R1H
  0000133E 1899                   SUB.B       R1L,R1L
  00001340 6E78000F               MOV.B       @(H'000F:16,SP),R0L
  00001344 0901                   ADD.W       R0,R1
  00001346 6FA10012               MOV.W       R1,@(H'0012:16,ER2)
  0000134A 5A000000               JMP         @L7988:24
  0000134E                    L7980:                                
  0000134E 0C81                   MOV.B       R0L,R1H
  00001350 1899                   SUB.B       R1L,R1L
  00001352 6E780009               MOV.B       @(9:16,SP),R0L
  00001356 1750                   EXTU.W      R0
  00001358 0901                   ADD.W       R0,R1
  0000135A 7A0200000000           MOV.L       #_g_MoTeC1_data,ER2
  00001360 6FA10004               MOV.W       R1,@(4:16,ER2)
  00001364 6E71000A               MOV.B       @(H'000A:16,SP),R1H
  00001368 1899                   SUB.B       R1L,R1L
  0000136A 6E78000B               MOV.B       @(H'000B:16,SP),R0L
  0000136E 0901                   ADD.W       R0,R1
  00001370 6FA10006               MOV.W       R1,@(6:16,ER2)
  00001374 6E71000C               MOV.B       @(H'000C:16,SP),R1H
  00001378 1899                   SUB.B       R1L,R1L
  0000137A 6E78000D               MOV.B       @(H'000D:16,SP),R0L
  0000137E 0901                   ADD.W       R0,R1
  00001380 6FA10008               MOV.W       R1,@(8:16,ER2)
  00001384 6E71000E               MOV.B       @(H'000E:16,SP),R1H
  00001388 1899                   SUB.B       R1L,R1L
  0000138A 6E78000F               MOV.B       @(H'000F:16,SP),R0L
  0000138E 0901                   ADD.W       R0,R1
  00001390 6FA1000A               MOV.W       R1,@(H'000A:16,ER2)
  00001394 4000                   BRA         L7988:8
  00001396                    L7976:                                
  00001396 1988                   SUB.W       E0,E0
  00001398                    L7978:                                
  00001398 6E71000C               MOV.B       @(H'000C:16,SP),R1H
  0000139C 1899                   SUB.B       R1L,R1L
  0000139E 6E78000D               MOV.B       @(H'000D:16,SP),R0L
  000013A2 1750                   EXTU.W      R0
  000013A4 0901                   ADD.W       R0,R1
  000013A6 7A0200000000           MOV.L       #_g_MoTeC1_data,ER2
  000013AC 69A1                   MOV.W       R1,@ER2
  000013AE 6E71000E               MOV.B       @(H'000E:16,SP),R1H
  000013B2 1899                   SUB.B       R1L,R1L
  000013B4 6E78000F               MOV.B       @(H'000F:16,SP),R0L
  000013B8 0901                   ADD.W       R0,R1
  000013BA 6FA10002               MOV.W       R1,@(2:16,ER2)
  000013BE                    L7988:                                
  000013BE 0B58                   INC.W       #1,E0
  000013C0 6BA800000000           MOV.W       E0,@__$can_rcv_cnt$8:32
  000013C6 5A000000               JMP         @L7762:24
  000013CA                    L7909:                                
  000013CA 015AC3210007           CMP.W       @(7:16,ER3),R1
  000013D0 4600                   BNE         L8009:8
  000013D2 6A2800000000           MOV.B       @(_g_e2p_data+5):32,R0L
  000013D8 58B00000               BMI         L8011:16
  000013DC                    L8009:                                
  000013DC 015AC3210009           CMP.W       @(9:16,ER3),R1
  000013E2 4600                   BNE         L8012:8
  000013E4 6A30000000007760       BLD.B       #6,@(_g_e2p_data+5):32
  000013EC 58500000               BCS         L8014:16
  000013F0                    L8012:                                
  000013F0 015AC321000B           CMP.W       @(H'000B:16,ER3),R1
  000013F6 4600                   BNE         L8015:8
  000013F8 6A30000000007750       BLD.B       #5,@(_g_e2p_data+5):32
  00001400 58500000               BCS         L8017:16
  00001404                    L8015:                                
  00001404 015AC321000D           CMP.W       @(H'000D:16,ER3),R1
  0000140A 4600                   BNE         L8018:8
  0000140C 6A30000000007740       BLD.B       #4,@(_g_e2p_data+5):32
  00001414 58500000               BCS         L8020:16
  00001418                    L8018:                                
  00001418 015AC321000F           CMP.W       @(H'000F:16,ER3),R1
  0000141E 4600                   BNE         L8021:8
  00001420 6A30000000007730       BLD.B       #3,@(_g_e2p_data+5):32
  00001428 4500                   BCS         L8023:8
  0000142A                    L8021:                                
  0000142A 015AC3210011           CMP.W       @(H'0011:16,ER3),R1
  00001430 58600000               BNE         L7762:16
  00001434 6A30000000007720       BLD.B       #2,@(_g_e2p_data+5):32
  0000143C 58400000               BCC         L7762:16
  00001440 6E710008               MOV.B       @(8:16,SP),R1H
  00001444 1899                   SUB.B       R1L,R1L
  00001446 6E780009               MOV.B       @(9:16,SP),R0L
  0000144A 1750                   EXTU.W      R0
  0000144C 0901                   ADD.W       R0,R1
  0000144E 7A0300000000           MOV.L       #_g_CAN_data,ER3
  00001454 6FB10028               MOV.W       R1,@(H'0028:16,ER3)
  00001458 6E71000A               MOV.B       @(H'000A:16,SP),R1H
  0000145C 1899                   SUB.B       R1L,R1L
  0000145E 6E78000B               MOV.B       @(H'000B:16,SP),R0L
  00001462 0901                   ADD.W       R0,R1
  00001464 6FB1002A               MOV.W       R1,@(H'002A:16,ER3)
  00001468 6E71000C               MOV.B       @(H'000C:16,SP),R1H
  0000146C 1899                   SUB.B       R1L,R1L
  0000146E 6E78000D               MOV.B       @(H'000D:16,SP),R0L
  00001472 0901                   ADD.W       R0,R1
  00001474 6FB1002C               MOV.W       R1,@(H'002C:16,ER3)
  00001478 6E71000E               MOV.B       @(H'000E:16,SP),R1H
  0000147C 1899                   SUB.B       R1L,R1L
  0000147E 6E78000F               MOV.B       @(H'000F:16,SP),R0L
  00001482 0901                   ADD.W       R0,R1
  00001484 6FB1002E               MOV.W       R1,@(H'002E:16,ER3)
  00001488 5A000000               JMP         @L7762:24
  0000148C                    L8023:                                
  0000148C 6E710008               MOV.B       @(8:16,SP),R1H
  00001490 1899                   SUB.B       R1L,R1L
  00001492 6E780009               MOV.B       @(9:16,SP),R0L
  00001496 1750                   EXTU.W      R0
  00001498 0901                   ADD.W       R0,R1
  0000149A 7A0300000000           MOV.L       #_g_CAN_data,ER3
  000014A0 6FB10020               MOV.W       R1,@(H'0020:16,ER3)
  000014A4 6E71000A               MOV.B       @(H'000A:16,SP),R1H
  000014A8 1899                   SUB.B       R1L,R1L
  000014AA 6E78000B               MOV.B       @(H'000B:16,SP),R0L
  000014AE 0901                   ADD.W       R0,R1
  000014B0 6FB10022               MOV.W       R1,@(H'0022:16,ER3)
  000014B4 6E71000C               MOV.B       @(H'000C:16,SP),R1H
  000014B8 1899                   SUB.B       R1L,R1L
  000014BA 6E78000D               MOV.B       @(H'000D:16,SP),R0L
  000014BE 0901                   ADD.W       R0,R1
  000014C0 6FB10024               MOV.W       R1,@(H'0024:16,ER3)
  000014C4 6E71000E               MOV.B       @(H'000E:16,SP),R1H
  000014C8 1899                   SUB.B       R1L,R1L
  000014CA 6E78000F               MOV.B       @(H'000F:16,SP),R0L
  000014CE 0901                   ADD.W       R0,R1
  000014D0 6FB10026               MOV.W       R1,@(H'0026:16,ER3)
  000014D4 5A000000               JMP         @L7762:24
  000014D8                    L8020:                                
  000014D8 6E710008               MOV.B       @(8:16,SP),R1H
  000014DC 1899                   SUB.B       R1L,R1L
  000014DE 6E780009               MOV.B       @(9:16,SP),R0L
  000014E2 1750                   EXTU.W      R0
  000014E4 0901                   ADD.W       R0,R1
  000014E6 7A0300000000           MOV.L       #_g_CAN_data,ER3
  000014EC 6FB10018               MOV.W       R1,@(H'0018:16,ER3)
  000014F0 6E71000A               MOV.B       @(H'000A:16,SP),R1H
  000014F4 1899                   SUB.B       R1L,R1L
  000014F6 6E78000B               MOV.B       @(H'000B:16,SP),R0L
  000014FA 0901                   ADD.W       R0,R1
  000014FC 6FB1001A               MOV.W       R1,@(H'001A:16,ER3)
  00001500 6E71000C               MOV.B       @(H'000C:16,SP),R1H
  00001504 1899                   SUB.B       R1L,R1L
  00001506 6E78000D               MOV.B       @(H'000D:16,SP),R0L
  0000150A 0901                   ADD.W       R0,R1
  0000150C 6FB1001C               MOV.W       R1,@(H'001C:16,ER3)
  00001510 6E71000E               MOV.B       @(H'000E:16,SP),R1H
  00001514 1899                   SUB.B       R1L,R1L
  00001516 6E78000F               MOV.B       @(H'000F:16,SP),R0L
  0000151A 0901                   ADD.W       R0,R1
  0000151C 6FB1001E               MOV.W       R1,@(H'001E:16,ER3)
  00001520 5A000000               JMP         @L7762:24
  00001524                    L8017:                                
  00001524 6E710008               MOV.B       @(8:16,SP),R1H
  00001528 1899                   SUB.B       R1L,R1L
  0000152A 6E780009               MOV.B       @(9:16,SP),R0L
  0000152E 1750                   EXTU.W      R0
  00001530 0901                   ADD.W       R0,R1
  00001532 7A0300000000           MOV.L       #_g_CAN_data,ER3
  00001538 6FB10010               MOV.W       R1,@(H'0010:16,ER3)
  0000153C 6E71000A               MOV.B       @(H'000A:16,SP),R1H
  00001540 1899                   SUB.B       R1L,R1L
  00001542 6E78000B               MOV.B       @(H'000B:16,SP),R0L
  00001546 0901                   ADD.W       R0,R1
  00001548 6FB10012               MOV.W       R1,@(H'0012:16,ER3)
  0000154C 6E71000C               MOV.B       @(H'000C:16,SP),R1H
  00001550 1899                   SUB.B       R1L,R1L
  00001552 6E78000D               MOV.B       @(H'000D:16,SP),R0L
  00001556 0901                   ADD.W       R0,R1
  00001558 6FB10014               MOV.W       R1,@(H'0014:16,ER3)
  0000155C 6E71000E               MOV.B       @(H'000E:16,SP),R1H
  00001560 1899                   SUB.B       R1L,R1L
  00001562 6E78000F               MOV.B       @(H'000F:16,SP),R0L
  00001566 0901                   ADD.W       R0,R1
  00001568 6FB10016               MOV.W       R1,@(H'0016:16,ER3)
  0000156C 5A000000               JMP         @L7762:24
  00001570                    L8014:                                
  00001570 6E710008               MOV.B       @(8:16,SP),R1H
  00001574 1899                   SUB.B       R1L,R1L
  00001576 6E780009               MOV.B       @(9:16,SP),R0L
  0000157A 1750                   EXTU.W      R0
  0000157C 0901                   ADD.W       R0,R1
  0000157E 7A0300000000           MOV.L       #_g_CAN_data,ER3
  00001584 6FB10008               MOV.W       R1,@(8:16,ER3)
  00001588 6E71000A               MOV.B       @(H'000A:16,SP),R1H
  0000158C 1899                   SUB.B       R1L,R1L
  0000158E 6E78000B               MOV.B       @(H'000B:16,SP),R0L
  00001592 0901                   ADD.W       R0,R1
  00001594 6FB1000A               MOV.W       R1,@(H'000A:16,ER3)
  00001598 6E71000C               MOV.B       @(H'000C:16,SP),R1H
  0000159C 1899                   SUB.B       R1L,R1L
  0000159E 6E78000D               MOV.B       @(H'000D:16,SP),R0L
  000015A2 0901                   ADD.W       R0,R1
  000015A4 6FB1000C               MOV.W       R1,@(H'000C:16,ER3)
  000015A8 6E71000E               MOV.B       @(H'000E:16,SP),R1H
  000015AC 1899                   SUB.B       R1L,R1L
  000015AE 6E78000F               MOV.B       @(H'000F:16,SP),R0L
  000015B2 0901                   ADD.W       R0,R1
  000015B4 6FB1000E               MOV.W       R1,@(H'000E:16,ER3)
  000015B8 4000                   BRA         L7762:8
  000015BA                    L8011:                                
  000015BA 6E710008               MOV.B       @(8:16,SP),R1H
  000015BE 1899                   SUB.B       R1L,R1L
  000015C0 6E780009               MOV.B       @(9:16,SP),R0L
  000015C4 1750                   EXTU.W      R0
  000015C6 0901                   ADD.W       R0,R1
  000015C8 7A0300000000           MOV.L       #_g_CAN_data,ER3
  000015CE 69B1                   MOV.W       R1,@ER3
  000015D0 6E71000A               MOV.B       @(H'000A:16,SP),R1H
  000015D4 1899                   SUB.B       R1L,R1L
  000015D6 6E78000B               MOV.B       @(H'000B:16,SP),R0L
  000015DA 0901                   ADD.W       R0,R1
  000015DC 6FB10002               MOV.W       R1,@(2:16,ER3)
  000015E0 6E71000C               MOV.B       @(H'000C:16,SP),R1H
  000015E4 1899                   SUB.B       R1L,R1L
  000015E6 6E78000D               MOV.B       @(H'000D:16,SP),R0L
  000015EA 0901                   ADD.W       R0,R1
  000015EC 6FB10004               MOV.W       R1,@(4:16,ER3)
  000015F0 6E71000E               MOV.B       @(H'000E:16,SP),R1H
  000015F4 1899                   SUB.B       R1L,R1L
  000015F6 6E78000F               MOV.B       @(H'000F:16,SP),R0L
  000015FA 0901                   ADD.W       R0,R1
  000015FC 6FB10006               MOV.W       R1,@(6:16,ER3)
  00001600                    L7762:                                
      1163:                                default: break;
      1164:                }
      1165:            }
      1166:        }
      1167:        
      1168:        CANWriteReg(CANINTF, 0x00);
  00001600 7900002C               MOV.W       #H'002C:16,R0
  00001604 5E000000               JSR         @_CANWriteReg:24
  00001608 79170012               ADD.W       #H'0012:16,R7
  0000160C 01006D76               POP.L       ER6
  00001610 5435                   RTS/L       (ER2-ER5)
      1169:    }
      1170:    
      1171:    volatile unsigned long dmy;
      1172:    
      1173:    // --------------------------------------------------------------------
      1174:    // 定期割り込みルーチン 50mSec毎
      1175:    // --------------------------------------------------------------------
      1176:    void Int_50msFunc(void)
  00001612                    _Int_50msFunc:                       ; function: Int_50msFunc
  00001612 01306DF2               STM.L       (ER2-ER5),@-SP
  00001616 01006DF6               PUSH.L      ER6
      1177:    {
      1178:        // --------------------------------------------------------------------
      1179:        // ローカル変数宣言
      1180:        // --------------------------------------------------------------------
      1181:        unsigned long i;
      1182:        
      1183:        // --------------------------------------------------------------------
      1184:        // 割り込みフラグクリア
      1185:        // --------------------------------------------------------------------
      1186:        TPU0.TSR.BIT.TGFA = 0;
  0000161A 7A0600000000           MOV.L       #_g_master_warning_flg1,ER6
  00001620 7FC57200               BCLR.B      #0,@H'00FFFFC5:8
      1187:        
      1188:        // --------------------------------------------------------------------
      1189:        // TFT LCD リフレッシュ処理
      1190:        // --------------------------------------------------------------------
      1191:        Display_Home();
  00001624 5E000000               JSR         @_Display_Home:24
      1192:        g_refresh_done = 1;
  00001628 0F12                   MOV.W       #1:3,R2
  0000162A 6BA200000000           MOV.W       R2,@_g_refresh_done:32
      1193:        
      1194:        // --------------------------------------------------------------------
      1195:        // 50msecカウンタインクリメント
      1196:        // --------------------------------------------------------------------
      1197:        g_int50mscnt ++;
  00001630 010E481000000000       ADD.L       #1:16,@_g_int50mscnt:32
           0001               
      1198:        
      1199:        // --------------------------------------------------------------------
      1200:        // マスターワーニング処理
      1201:        // --------------------------------------------------------------------
      1202:        if ((g_e2p_data.E2P_1.control.BIT.ms_on == 0)
  0000163A 6A30000000007760       BLD.B       #6,@(_g_e2p_data+3):32
  00001642 4500                   BCS         L8029:8
  00001644 7DE01F10               CMP.W       #1:3,@ER6
  00001648 4700                   BEQ         L8031:8
  0000164A 6B38000000001F10       CMP.W       #1:3,@_g_master_warning_flg2:32
  00001652 4700                   BEQ         L8031:8
  00001654 6B38000000001F10       CMP.W       #1:3,@_g_master_warning_flg3:32
  0000165C 4700                   BEQ         L8031:8
  0000165E 6B38000000001F10       CMP.W       #1:3,@_g_master_warning_flg4:32
  00001666 4700                   BEQ         L8031:8
  00001668 6B38000000001F10       CMP.W       #1:3,@_g_master_warning_flg5:32
  00001670 4700                   BEQ         L8031:8
  00001672 6B38000000001F10       CMP.W       #1:3,@_g_master_warning_flg6:32
  0000167A 4600                   BNE         L8029:8
  0000167C                    L8031:                                
      1203:        && ((g_master_warning_flg1 == 1)
      1204:        ||  (g_master_warning_flg2 == 1)
      1205:        ||  (g_master_warning_flg3 == 1)
      1206:        ||  (g_master_warning_flg4 == 1)
      1207:        ||  (g_master_warning_flg5 == 1)
      1208:        ||  (g_master_warning_flg6 == 1)))
      1209:        {
      1210:            master_warning_cnt ++;
  0000167C 7A0100000000           MOV.L       #__$master_warning_cnt,ER1
  00001682 6910                   MOV.W       @ER1,R0
  00001684 0B50                   INC.W       #1,R0
  00001686 6990                   MOV.W       R0,@ER1
      1211:            if(master_warning_cnt == 1)
  00001688 1F10                   CMP.W       #1:3,R0
  0000168A 4600                   BNE         L8037:8
      1212:            {
      1213:                Beep_OneShotMax();
  0000168C 6BA200000000           MOV.W       R2,@_g_beep_oneshotmax_flg:32
  00001692 5A000000               JMP         @L8038:24
  00001696                    L8037:                                
      1214:            }
      1215:            else if(master_warning_cnt >= 10)
  00001696 7920000A               CMP.W       #H'000A:16,R0
  0000169A 58500000               BLO         L8038:16
      1216:            {
      1217:                master_warning_cnt = 0;
  0000169E 1900                   SUB.W       R0,R0
  000016A0 6990                   MOV.W       R0,@ER1
  000016A2 5A000000               JMP         @L8038:24
  000016A6                    L8029:                                
      1218:            }
      1219:        }
      1220:        // --------------------------------------------------------------------
      1221:        // シフトタイミングランプ処理
      1222:        // --------------------------------------------------------------------
      1223:        else if(g_shift_timing_flg == 3)
  000016A6 6B38000000001F30       CMP.W       #3:3,@_g_shift_timing_flg:32
  000016AE 4600                   BNE         L8041:8
      1224:        {
      1225:            g_shift_timing_cnt ++;
  000016B0 6B2000000000           MOV.W       @__$g_shift_timing_cnt:32,R0
  000016B6 0B50                   INC.W       #1,R0
  000016B8 6BA000000000           MOV.W       R0,@__$g_shift_timing_cnt:32
      1226:            
      1227:            if(g_shift_timing_cnt == 1)
  000016BE 1F10                   CMP.W       #1:3,R0
  000016C0 4700                   BEQ         L8043:8
      1228:            {
      1229:                Led_R_Min_ON();
      1230:                Led_O_Min_ON();
      1231:            }
      1232:            else if(g_shift_timing_cnt == 2)
  000016C2 1F20                   CMP.W       #2:3,R0
  000016C4 4600                   BNE         L8038:8
      1233:            {
      1234:                Led_R_Min_OFF();
  000016C6 6BF000000000           MOV.W       #0:4,@_g_led_r_min_flg:32
      1235:                Led_O_Min_OFF();
  000016CC 6BF000000000           MOV.W       #0:4,@_g_led_o_min_flg:32
      1236:                g_shift_timing_cnt = 0;
  000016D2 1900                   SUB.W       R0,R0
  000016D4 6BA000000000           MOV.W       R0,@__$g_shift_timing_cnt:32
  000016DA 4000                   BRA         L8038:8
  000016DC                    L8041:                                
      1237:            }
      1238:        }
      1239:        else if(g_shift_timing_flg == 2)
  000016DC 6B38000000001F20       CMP.W       #2:3,@_g_shift_timing_flg:32
  000016E4 4700                   BEQ         L8043:8
      1240:        {
      1241:            Led_R_Min_ON();
      1242:            Led_O_Min_ON();
      1243:        }
      1244:        else if(g_shift_timing_flg == 1)
  000016E6 6B38000000001F10       CMP.W       #1:3,@_g_shift_timing_flg:32
  000016EE 4600                   BNE         L8047:8
      1245:        {
      1246:            Led_R_Min_OFF();
  000016F0 6BF000000000           MOV.W       #0:4,@_g_led_r_min_flg:32
  000016F6 4000                   BRA         L8048:8
  000016F8                    L8047:                                
      1247:            Led_O_Min_ON();
      1248:        }
      1249:        else
      1250:        {
      1251:            master_warning_cnt = 0;
  000016F8 1900                   SUB.W       R0,R0
  000016FA 6BA000000000           MOV.W       R0,@__$master_warning_cnt:32
      1252:            Led_R_Min_OFF();
  00001700 6BF000000000           MOV.W       #0:4,@_g_led_r_min_flg:32
      1253:            Led_O_Min_OFF();
  00001706 6BF000000000           MOV.W       #0:4,@_g_led_o_min_flg:32
  0000170C 4000                   BRA         L8038:8
  0000170E                    L8043:                                
  0000170E 6BA200000000           MOV.W       R2,@_g_led_r_min_flg:32
  00001714                    L8048:                                
  00001714 6BA200000000           MOV.W       R2,@_g_led_o_min_flg:32
  0000171A                    L8038:                                
      1254:        }
      1255:        
      1256:        // --------------------------------------------------------------------
      1257:        // タッチパネル入力処理
      1258:        // --------------------------------------------------------------------
      1259:        Touch_Read();
  0000171A 7A0400000000           MOV.L       #_g_TouchY,ER4
  00001720 5E000000               JSR         @_Touch_Read:24
      1260:        
      1261:        // --------------------------------------------------------------------
      1262:        // タッチパネル押下判断
      1263:        // --------------------------------------------------------------------
      1264:        Touch_Decision();
      1265:        
      1266:        // --------------------------------------------------------------------
      1267:        // ブザー制御
      1268:        // --------------------------------------------------------------------
      1269:        if(g_e2p_data.E2P_1.control.BIT.beep_on == 0)   // ブザー on/off 設定により有効の時
      1270:        {
      1271:            Beep_OneShotMin_control();                  // 小ブザー 1ショット 処理
      1272:            Beep_OneShotMax_control();                  // 大ブザー 1ショット 処理
      1273:            Beep_TwoShotMin_control();                  // 小ブザー 2ショット 処理
      1274:        }
      1275:        else                                            // ブザー on/off 設定により無効の時
      1276:        {
      1277:            TPU3.TGRD = 0x0000;
      1278:            g_beep_oneshotmin_flg = 0;
      1279:            Beep_OneShotMin_cnt = 0;
      1280:            g_beep_oneshotmax_flg = 0;
      1281:            Beep_OneShotMax_cnt = 0;
      1282:            g_beep_twoshotmin_flg = 0;
      1283:            Beep_TwoShotMin_cnt = 0;
      1284:        }
      1285:    /*
      1286:        // --------------------------------------------------------------------
      1287:        // FPS計測カウンタインクリメント
      1288:        // --------------------------------------------------------------------
      1289:        g_fps_cnt ++;
      1290:        if(g_fps_cnt == 20)
      1291:        {
      1292:            g_fps_max = g_fps;
      1293:            g_fps = 0;
      1294:            g_fps_cnt = 0;
      1295:        }
      1296:        else
      1297:        {
      1298:            //
      1299:    */
      1300:        
      1301:        // --------------------------------------------------------------------
      1302:        // EXDMA転送時間待機
      1303:        // --------------------------------------------------------------------
      1304:        for(i = 0; i <= 60000; i++) dmy = i;
      1305:    }
      1306:    
      1307:    
      1308:    // --------------------------------------------------------------------
      1309:    // タッチパネル押下判断
      1310:    // --------------------------------------------------------------------
      1311:    static void Touch_Decision(void)
      1312:    {
      1313:        if((g_TouchX != 0) || (g_TouchY != 0))              // タッチ無しでは無い場合
  00001724 6B2000000000           MOV.W       @_g_TouchX:32,R0
  0000172A 4600                   BNE         L8050:8
  0000172C 6940                   MOV.W       @ER4,R0
  0000172E 4700                   BEQ         L8051:8
  00001730                    L8050:                                
      1314:        {
      1315:            if((g_TouchX != 999) || (g_TouchY != 999))      // 半押し判定では無い場合
  00001730 015E482000000000       CMP.W       #H'03E7:16,@_g_TouchX:32
           03E7               
  0000173A 4600                   BNE         L8053:8
  0000173C 015E042003E7           CMP.W       #H'03E7:16,@ER4
  00001742 4600                   BNE         L8053:8
  00001744                    L8051:                                
  00001744 1900                   SUB.W       R0,R0
  00001746 6BA000000000           MOV.W       R0,@__$touch_cnt:32
  0000174C 4000                   BRA         L8054:8
  0000174E                    L8053:                                
      1316:            {
      1317:                touch_cnt ++;       // 押下時カウントアップ
  0000174E 7A0100000000           MOV.L       #__$touch_cnt,ER1
  00001754 6910                   MOV.W       @ER1,R0
  00001756 0B50                   INC.W       #1,R0
      1318:                if(touch_cnt > 10)
  00001758 7920000A               CMP.W       #H'000A:16,R0
  0000175C 4300                   BLS         L8132:8
      1319:                touch_cnt = 10;     // リミット
  0000175E 7900000A               MOV.W       #H'000A:16,R0
  00001762                    L8132:                                
  00001762 6990                   MOV.W       R0,@ER1
  00001764                    L8054:                                
      1320:            }
      1321:            else
      1322:            {
      1323:                touch_cnt = 0;      // リリースクリア
      1324:            }
      1325:        }
      1326:        else
      1327:        {
      1328:            touch_cnt = 0;          // リリースクリア
      1329:        }
      1330:        
      1331:        if(touch_cnt == 1)          // 押下1回につき
  00001764 1F10                   CMP.W       #1:3,R0
  00001766 58600000               BNE         L8057:16
      1332:        {
      1333:            // マスターワーニング解除
      1334:            if(g_master_warning_flg1 == 1)g_master_warning_flg1 = 2;
  0000176A 7DE01F10               CMP.W       #1:3,@ER6
  0000176E 4600                   BNE         L8059:8
  00001770 015D0602               MOV.W       #2:8,@ER6
  00001774                    L8059:                                
      1335:            if(g_master_warning_flg2 == 1)g_master_warning_flg2 = 2;
  00001774 7A0100000000           MOV.L       #_g_master_warning_flg2,ER1
  0000177A 7D901F10               CMP.W       #1:3,@ER1
  0000177E 4600                   BNE         L8061:8
  00001780 015D0102               MOV.W       #2:8,@ER1
  00001784                    L8061:                                
      1336:            if(g_master_warning_flg3 == 1)g_master_warning_flg3 = 2;
  00001784 7A0100000000           MOV.L       #_g_master_warning_flg3,ER1
  0000178A 7D901F10               CMP.W       #1:3,@ER1
  0000178E 4600                   BNE         L8063:8
  00001790 015D0102               MOV.W       #2:8,@ER1
  00001794                    L8063:                                
      1337:            if(g_master_warning_flg4 == 1)g_master_warning_flg4 = 2;
  00001794 7A0100000000           MOV.L       #_g_master_warning_flg4,ER1
  0000179A 7D901F10               CMP.W       #1:3,@ER1
  0000179E 4600                   BNE         L8065:8
  000017A0 015D0102               MOV.W       #2:8,@ER1
  000017A4                    L8065:                                
      1338:            if(g_master_warning_flg5 == 1)g_master_warning_flg5 = 2;
  000017A4 7A0100000000           MOV.L       #_g_master_warning_flg5,ER1
  000017AA 7D901F10               CMP.W       #1:3,@ER1
  000017AE 4600                   BNE         L8067:8
  000017B0 015D0102               MOV.W       #2:8,@ER1
  000017B4                    L8067:                                
      1339:            if(g_master_warning_flg6 == 1)g_master_warning_flg6 = 2;
  000017B4 7A0100000000           MOV.L       #_g_master_warning_flg6,ER1
  000017BA 7D901F10               CMP.W       #1:3,@ER1
  000017BE 4600                   BNE         L8069:8
  000017C0 015D0102               MOV.W       #2:8,@ER1
  000017C4                    L8069:                                
      1340:            Beep_OneShotMin();      // ブザー小
  000017C4 6BA200000000           MOV.W       R2,@_g_beep_oneshotmin_flg:32
      1341:            touch_done_flg = 1;     // タッチ押下判定発行
  000017CA 6BA200000000           MOV.W       R2,@_touch_done_flg:32
      1342:            g_PressX = g_TouchX;    // 押下X座標
  000017D0 0158484800000000       MOV.W       @_g_TouchX:32,@_g_PressX:32
           00000000           
      1343:            g_PressY = g_TouchY;
  000017DC 0158044800000000       MOV.W       @ER4,@_g_PressY:32
  000017E4                    L8057:                                
      1344:        }
      1345:        else
      1346:        {
      1347:            //
      1348:        }
      1349:        if(touch_cnt >= 2)          // 連続押下の時
  000017E4 1F20                   CMP.W       #2:3,R0
  000017E6 4500                   BLO         L8071:8
      1350:        {
      1351:        //  Beep_OneShotMin();      // ブザー小
      1352:            touch_drag_flg = 1;     // ドラッグ判定発行
  000017E8 6BA200000000           MOV.W       R2,@_touch_drag_flg:32
      1353:            g_DragX = g_TouchX;     // 押下X座標
  000017EE 0158484800000000       MOV.W       @_g_TouchX:32,@_g_DragX:32
           00000000           
      1354:            g_DragY = g_TouchY;
  000017FA 0158044800000000       MOV.W       @ER4,@_g_DragY:32
  00001802                    L8071:                                
  00001802 6A2800000000           MOV.B       @(_g_e2p_data+3):32,R0L
  00001808 58B00000               BMI         L8073:16
      1355:        }
      1356:        else
      1357:        {
      1358:            //
      1359:        }
      1360:    }
      1361:    
      1362:    // --------------------------------------------------------------------
      1363:    // 小ブザー 1ショット 処理
      1364:    // --------------------------------------------------------------------
      1365:    static void Beep_OneShotMin_control(void)
      1366:    {
      1367:        if(g_beep_oneshotmin_flg == 1)
  0000180C 7A0300000000           MOV.L       #_g_beep_oneshotmin_flg,ER3
  00001812 7DB01F10               CMP.W       #1:3,@ER3
  00001816 4600                   BNE         L8075:8
      1368:        {
      1369:            g_beep_oneshotmin_flg = 2;
  00001818 015D0302               MOV.W       #2:8,@ER3
      1370:            Beep_OneShotMin_cnt = 0;
  0000181C 1900                   SUB.W       R0,R0
  0000181E 6BA000000000           MOV.W       R0,@__$Beep_OneShotMin_cnt:32
  00001824                    L8075:                                
      1371:        }
      1372:        else
      1373:        {
      1374:            //
      1375:        }
      1376:        
      1377:        if(g_beep_oneshotmin_flg == 2)
  00001824 7DB01F20               CMP.W       #2:3,@ER3
  00001828 4600                   BNE         L8077:8
      1378:        {
      1379:            TPU3.TGRD = 0x0100;
  0000182A 797401004000FFFE       MOV.W       #H'0100:16,@H'00FFFFFE:16
      1380:            Beep_OneShotMin_cnt ++;
  00001832 7A0100000000           MOV.L       #__$Beep_OneShotMin_cnt,ER1
  00001838 6910                   MOV.W       @ER1,R0
  0000183A 0B50                   INC.W       #1,R0
      1381:        
      1382:            if(Beep_OneShotMin_cnt >= 2)    // 0.1sec経過
  0000183C 1F20                   CMP.W       #2:3,R0
  0000183E 4500                   BLO         L8133:8
      1383:            {
      1384:                TPU3.TGRD = 0x0000;
  00001840 6BD0FFFE               MOV.W       #0:4,@H'00FFFFFE:16
      1385:                g_beep_oneshotmin_flg = 0;
  00001844 015D0300               MOV.W       #0:8,@ER3
      1386:                Beep_OneShotMin_cnt = 0;
  00001848 1900                   SUB.W       R0,R0
  0000184A                    L8133:                                
  0000184A 6990                   MOV.W       R0,@ER1
  0000184C                    L8077:                                
      1387:            }
      1388:            else
      1389:            {
      1390:                //
      1391:            }
      1392:        }
      1393:    }
      1394:    
      1395:    // --------------------------------------------------------------------
      1396:    // 大ブザー 1ショット 処理
      1397:    // --------------------------------------------------------------------
      1398:    static void Beep_OneShotMax_control(void)
      1399:    {
      1400:        if(g_beep_oneshotmax_flg == 1)
  0000184C 7A0300000000           MOV.L       #_g_beep_oneshotmax_flg,ER3
  00001852 7DB01F10               CMP.W       #1:3,@ER3
  00001856 4600                   BNE         L8080:8
      1401:        {
      1402:            g_beep_oneshotmax_flg = 2;
  00001858 015D0302               MOV.W       #2:8,@ER3
      1403:            Beep_OneShotMax_cnt = 0;
  0000185C 1900                   SUB.W       R0,R0
  0000185E 6BA000000000           MOV.W       R0,@__$Beep_OneShotMax_cnt:32
  00001864                    L8080:                                
      1404:        }
      1405:        else
      1406:        {
      1407:            //
      1408:        }
      1409:        
      1410:        if(g_beep_oneshotmax_flg == 2)
  00001864 7DB01F20               CMP.W       #2:3,@ER3
  00001868 4600                   BNE         L8082:8
      1411:        {
      1412:            TPU3.TGRD = 0x0BB8;
  0000186A 79740BB84000FFFE       MOV.W       #H'0BB8:16,@H'00FFFFFE:16
      1413:            Led_R_Min_ON();
  00001872 7A0500000000           MOV.L       #_g_led_r_min_flg,ER5
  00001878 69D2                   MOV.W       R2,@ER5
      1414:            Led_O_Min_OFF();
  0000187A 7A0400000000           MOV.L       #_g_led_o_min_flg,ER4
  00001880 015D0400               MOV.W       #0:8,@ER4
      1415:            Beep_OneShotMax_cnt ++;
  00001884 7A0100000000           MOV.L       #__$Beep_OneShotMax_cnt,ER1
  0000188A 6910                   MOV.W       @ER1,R0
  0000188C 0B50                   INC.W       #1,R0
      1416:        
      1417:            if(Beep_OneShotMax_cnt >= 5)    // 0.25sec経過
  0000188E 1F50                   CMP.W       #5:3,R0
  00001890 4500                   BLO         L8134:8
      1418:            {
      1419:                TPU3.TGRD = 0x0000;
  00001892 6BD0FFFE               MOV.W       #0:4,@H'00FFFFFE:16
      1420:                Led_R_Min_OFF();
  00001896 015D0500               MOV.W       #0:8,@ER5
      1421:                Led_O_Min_OFF();
  0000189A 015D0400               MOV.W       #0:8,@ER4
      1422:                g_beep_oneshotmax_flg = 0;
  0000189E 015D0300               MOV.W       #0:8,@ER3
      1423:                Beep_OneShotMax_cnt = 0;
  000018A2 1900                   SUB.W       R0,R0
  000018A4                    L8134:                                
  000018A4 6990                   MOV.W       R0,@ER1
  000018A6                    L8082:                                
      1424:            }
      1425:            else
      1426:            {
      1427:                //
      1428:            }
      1429:        }
      1430:    }
      1431:    
      1432:    // --------------------------------------------------------------------
      1433:    // 小ブザー 2ショット 処理
      1434:    // --------------------------------------------------------------------
      1435:    static void Beep_TwoShotMin_control(void)
      1436:    {
      1437:        if(g_beep_twoshotmin_flg == 1)
  000018A6 7A0200000000           MOV.L       #_g_beep_twoshotmin_flg,ER2
  000018AC 7DA01F10               CMP.W       #1:3,@ER2
  000018B0 4600                   BNE         L8085:8
      1438:        {
      1439:            g_beep_twoshotmin_flg = 2;
  000018B2 015D0202               MOV.W       #2:8,@ER2
      1440:            Beep_TwoShotMin_cnt = 0;
  000018B6 1900                   SUB.W       R0,R0
  000018B8 6BA000000000           MOV.W       R0,@__$Beep_TwoShotMin_cnt:32
  000018BE                    L8085:                                
      1441:        }
      1442:        else
      1443:        {
      1444:            //
      1445:        }
      1446:        
      1447:        if(g_beep_twoshotmin_flg == 2)
  000018BE 7DA01F20               CMP.W       #2:3,@ER2
  000018C2 4600                   BNE         L8087:8
      1448:        {
      1449:            Beep_TwoShotMin_cnt ++;
  000018C4 7A0100000000           MOV.L       #__$Beep_TwoShotMin_cnt,ER1
  000018CA 6910                   MOV.W       @ER1,R0
  000018CC 0B50                   INC.W       #1,R0
  000018CE 6990                   MOV.W       R0,@ER1
      1450:        
      1451:            if     (Beep_TwoShotMin_cnt == 1)   // 0.00sec経過
  000018D0 1F10                   CMP.W       #1:3,R0
  000018D2 4700                   BEQ         L8089:8
      1452:            {
      1453:                TPU3.TGRD = 0x0100;
      1454:            }
      1455:            else if(Beep_TwoShotMin_cnt == 2)   // 0.05sec経過
  000018D4 1F20                   CMP.W       #2:3,R0
  000018D6 4600                   BNE         L8091:8
      1456:            {
      1457:                TPU3.TGRD = 0x0000;
  000018D8 6BD0FFFE               MOV.W       #0:4,@H'00FFFFFE:16
  000018DC 4000                   BRA         L8087:8
  000018DE                    L8091:                                
      1458:            }
      1459:            else if(Beep_TwoShotMin_cnt == 3)   // 0.10sec経過
  000018DE 1F30                   CMP.W       #3:3,R0
  000018E0 4700                   BEQ         L8089:8
      1460:            {
      1461:                TPU3.TGRD = 0x0100;
      1462:            }
      1463:            else if(Beep_TwoShotMin_cnt >= 4)   // 0.20sec経過
  000018E2 1F40                   CMP.W       #4:3,R0
  000018E4 4500                   BLO         L8087:8
      1464:            {
      1465:                TPU3.TGRD = 0x0000;
  000018E6 6BD0FFFE               MOV.W       #0:4,@H'00FFFFFE:16
  000018EA 4000                   BRA         L8094:8
  000018EC                    L8089:                                
  000018EC 797401004000FFFE       MOV.W       #H'0100:16,@H'00FFFFFE:16
  000018F4 4000                   BRA         L8087:8
  000018F6                    L8073:                                
  000018F6 6BD0FFFE               MOV.W       #0:4,@H'00FFFFFE:16
  000018FA 6BF000000000           MOV.W       #0:4,@_g_beep_oneshotmin_flg:32
  00001900 1900                   SUB.W       R0,R0
  00001902 6BA000000000           MOV.W       R0,@__$Beep_OneShotMin_cnt:32
  00001908 6BF000000000           MOV.W       #0:4,@_g_beep_oneshotmax_flg:32
  0000190E 6BA000000000           MOV.W       R0,@__$Beep_OneShotMax_cnt:32
  00001914                    L8094:                                
  00001914 6BF000000000           MOV.W       #0:4,@_g_beep_twoshotmin_flg:32
  0000191A 1900                   SUB.W       R0,R0
  0000191C 6BA000000000           MOV.W       R0,@__$Beep_TwoShotMin_cnt:32
  00001922                    L8087:                                
  00001922 1A80                   SUB.L       ER0,ER0
  00001924                    L8095:                                
  00001924 01006BA000000000       MOV.L       ER0,@_dmy:32
  0000192C 0B70                   INC.L       #1,ER0
  0000192E 7A28EA60               CMP.L       #H'EA60:16,ER0
  00001932 4300                   BLS         L8095:8
  00001934 01006D76               POP.L       ER6
  00001938 5435                   RTS/L       (ER2-ER5)
      1466:                g_beep_twoshotmin_flg = 0;
      1467:                Beep_TwoShotMin_cnt = 0;
      1468:            }
      1469:            else
      1470:            {
      1471:                //
      1472:            }
      1473:        }
      1474:    }
      1475:    
      1476:    // --------------------------------------------------------------------
      1477:    // 定期割り込みルーチン 1mSec毎
      1478:    // --------------------------------------------------------------------
      1479:    void Int_1msFunc(void)
  0000193A                    _Int_1msFunc:                        ; function: Int_1msFunc
  0000193A 01006DF2               PUSH.L      ER2
      1480:    {
      1481:        // --------------------------------------------------------------------
      1482:        // ローカル変数宣言
      1483:        // --------------------------------------------------------------------
      1484:        static unsigned long sci_rcv_cnt;
      1485:        
      1486:        // --------------------------------------------------------------------
      1487:        // 割り込みフラグクリア
      1488:        // --------------------------------------------------------------------
      1489:        TPU6.TSR.BIT.TGFA = 0;
  0000193E 6A18FB157200           BCLR.B      #0,@H'00FFFB15:16
      1490:        
      1491:        // --------------------------------------------------------------------
      1492:        // LED点灯処理
      1493:        // --------------------------------------------------------------------
      1494:        if      (LEDonoff_cnt == 0)
  00001944 7A0100000000           MOV.L       #__$LEDonoff_cnt,ER1
  0000194A 6910                   MOV.W       @ER1,R0
  0000194C 4600                   BNE         L8099:8
      1495:        {
      1496:            if((g_led_o_max_flg) || (g_led_o_min_flg)) { PM.DR.BIT.B0 = 1;} else { PM.DR.BIT.B0 = 0; }
  0000194E 6B2000000000           MOV.W       @_g_led_o_max_flg:32,R0
  00001954 4600                   BNE         L8101:8
  00001956 6B2000000000           MOV.W       @_g_led_o_min_flg:32,R0
  0000195C 4600                   BNE         L8101:8
  0000195E 6A18EE517200           BCLR.B      #0,@H'00FFEE51:16
  00001964 4000                   BRA         L8103:8
  00001966                    L8101:                                
  00001966 6A18EE517000           BSET.B      #0,@H'00FFEE51:16
  0000196C                    L8103:                                
      1497:            if((g_led_r_max_flg) || (g_led_r_min_flg)) { PB.DR.BIT.B3 = 1;} else { PB.DR.BIT.B3 = 0; }
  0000196C 6B2000000000           MOV.W       @_g_led_r_max_flg:32,R0
  00001972 4600                   BNE         L8105:8
  00001974 6B2000000000           MOV.W       @_g_led_r_min_flg:32,R0
  0000197A 4700                   BEQ         L8106:8
  0000197C                    L8105:                                
  0000197C 7F5A7030               BSET.B      #3,@H'00FFFF5A:8
  00001980 4000                   BRA         L8107:8
  00001982                    L8099:                                
      1498:        }
      1499:        // --------------------------------------------------------------------
      1500:        // LED減光処理
      1501:        // --------------------------------------------------------------------
      1502:        else if((LEDonoff_cnt >= 1) && (LEDonoff_cnt <= 19))
  00001982 0D00                   MOV.W       R0,R0
  00001984 4700                   BEQ         L8107:8
  00001986 79200013               CMP.W       #H'0013:16,R0
  0000198A 4200                   BHI         L8107:8
      1503:        {
      1504:            if((backlight_dimmer_flg == 1) && ((g_led_o_max_flg) || (g_led_o_min_flg))) PM.DR.BIT.B0 = 0;
  0000198C 6B38000000001F10       CMP.W       #1:3,@_backlight_dimmer_flg:32
  00001994 4600                   BNE         L8111:8
  00001996 6B2000000000           MOV.W       @_g_led_o_max_flg:32,R0
  0000199C 4600                   BNE         L8113:8
  0000199E 6B2000000000           MOV.W       @_g_led_o_min_flg:32,R0
  000019A4 4700                   BEQ         L8111:8
  000019A6                    L8113:                                
  000019A6 6A18EE517200           BCLR.B      #0,@H'00FFEE51:16
  000019AC                    L8111:                                
      1505:            if((backlight_dimmer_flg == 1) && ((g_led_r_max_flg) || (g_led_r_min_flg))) PB.DR.BIT.B3 = 0;
  000019AC 6B38000000001F10       CMP.W       #1:3,@_backlight_dimmer_flg:32
  000019B4 4600                   BNE         L8107:8
  000019B6 6B2000000000           MOV.W       @_g_led_r_max_flg:32,R0
  000019BC 4600                   BNE         L8106:8
  000019BE 6B2000000000           MOV.W       @_g_led_r_min_flg:32,R0
  000019C4 4700                   BEQ         L8107:8
  000019C6                    L8106:                                
  000019C6 7F5A7230               BCLR.B      #3,@H'00FFFF5A:8
  000019CA                    L8107:                                
      1506:        }
      1507:        
      1508:        LEDonoff_cnt ++;
  000019CA 6910                   MOV.W       @ER1,R0
  000019CC 0B50                   INC.W       #1,R0
      1509:        if(LEDonoff_cnt > 19) LEDonoff_cnt = 0;
  000019CE 79200013               CMP.W       #H'0013:16,R0
  000019D2 4300                   BLS         L8135:8
  000019D4 1900                   SUB.W       R0,R0
  000019D6                    L8135:                                
  000019D6 6990                   MOV.W       R0,@ER1
      1510:        
      1511:        // --------------------------------------------------------------------
      1512:        // SCI5 コマンド処理
      1513:        // --------------------------------------------------------------------
      1514:        if      (g_e2p_data.E2P_1.model == Freedom2)
  000019D8 6A3800000000A006       CMP.B       #6:8,@(_g_e2p_data+2):32
  000019E0 58600000               BNE         L8119:16
      1515:        {
      1516:            if(g_e2p_data.E2P_1.control.BIT.FC_mode == 0)   // FC_mode FAST
  000019E4 7A0100000000           MOV.L       #__$sci_rcv_cnt$22,ER1
  000019EA 01006910               MOV.L       @ER1,ER0
  000019EE 0B70                   INC.L       #1,ER0
  000019F0 01006990               MOV.L       ER0,@ER1
  000019F4 6A30000000007750       BLD.B       #5,@(_g_e2p_data+3):32
  000019FC 4500                   BCS         L8121:8
      1517:            {
      1518:                sci_rcv_cnt ++;
      1519:                if      (sci_rcv_cnt ==   1)
  000019FE 1F98                   CMP.L       #1:3,ER0
  00001A00 4700                   BEQ         L8123:8
      1520:                {
      1521:                    UART_Tx_Char(0x3F);     // ?
      1522:                    UART_Tx_Char(0x44);     // D
      1523:                    UART_Tx_Char(0x41);     // A
      1524:                    UART_Tx_Char(0x54);     // T
      1525:                    UART_Tx_Char(0x0D);     // [CR]
      1526:                    sci_rcv_command = 0;
      1527:                    sci_rcv_pointer = 0;
      1528:                }
      1529:                else if (sci_rcv_cnt >=  70) //  単一コードで高速化
  00001A02 7A280046               CMP.L       #H'0046:16,ER0
  00001A06 4500                   BLO         L8119:8
  00001A08 4000                   BRA         L8124:8
  00001A0A                    L8121:                                
      1530:                {
      1531:                    sci_rcv_cnt = 0;
      1532:                }
      1533:                else
      1534:                {
      1535:                    //
      1536:                }
      1537:            }
      1538:            else                                            // FC_mode ALL
      1539:            {
      1540:                sci_rcv_cnt ++;
      1541:                if      (sci_rcv_cnt ==   1)
  00001A0A 1F98                   CMP.L       #1:3,ER0
  00001A0C 4700                   BEQ         L8123:8
      1542:                {
      1543:                    UART_Tx_Char(0x3F);     // ?
      1544:                    UART_Tx_Char(0x44);     // D
      1545:                    UART_Tx_Char(0x41);     // A
      1546:                    UART_Tx_Char(0x54);     // T
      1547:                    UART_Tx_Char(0x0D);     // [CR]
      1548:                    sci_rcv_command = 0;
      1549:                    sci_rcv_pointer = 0;
      1550:                }
      1551:                else if (sci_rcv_cnt ==  70)
  00001A0E 7A280046               CMP.L       #H'0046:16,ER0
  00001A12 4600                   BNE         L8127:8
      1552:                {
      1553:                    UART_Tx_Char(0x3F);     // ?
  00001A14 F83F                   MOV.B       #H'3F:8,R0L
  00001A16 7A0200000000           MOV.L       #_UART_Tx_Char,ER2
  00001A1C 5D20                   JSR         @ER2
      1554:                    UART_Tx_Char(0x48);     // H
  00001A1E F848                   MOV.B       #H'48:8,R0L
  00001A20 5D20                   JSR         @ER2
      1555:                    UART_Tx_Char(0x4F);     // O
  00001A22 F84F                   MOV.B       #H'4F:8,R0L
  00001A24 5D20                   JSR         @ER2
      1556:                    UART_Tx_Char(0x53);     // S
  00001A26 F853                   MOV.B       #H'53:8,R0L
  00001A28 5D20                   JSR         @ER2
      1557:                    UART_Tx_Char(0x0D);     // [CR]
  00001A2A F80D                   MOV.B       #H'0D:8,R0L
  00001A2C 5D20                   JSR         @ER2
      1558:                    sci_rcv_command = 1;
  00001A2E 6BF100000000           MOV.W       #1:4,@_sci_rcv_command:32
  00001A34 4000                   BRA         L8128:8
  00001A36                    L8127:                                
      1559:                    sci_rcv_pointer = 0;
      1560:                }
      1561:                else if (sci_rcv_cnt >= 140)
  00001A36 7A28008C               CMP.L       #H'008C:16,ER0
  00001A3A 4500                   BLO         L8119:8
  00001A3C                    L8124:                                
  00001A3C 1A80                   SUB.L       ER0,ER0
  00001A3E 01006990               MOV.L       ER0,@ER1
  00001A42 4000                   BRA         L8119:8
  00001A44                    L8123:                                
  00001A44 F83F                   MOV.B       #H'3F:8,R0L
  00001A46 7A0200000000           MOV.L       #_UART_Tx_Char,ER2
  00001A4C 5D20                   JSR         @ER2
  00001A4E F844                   MOV.B       #H'44:8,R0L
  00001A50 5D20                   JSR         @ER2
  00001A52 F841                   MOV.B       #H'41:8,R0L
  00001A54 5D20                   JSR         @ER2
  00001A56 F854                   MOV.B       #H'54:8,R0L
  00001A58 5D20                   JSR         @ER2
  00001A5A F80D                   MOV.B       #H'0D:8,R0L
  00001A5C 5D20                   JSR         @ER2
  00001A5E 6BF000000000           MOV.W       #0:4,@_sci_rcv_command:32
  00001A64                    L8128:                                
  00001A64 6BF000000000           MOV.W       #0:4,@_sci_rcv_pointer:32
  00001A6A                    L8119:                                
      1562:                {
      1563:                    sci_rcv_cnt = 0;
      1564:                }
      1565:                else
      1566:                {
      1567:                    //
      1568:                }
      1569:            }
      1570:    /*  }
      1571:        else if (g_e2p_data.E2P_1.model == MSquirt1)
      1572:        {
      1573:            sci_rcv_cnt ++;
      1574:    //      if      (sci_rcv_cnt ==   1)
      1575:    //      {
      1576:    //          UART_Tx_Char(0x41);     // A
      1577:    //          sci_rcv_pointer = 0;
      1578:    //      }
      1579:    //      else if (sci_rcv_cnt >=  50) //  50mSec周期 20Hz
      1580:    //      {
      1581:    //          sci_rcv_cnt = 0;
      1582:    //      }
      1583:    //      else
      1584:    //      {
      1585:    //          //
      1586:    //      }*/
      1587:        }
      1588:        else
      1589:        {
      1590:            //
      1591:        }
      1592:        
      1593:        // --------------------------------------------------------------------
      1594:        // CAN 時分割処理用タイマー
      1595:        // --------------------------------------------------------------------
      1596:        g_can_rcv_timer ++;
  00001A6A 6B38000000000A10       ADD.W       #1:3,@_g_can_rcv_timer:32
      1597:        if(g_can_rcv_timer > 10) g_can_rcv_timer = 10;
  00001A72 015E482000000000       CMP.W       #H'000A:16,@_g_can_rcv_timer:32
           000A               
  00001A7C 4300                   BLS         L8130:8
  00001A7E 6BFA00000000           MOV.W       #H'A:4,@_g_can_rcv_timer:32
  00001A84                    L8130:                                
  00001A84 5402                   RTS/L       ER2
      1598:    }
      1599:    
      1600:    #ifdef __cplusplus
      1601:    void abort(void)
      1602:    {
      1603:    
      1604:    }
      1605:    #endif
      1606:    
D                                                                  ; section
  00000000                    _version:                            ; static: version
  00000000 76312E3036             .SDATA      "v1.06"
B                                                                  ; section
  00000000                    __$can_rcv_cnt$8:                    ; static: can_rcv_cnt
  00000000 00000002               .RES.W      1
  00000002                    __$sci_rcv_cnt$22:                   ; static: sci_rcv_cnt
  00000002 00000004               .RES.L      1
  00000006                    _g_CAN_data:                         ; static: g_CAN_data
  00000006 00000030               .RES.B      48
  00000036                    _g_MoTeC1_data:                      ; static: g_MoTeC1_data
  00000036 0000002E               .RES.W      23
  00000064                    _g_Haltech1_data:                    ; static: g_Haltech1_data
  00000064 0000001A               .RES.W      13
  0000007E                    _g_Haltech2_data:                    ; static: g_Haltech2_data
  0000007E 00000026               .RES.W      19
  000000A4                    _g_Freedom2_data:                    ; static: g_Freedom2_data
  000000A4 00000032               .RES.W      25
  000000D6                    _g_refresh_done:                     ; static: g_refresh_done
  000000D6 00000002               .RES.W      1
  000000D8                    _g_led_o_max_flg:                    ; static: g_led_o_max_flg
  000000D8 00000002               .RES.W      1
  000000DA                    _g_led_o_min_flg:                    ; static: g_led_o_min_flg
  000000DA 00000002               .RES.W      1
  000000DC                    _g_led_r_max_flg:                    ; static: g_led_r_max_flg
  000000DC 00000002               .RES.W      1
  000000DE                    _g_led_r_min_flg:                    ; static: g_led_r_min_flg
  000000DE 00000002               .RES.W      1
  000000E0                    _g_can_rcv_timer:                    ; static: g_can_rcv_timer
  000000E0 00000002               .RES.W      1
  000000E2                    _g_int50mscnt:                       ; static: g_int50mscnt
  000000E2 00000004               .RES.L      1
  000000E6                    _touch_done_flg:                     ; static: touch_done_flg
  000000E6 00000002               .RES.W      1
  000000E8                    _touch_drag_flg:                     ; static: touch_drag_flg
  000000E8 00000002               .RES.W      1
  000000EA                    _g_PressX:                           ; static: g_PressX
  000000EA 00000002               .RES.W      1
  000000EC                    _g_PressY:                           ; static: g_PressY
  000000EC 00000002               .RES.W      1
  000000EE                    _g_DragX:                            ; static: g_DragX
  000000EE 00000002               .RES.W      1
  000000F0                    _g_DragY:                            ; static: g_DragY
  000000F0 00000002               .RES.W      1
  000000F2                    _g_can_error_cnt:                    ; static: g_can_error_cnt
  000000F2 00000002               .RES.W      1
  000000F4                    __$g_state:                          ; static: g_state
  000000F4 00000002               .RES.W      1
  000000F6                    __$g_model:                          ; static: g_model
  000000F6 00000002               .RES.W      1
  000000F8                    _g_Megasquirt1_data:                 ; static: g_Megasquirt1_data
  000000F8 00000018               .RES.W      12
  00000110                    __$touch_cnt:                        ; static: touch_cnt
  00000110 00000002               .RES.W      1
  00000112                    __$Beep_OneShotMin_cnt:              ; static: Beep_OneShotMin_cnt
  00000112 00000002               .RES.W      1
  00000114                    __$Beep_OneShotMax_cnt:              ; static: Beep_OneShotMax_cnt
  00000114 00000002               .RES.W      1
  00000116                    __$Beep_TwoShotMin_cnt:              ; static: Beep_TwoShotMin_cnt
  00000116 00000002               .RES.W      1
  00000118                    __$master_warning_cnt:               ; static: master_warning_cnt
  00000118 00000002               .RES.W      1
  0000011A                    __$g_shift_timing_cnt:               ; static: g_shift_timing_cnt
  0000011A 00000002               .RES.W      1
  0000011C                    __$LEDonoff_cnt:                     ; static: LEDonoff_cnt
  0000011C 00000002               .RES.W      1
  0000011E                    _dmy:                                ; static: dmy
  0000011E 00000004               .RES.L      1
  00000122                    _g_e2p_data:                         ; static: g_e2p_data
  00000122 00000093               .RES.B      147


