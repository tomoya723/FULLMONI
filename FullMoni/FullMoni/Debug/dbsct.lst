H8S,H8/300 SERIES C/C++ COMPILER (V.7.00.00.000)    2-Feb-2021 10:47:28 PAGE   1

******* STACK FRAME INFORMATION ********

FILE NAME: D:\WorkSpace\FullMoni\FullMoni\dbsct.c

H8S,H8/300 SERIES C/C++ COMPILER (V.7.00.00.000)    2-Feb-2021 10:47:28 PAGE   1

************ OBJECT LISTING ************

FILE NAME: D:\WorkSpace\FullMoni\FullMoni\dbsct.c

SCT OFFSET CODE               LABEL     INSTRUCTION OPERAND    COMMENT

         1:    /***********************************************************************/
         2:    /*                                                                     */
         3:    /*  FILE        :dbsct.c                                               */
         4:    /*  DATE        :Sun, Nov 15, 2009                                     */
         5:    /*  DESCRIPTION :Setting of B,R Section                                */
         6:    /*  CPU TYPE    :H8SX/1658                                             */
         7:    /*                                                                     */
         8:    /*  This file is generated by Renesas Project Generator (Ver.4.16).    */
         9:    /*                                                                     */
        10:    /***********************************************************************/
        11:                      
        12:    
        13:    
        14:    #include "typedefine.h"
        15:    
        16:    #pragma section $DSEC
        17:    #if __STDC_VERSION__ == 199901L
        18:    extern const struct {
        19:    #else
        20:    static const struct{
        21:    #endif
        22:        _UBYTE *rom_s;       /* Start address of the initialized data section in ROM */
        23:        _UBYTE *rom_e;       /* End address of the initialized data section in ROM   */
        24:        _UBYTE *ram_s;       /* Start address of the initialized data section in RAM */
        25:    #if __STDC_VERSION__ == 199901L
        26:    }_DTBL[]= {
        27:    #else
        28:    }DTBL[]= {
        29:    #endif
        30:        {__sectop("D"), __secend("D"), __sectop("R")},
        31:    //  {__sectop("$ABS8D"), __secend("$ABS8D"), __sectop("$ABS8R")},
        32:    //  {__sectop("$ABS16D") , __secend("$ABS16D") , __sectop("$ABS16R") }
        33:    };
        34:    #pragma section $BSEC
        35:    #if __STDC_VERSION__ == 199901L
        36:    extern const struct {
        37:    #else
        38:    static const struct {
        39:    #endif
        40:        _UBYTE *b_s;         /* Start address of non-initialized data section */
        41:        _UBYTE *b_e;         /* End address of non-initialized data section */
        42:    #if __STDC_VERSION__ == 199901L
        43:    }_BTBL[]= {
        44:    #else
        45:    }BTBL[]= {
        46:    #endif
        47:        {__sectop("B"), __secend("B")},
        48:    //  {__sectop("$ABS8B"), __secend("$ABS8B")},
        49:    //  {__sectop("$ABS16B"), __secend("$ABS16B")}
        50:    };
C$DSEC                                                             ; section
  00000000                    __$DTBL:                             ; static: DTBL
  00000000 00000000               .DATA.L     STARTOF D
  00000004 00000000               .DATA.L     STARTOF D+SIZEOF D
  00000008 00000000               .DATA.L     STARTOF R
C$BSEC                                                             ; section
  00000000                    __$BTBL:                             ; static: BTBL
  00000000 00000000               .DATA.L     STARTOF B
  00000004 00000000               .DATA.L     STARTOF B+SIZEOF B
D                                                                  ; section
R                                                                  ; section
B                                                                  ; section


